package gnu.kawa.slib;

import gnu.expr.ModuleMethod;

public class testing extends gnu.expr.ModuleBody { public static final gnu.kawa.reflect.StaticFieldLocation $Prvt$cons;
  public static final gnu.kawa.reflect.StaticFieldLocation $Prvt$cdr;
  public static final gnu.kawa.reflect.StaticFieldLocation $Prvt$assq;
  public static final gnu.kawa.reflect.StaticFieldLocation $Prvt$dynamic$Mnwind;
  public static final gnu.kawa.reflect.StaticFieldLocation $Prvt$if;
  public static final gnu.kawa.reflect.StaticFieldLocation $Prvt$cond;
  public static final gnu.kawa.reflect.StaticFieldLocation $Prvt$and;
  public static final gnu.kawa.reflect.StaticFieldLocation $Prvt$let;
  public static final gnu.kawa.reflect.StaticFieldLocation $Prvt$let$St;
  public static final gnu.kawa.reflect.StaticFieldLocation $Prvt$else;
  public static final gnu.kawa.reflect.StaticFieldLocation $Prvt$define$Mnrecord$Mntype;
  public static final gnu.kawa.reflect.StaticFieldLocation $Prvt$begin;
  public static final gnu.kawa.reflect.StaticFieldLocation $Prvt$eq$Qu;
  public static final gnu.kawa.reflect.StaticFieldLocation $Prvt$equal$Qu;
  public static final gnu.kawa.reflect.StaticFieldLocation $Prvt$eqv$Qu;
  public static final gnu.kawa.reflect.StaticFieldLocation $Prvt$lambda;
  public static final gnu.kawa.reflect.StaticFieldLocation $Prvt$list;
  public static final gnu.kawa.reflect.StaticFieldLocation $Prvt$quasiquote;
  public static final gnu.kawa.reflect.StaticFieldLocation $Prvt$quote;
  public static final gnu.kawa.reflect.StaticFieldLocation $Prvt$try$Mncatch;
  public static final int $Pcprovide$Pcsrfi$Mn64 = 123;
  public static final int $Pcprovide$Pctesting = 123;
  public static final ModuleMethod $Pctest$Mnbegin;
  public static final kawa.lang.Macro test$Mnbegin;
  public static final kawa.lang.Macro test$Mnend;
  public static final kawa.lang.Macro test$Mnassert;
  public static final kawa.lang.Macro test$Mneqv;
  public static final kawa.lang.Macro test$Mneq;
  public static final kawa.lang.Macro test$Mnequal;
  public static final kawa.lang.Macro test$Mnapproximate;
  public static final kawa.lang.Macro test$Mnerror;
  public static final ModuleMethod test$Mnapply;
  public static final kawa.lang.Macro test$Mnwith$Mnrunner;
  public static final kawa.lang.Macro test$Mnmatch$Mnnth;
  public static final kawa.lang.Macro test$Mnmatch$Mnall;
  public static final kawa.lang.Macro test$Mnmatch$Mnany;
  public static final ModuleMethod test$Mnmatch$Mnname;
  public static final kawa.lang.Macro test$Mnskip;
  public static final kawa.lang.Macro test$Mnexpect$Mnfail;
  public static final ModuleMethod test$Mnread$Mneval$Mnstring;
  public static final ModuleMethod test$Mnrunner$Mngroup$Mnpath; public static final kawa.lang.Macro test$Mngroup; public static final kawa.lang.Macro test$Mngroup$Mnwith$Mncleanup; public static final kawa.lang.Macro test$Mnresult$Mnref; public static final ModuleMethod test$Mnresult$Mnset$Ex; public static final ModuleMethod test$Mnresult$Mnclear; public static final ModuleMethod test$Mnresult$Mnremove; public static final ModuleMethod test$Mnresult$Mnkind; public static final ModuleMethod test$Mnpassed$Qu; public static boolean test$Mnlog$Mnto$Mnfile; public static final ModuleMethod test$Mnrunner$Qu; public static final ModuleMethod test$Mnrunner$Mnreset; public static final ModuleMethod test$Mnrunner$Mnnull; public static final ModuleMethod test$Mnrunner$Mnsimple; public static gnu.mapping.LocationProc test$Mnrunner$Mncurrent; public static gnu.mapping.LocationProc test$Mnrunner$Mnfactory; public static final ModuleMethod test$Mnrunner$Mnget; public static final ModuleMethod test$Mnrunner$Mncreate; public static final ModuleMethod test$Mnrunner$Mntest$Mnname; public static final ModuleMethod test$Mnrunner$Mnpass$Mncount; public static final ModuleMethod test$Mnrunner$Mnpass$Mncount$Ex; public static final ModuleMethod test$Mnrunner$Mnfail$Mncount; public static final ModuleMethod test$Mnrunner$Mnfail$Mncount$Ex; public static final ModuleMethod test$Mnrunner$Mnxpass$Mncount; public static final ModuleMethod test$Mnrunner$Mnxpass$Mncount$Ex; public static final ModuleMethod test$Mnrunner$Mnxfail$Mncount; public static final ModuleMethod test$Mnrunner$Mnxfail$Mncount$Ex; public static final ModuleMethod test$Mnrunner$Mnskip$Mncount; public static final ModuleMethod test$Mnrunner$Mnskip$Mncount$Ex; public static final ModuleMethod test$Mnrunner$Mngroup$Mnstack; public static final ModuleMethod test$Mnrunner$Mngroup$Mnstack$Ex; public static final ModuleMethod test$Mnrunner$Mnon$Mntest$Mnbegin; public static final ModuleMethod test$Mnrunner$Mnon$Mntest$Mnbegin$Ex; public static final ModuleMethod test$Mnrunner$Mnon$Mntest$Mnend; public static final ModuleMethod test$Mnrunner$Mnon$Mntest$Mnend$Ex; public static final ModuleMethod test$Mnrunner$Mnon$Mngroup$Mnbegin; public static final ModuleMethod test$Mnrunner$Mnon$Mngroup$Mnbegin$Ex; public static final ModuleMethod test$Mnrunner$Mnon$Mngroup$Mnend; public static final ModuleMethod test$Mnrunner$Mnon$Mngroup$Mnend$Ex; public static final ModuleMethod test$Mnrunner$Mnon$Mnfinal; public static final ModuleMethod test$Mnrunner$Mnon$Mnfinal$Ex; public static final ModuleMethod test$Mnrunner$Mnon$Mnbad$Mncount; public static final ModuleMethod test$Mnrunner$Mnon$Mnbad$Mncount$Ex; public static final ModuleMethod test$Mnrunner$Mnon$Mnbad$Mnend$Mnname; public static final ModuleMethod test$Mnrunner$Mnon$Mnbad$Mnend$Mnname$Ex; public static final ModuleMethod test$Mnresult$Mnalist; public static final ModuleMethod test$Mnresult$Mnalist$Ex; public static final ModuleMethod test$Mnrunner$Mnaux$Mnvalue; public static final ModuleMethod test$Mnrunner$Mnaux$Mnvalue$Ex; public static final ModuleMethod test$Mnon$Mngroup$Mnbegin$Mnsimple; public static final ModuleMethod test$Mnon$Mngroup$Mnend$Mnsimple; public static final ModuleMethod test$Mnon$Mnbad$Mncount$Mnsimple; public static final ModuleMethod test$Mnon$Mnbad$Mnend$Mnname$Mnsimple; public static final ModuleMethod test$Mnon$Mnfinal$Mnsimple; public static final ModuleMethod test$Mnon$Mntest$Mnend$Mnsimple; static final gnu.bytecode.ClassType test$Mnrunner; public static final ModuleMethod $Prvt$$Pctest$Mnrunner$Mnskip$Mnlist; public static final ModuleMethod $Prvt$$Pctest$Mnrunner$Mnskip$Mnlist$Ex; public static final ModuleMethod $Prvt$$Pctest$Mnrunner$Mnfail$Mnlist; public static final ModuleMethod $Prvt$$Pctest$Mnrunner$Mnfail$Mnlist$Ex; static final ModuleMethod $Pctest$Mnnull$Mncallback; public static final ModuleMethod $Prvt$$Pctest$Mnshould$Mnexecute; public static final ModuleMethod $Prvt$$Pctest$Mnend; static final ModuleMethod test$Mnon$Mntest$Mnbegin$Mnsimple; public static final ModuleMethod $Prvt$$Pctest$Mnreport$Mnresult; public static final kawa.lang.Macro $Prvt$$Pctest$Mnevaluate$Mnwith$Mncatch; public static final ModuleMethod $Prvt$$Pctest$Mnon$Mntest$Mnbegin; public static final ModuleMethod $Prvt$$Pctest$Mnon$Mntest$Mnend; public static final kawa.lang.Macro $Prvt$$Pctest$Mncomp2body; public static final ModuleMethod $Prvt$$Pctest$Mnapproximate$Eq; public static final kawa.lang.Macro $Prvt$$Pctest$Mncomp1body; public static final kawa.lang.Macro $Prvt$$Pctest$Mnerror; public static final ModuleMethod $Prvt$$Pctest$Mnmatch$Mnnth; public static final ModuleMethod $Prvt$$Pctest$Mnmatch$Mnall; public static final ModuleMethod $Prvt$$Pctest$Mnmatch$Mnany; public static final ModuleMethod $Prvt$$Pctest$Mnas$Mnspecifier; static final gnu.math.IntNum Lit0; static final ModuleMethod lambda$Fn1; static final ModuleMethod lambda$Fn2; static final ModuleMethod lambda$Fn3; static final gnu.mapping.SimpleSymbol Lit1; static final gnu.mapping.SimpleSymbol Lit2; static final gnu.mapping.SimpleSymbol Lit3; static final gnu.mapping.SimpleSymbol Lit4; static final gnu.mapping.SimpleSymbol Lit5; static final gnu.mapping.SimpleSymbol Lit6; static final gnu.mapping.SimpleSymbol Lit7; static final gnu.lists.PairWithPosition Lit8; static final gnu.mapping.SimpleSymbol Lit9; static final gnu.lists.PairWithPosition Lit10; static final gnu.lists.PairWithPosition Lit11; static final gnu.mapping.SimpleSymbol Lit12; static final gnu.math.IntNum Lit13; static final gnu.mapping.SimpleSymbol Lit14; static final kawa.lang.SyntaxTemplate Lit15; static final kawa.lang.SyntaxPattern Lit16; static final kawa.lang.SyntaxTemplate Lit17; static final kawa.lang.SyntaxPattern Lit18; static final kawa.lang.SyntaxTemplate Lit19; public static testing $instance; static final gnu.mapping.SimpleSymbol Lit20; static final gnu.mapping.SimpleSymbol Lit21; static final gnu.mapping.SimpleSymbol Lit22; static final gnu.mapping.SimpleSymbol Lit23; static final gnu.mapping.SimpleSymbol Lit24; static final gnu.mapping.SimpleSymbol Lit25; static final gnu.mapping.SimpleSymbol Lit26; static final gnu.mapping.SimpleSymbol Lit27; static final gnu.mapping.SimpleSymbol Lit28; static final gnu.mapping.SimpleSymbol Lit29; static final gnu.mapping.SimpleSymbol Lit30; static final gnu.mapping.SimpleSymbol Lit31; static final gnu.mapping.SimpleSymbol Lit32; static final gnu.mapping.SimpleSymbol Lit33; static final gnu.mapping.SimpleSymbol Lit34; static final gnu.mapping.SimpleSymbol Lit35; static final gnu.mapping.SimpleSymbol Lit36; static final gnu.mapping.SimpleSymbol Lit37; static final gnu.mapping.SimpleSymbol Lit38; static final gnu.mapping.SimpleSymbol Lit39; static final gnu.mapping.SimpleSymbol Lit40; static final gnu.mapping.SimpleSymbol Lit41; static final gnu.mapping.SimpleSymbol Lit42; static final gnu.mapping.SimpleSymbol Lit43; static final gnu.mapping.SimpleSymbol Lit44; static final gnu.mapping.SimpleSymbol Lit45; static final gnu.mapping.SimpleSymbol Lit46; static final gnu.mapping.SimpleSymbol Lit47; static final gnu.mapping.SimpleSymbol Lit48; static final gnu.mapping.SimpleSymbol Lit49; static final gnu.mapping.SimpleSymbol Lit50; static final gnu.mapping.SimpleSymbol Lit51; static final gnu.mapping.SimpleSymbol Lit52; static final gnu.mapping.SimpleSymbol Lit53; static final gnu.mapping.SimpleSymbol Lit54; static final gnu.mapping.SimpleSymbol Lit55; static final gnu.mapping.SimpleSymbol Lit56; static final gnu.mapping.SimpleSymbol Lit57; static final gnu.mapping.SimpleSymbol Lit58; static final gnu.mapping.SimpleSymbol Lit59; static final gnu.mapping.SimpleSymbol Lit60; static final gnu.mapping.SimpleSymbol Lit61; static final gnu.mapping.SimpleSymbol Lit62; static final gnu.mapping.SimpleSymbol Lit63; static final gnu.mapping.SimpleSymbol Lit64; static final kawa.lang.SyntaxRules Lit65; static final gnu.mapping.SimpleSymbol Lit66; static final gnu.mapping.SimpleSymbol Lit67; static final gnu.mapping.SimpleSymbol Lit68; static final gnu.mapping.SimpleSymbol Lit69; static final gnu.mapping.SimpleSymbol Lit70; static final gnu.mapping.SimpleSymbol Lit71; static final gnu.mapping.SimpleSymbol Lit72; static final kawa.lang.SyntaxRules Lit73; static final gnu.mapping.SimpleSymbol Lit74; static final kawa.lang.SyntaxRules Lit75; static final gnu.mapping.SimpleSymbol Lit76; static final gnu.mapping.SimpleSymbol Lit77; static final kawa.lang.SyntaxRules Lit78; static final gnu.mapping.SimpleSymbol Lit79; static final gnu.mapping.SimpleSymbol Lit80; static final gnu.mapping.SimpleSymbol Lit81; static final gnu.mapping.SimpleSymbol Lit82; static final gnu.mapping.SimpleSymbol Lit83; static final gnu.mapping.SimpleSymbol Lit84; static final gnu.mapping.SimpleSymbol Lit85; static final gnu.mapping.SimpleSymbol Lit86; static final kawa.lang.SyntaxRules Lit87; static final gnu.mapping.SimpleSymbol Lit88; static final gnu.mapping.SimpleSymbol Lit89; static final gnu.mapping.SimpleSymbol Lit90; static final gnu.mapping.SimpleSymbol Lit91; static final kawa.lang.SyntaxRules Lit92; static final gnu.mapping.SimpleSymbol Lit93; static final gnu.mapping.SimpleSymbol Lit94; static final kawa.lang.SyntaxRules Lit95; static final gnu.mapping.SimpleSymbol Lit96; static final kawa.lang.SyntaxTemplate Lit97; static final kawa.lang.SyntaxPattern Lit98; static final kawa.lang.SyntaxTemplate Lit99; static final kawa.lang.SyntaxPattern Lit100; static final kawa.lang.SyntaxTemplate Lit101; static final gnu.mapping.SimpleSymbol Lit102; static final kawa.lang.SyntaxTemplate Lit103; static final kawa.lang.SyntaxPattern Lit104; static final kawa.lang.SyntaxTemplate Lit105; static final kawa.lang.SyntaxPattern Lit106; static final kawa.lang.SyntaxTemplate Lit107; static final gnu.mapping.SimpleSymbol Lit108; static final kawa.lang.SyntaxTemplate Lit109; static final gnu.mapping.SimpleSymbol Lit110; static final kawa.lang.SyntaxTemplate Lit111; static final gnu.mapping.SimpleSymbol Lit112; static final kawa.lang.SyntaxTemplate Lit113; static final gnu.mapping.SimpleSymbol Lit114; static final kawa.lang.SyntaxTemplate Lit115; static final kawa.lang.SyntaxPattern Lit116; static final kawa.lang.SyntaxTemplate Lit117; static final kawa.lang.SyntaxPattern Lit118; static final kawa.lang.SyntaxTemplate Lit119; static final gnu.mapping.SimpleSymbol Lit120; static final kawa.lang.SyntaxRules Lit121; static final gnu.mapping.SimpleSymbol Lit122; static final kawa.lang.SyntaxTemplate Lit123; static final kawa.lang.SyntaxPattern Lit124; static final kawa.lang.SyntaxTemplate Lit125; static final kawa.lang.SyntaxPattern Lit126; static final kawa.lang.SyntaxTemplate Lit127; static final kawa.lang.SyntaxPattern Lit128; static final kawa.lang.SyntaxTemplate Lit129; static final gnu.mapping.SimpleSymbol Lit130; static final gnu.mapping.SimpleSymbol Lit131; static final kawa.lang.SyntaxRules Lit132; static final gnu.mapping.SimpleSymbol Lit133; static final gnu.mapping.SimpleSymbol Lit134; static final kawa.lang.SyntaxRules Lit135; static final gnu.mapping.SimpleSymbol Lit136; static final gnu.mapping.SimpleSymbol Lit137; static final kawa.lang.SyntaxRules Lit138; static final gnu.mapping.SimpleSymbol Lit139; static final gnu.mapping.SimpleSymbol Lit140; static final kawa.lang.SyntaxRules Lit141; static final gnu.mapping.SimpleSymbol Lit142; static final gnu.mapping.SimpleSymbol Lit143; static final kawa.lang.SyntaxRules Lit144; static final gnu.mapping.SimpleSymbol Lit145; static final kawa.lang.SyntaxRules Lit146; static final gnu.mapping.SimpleSymbol Lit147; static final gnu.mapping.SimpleSymbol Lit148; static final Object[] Lit149; static final gnu.mapping.SimpleSymbol Lit150; static final gnu.mapping.SimpleSymbol Lit151; static final gnu.lists.PairWithPosition Lit152; static final gnu.mapping.SimpleSymbol Lit153; static final gnu.lists.PairWithPosition Lit154; static final gnu.mapping.SimpleSymbol Lit155; static final gnu.mapping.SimpleSymbol Lit156; static final gnu.mapping.SimpleSymbol Lit157; static final gnu.lists.PairWithPosition Lit158; static final gnu.mapping.SimpleSymbol Lit159; static final gnu.mapping.SimpleSymbol Lit160; static final gnu.lists.PairWithPosition Lit161; static final gnu.lists.PairWithPosition Lit162; static final gnu.mapping.SimpleSymbol Lit163; static final gnu.mapping.SimpleSymbol Lit164; static final gnu.lists.PairWithPosition Lit165; static final gnu.lists.PairWithPosition Lit166; static final gnu.mapping.SimpleSymbol Lit167; static final gnu.mapping.SimpleSymbol Lit168; static final gnu.lists.PairWithPosition Lit169; static final gnu.lists.PairWithPosition Lit170; static final gnu.mapping.SimpleSymbol Lit171; static final gnu.lists.PairWithPosition Lit172; static final gnu.mapping.SimpleSymbol Lit173; static final gnu.mapping.SimpleSymbol Lit174; static final gnu.lists.PairWithPosition Lit175; static final gnu.lists.PairWithPosition Lit176; static final gnu.mapping.SimpleSymbol Lit177; static final gnu.lists.PairWithPosition Lit178; static final Object[] Lit179; static final gnu.mapping.SimpleSymbol Lit180; static final gnu.mapping.SimpleSymbol Lit181; static final gnu.lists.PairWithPosition Lit182; static final gnu.mapping.SimpleSymbol Lit183; static final gnu.lists.PairWithPosition Lit184; static final gnu.lists.PairWithPosition Lit185; static final gnu.mapping.SimpleSymbol Lit186; static final gnu.mapping.SimpleSymbol Lit187; static final gnu.lists.PairWithPosition Lit188; static final gnu.lists.PairWithPosition Lit189 = gnu.lists.PairWithPosition.make(testing.Lit9 = gnu.mapping.Symbol.valueOf("xpass"), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 2248760); static { Lit188 = gnu.lists.PairWithPosition.make(testing.Lit185 = gnu.lists.PairWithPosition.make(testing.Lit155 = gnu.mapping.Symbol.valueOf("test-runner-current"), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3874842), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3874842);Lit187 = gnu.mapping.Symbol.valueOf("dynamic-wind");Lit186 = gnu.mapping.Symbol.valueOf("p");Lit184 = gnu.lists.PairWithPosition.make(testing.Lit169 = gnu.lists.PairWithPosition.make(testing.Lit163 = gnu.mapping.Symbol.valueOf("quote"), gnu.lists.PairWithPosition.make(gnu.mapping.Symbol.valueOf("actual-value"), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3432478), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3432478), testing.Lit182 = gnu.lists.PairWithPosition.make(testing.Lit181 = gnu.mapping.Symbol.valueOf("res"), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 2801707), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 2801693);Lit183 = gnu.mapping.Symbol.valueOf("exp");Lit180 = gnu.mapping.Symbol.valueOf("if");(testing.Lit179 = new Object[1])[0] = Lit163;Lit178 = gnu.lists.PairWithPosition.make(Lit163, gnu.lists.PairWithPosition.make(testing.Lit7 = gnu.mapping.Symbol.valueOf("test-name"), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3670057), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3670057);Lit177 = gnu.mapping.Symbol.valueOf("name");Lit176 = gnu.lists.PairWithPosition.make(gnu.lists.PairWithPosition.make(testing.Lit85 = gnu.mapping.Symbol.valueOf("%test-report-result"), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3452936), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3452936);Lit175 = gnu.lists.PairWithPosition.make(testing.Lit167 = gnu.mapping.Symbol.valueOf("et"), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3469355);Lit174 = gnu.mapping.Symbol.valueOf("instance?");Lit173 = gnu.mapping.Symbol.valueOf("cond");Lit172 = gnu.lists.PairWithPosition.make(gnu.lists.PairWithPosition.make(Lit163, gnu.lists.PairWithPosition.make(gnu.mapping.Symbol.valueOf("actual-error"), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3444768), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3444768), gnu.lists.PairWithPosition.make(testing.Lit164 = gnu.mapping.Symbol.valueOf("ex"), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3444781), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3444767);Lit171 = gnu.mapping.Symbol.valueOf("<java.lang.Throwable>");Lit170 = gnu.lists.PairWithPosition.make(Boolean.FALSE, gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3436553);Lit168 = gnu.mapping.Symbol.valueOf("try-catch");Lit166 = gnu.lists.PairWithPosition.make(Lit163, gnu.lists.PairWithPosition.make(gnu.mapping.Symbol.valueOf("expected-error"), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3416093), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3416093);Lit165 = gnu.lists.PairWithPosition.make(Boolean.TRUE, gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3416108);Lit162 = gnu.lists.PairWithPosition.make(testing.Lit159 = gnu.mapping.Symbol.valueOf("r"), testing.Lit158 = gnu.lists.PairWithPosition.make(gnu.lists.PairWithPosition.make(testing.Lit60 = gnu.mapping.Symbol.valueOf("test-runner-get"), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 4169748), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 4169748), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3706891);Lit161 = gnu.lists.PairWithPosition.make(Lit162, gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3706890);Lit160 = gnu.mapping.Symbol.valueOf("let*");Lit157 = gnu.mapping.Symbol.valueOf("saved-runner");Lit156 = gnu.mapping.Symbol.valueOf("lambda");Lit154 = gnu.lists.PairWithPosition.make(testing.Lit150 = gnu.mapping.Symbol.valueOf("runner"), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 4182046);Lit153 = gnu.mapping.Symbol.valueOf("cons");Lit152 = gnu.lists.PairWithPosition.make(gnu.lists.PairWithPosition.make(Lit150, Lit158, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 4169740), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 4169739);Lit151 = gnu.mapping.Symbol.valueOf("let");Lit149 = new Object[0];Lit148 = gnu.mapping.Symbol.valueOf("test-read-eval-string");Lit147 = gnu.mapping.Symbol.valueOf("test-match-name"); kawa.lang.SyntaxRule[] tmp685_682 = new kawa.lang.SyntaxRule[1]; Object[] tmp719_716 = new Object[8]; Object[] tmp720_719 = tmp719_716;tmp720_719[0] = Lit151; Object[] tmp726_720 = tmp720_719;tmp726_720[1] = Lit152; Object[] tmp732_726 = tmp726_720; gnu.mapping.SimpleSymbol tmp739_736 = gnu.mapping.Symbol.valueOf("%test-runner-fail-list!");Lit34 = tmp739_736;tmp732_726[2] = tmp739_736; Object[] tmp744_732 = tmp732_726;tmp744_732[3] = Lit150; Object[] tmp750_744 = tmp744_732;tmp750_744[4] = Lit153; Object[] tmp756_750 = tmp750_744; gnu.mapping.SimpleSymbol tmp764_761 = gnu.mapping.Symbol.valueOf("test-match-all");Lit137 = tmp764_761;tmp756_750[5] = tmp764_761; Object[] tmp769_756 = tmp756_750; gnu.mapping.SimpleSymbol tmp778_775 = gnu.mapping.Symbol.valueOf("%test-as-specifier");Lit142 = tmp778_775;tmp769_756[6] = tmp778_775; gnu.mapping.SimpleSymbol tmp791_788 = gnu.mapping.Symbol.valueOf("%test-runner-fail-list");Lit33 = tmp791_788;tmp769_756[7] = gnu.lists.PairWithPosition.make(gnu.lists.PairWithPosition.make(tmp791_788, Lit154, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 4182022), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 4182022);tmp685_682[0] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\r\007\000\b\b", Lit149, 1, "testing.scm:1017"), "\003", "\021\030\004\021\030\f\b\021\030\024\021\030\034\b\021\030$Q\021\030,\b\005\021\0304\b\003\030<", tmp719_716, 1);Lit146 = new kawa.lang.SyntaxRules(Lit149, tmp685_682, 1, testing.Lit145 = gnu.mapping.Symbol.valueOf("test-expect-fail")); kawa.lang.SyntaxRule[] tmp853_850 = new kawa.lang.SyntaxRule[1]; Object[] tmp887_884 = new Object[8]; Object[] tmp888_887 = tmp887_884;tmp888_887[0] = Lit151; Object[] tmp894_888 = tmp888_887;tmp894_888[1] = Lit152; Object[] tmp900_894 = tmp894_888; gnu.mapping.SimpleSymbol tmp907_904 = gnu.mapping.Symbol.valueOf("%test-runner-skip-list!");Lit32 = tmp907_904;tmp900_894[2] = tmp907_904; Object[] tmp912_900 = tmp900_894;tmp912_900[3] = Lit150; Object[] tmp918_912 = tmp912_900;tmp918_912[4] = Lit153; Object[] tmp924_918 = tmp918_912;tmp924_918[5] = Lit137; Object[] tmp930_924 = tmp924_918;tmp930_924[6] = Lit142; gnu.mapping.SimpleSymbol tmp945_942 = gnu.mapping.Symbol.valueOf("%test-runner-skip-list");Lit31 = tmp945_942;tmp930_924[7] = gnu.lists.PairWithPosition.make(gnu.lists.PairWithPosition.make(tmp945_942, Lit154, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 4149254), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 4149254);tmp853_850[0] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\r\007\000\b\b", Lit149, 1, "testing.scm:1009"), "\003", "\021\030\004\021\030\f\b\021\030\024\021\030\034\b\021\030$Q\021\030,\b\005\021\0304\b\003\030<", tmp887_884, 1);Lit144 = new kawa.lang.SyntaxRules(Lit149, tmp853_850, 1, testing.Lit143 = gnu.mapping.Symbol.valueOf("test-skip")); kawa.lang.SyntaxRule[] tmp1007_1004 = new kawa.lang.SyntaxRule[1]; Object[] tmp1040_1037 = new Object[2]; Object[] tmp1041_1040 = tmp1040_1037; gnu.mapping.SimpleSymbol tmp1049_1046 = gnu.mapping.Symbol.valueOf("%test-match-any");Lit139 = tmp1049_1046;tmp1041_1040[0] = tmp1049_1046;tmp1041_1040[1] = Lit142;tmp1007_1004[0] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\r\007\000\b\b", Lit149, 1, "testing.scm:996"), "\003", "\021\030\004\b\005\021\030\f\b\003", tmp1040_1037, 1);Lit141 = new kawa.lang.SyntaxRules(Lit149, tmp1007_1004, 1, testing.Lit140 = gnu.mapping.Symbol.valueOf("test-match-any")); kawa.lang.SyntaxRule[] tmp1092_1089 = new kawa.lang.SyntaxRule[1]; Object[] tmp1125_1122 = new Object[2]; Object[] tmp1126_1125 = tmp1125_1122; gnu.mapping.SimpleSymbol tmp1134_1131 = gnu.mapping.Symbol.valueOf("%test-match-all");Lit136 = tmp1134_1131;tmp1126_1125[0] = tmp1134_1131;tmp1126_1125[1] = Lit142;tmp1092_1089[0] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\r\007\000\b\b", Lit149, 1, "testing.scm:980"), "\003", "\021\030\004\b\005\021\030\f\b\003", tmp1125_1122, 1);Lit138 = new kawa.lang.SyntaxRules(Lit149, tmp1092_1089, 1, Lit137); kawa.lang.SyntaxRule[] tmp1170_1167 = new kawa.lang.SyntaxRule[2]; kawa.lang.SyntaxRule[] tmp1171_1170 = tmp1170_1167; Object[] tmp1204_1201 = new Object[2]; Object[] tmp1205_1204 = tmp1204_1201; gnu.mapping.SimpleSymbol tmp1213_1210 = gnu.mapping.Symbol.valueOf("test-match-nth");Lit134 = tmp1213_1210;tmp1205_1204[0] = tmp1213_1210; gnu.math.IntNum tmp1223_1220 = gnu.math.IntNum.valueOf(1);Lit13 = tmp1223_1220;tmp1205_1204[1] = gnu.lists.PairWithPosition.make(tmp1223_1220, gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3944472);tmp1171_1170[0] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\f\007\b", Lit149, 1, "testing.scm:962"), "\001", "\021\030\004\t\003\030\f", tmp1204_1201, 0); Object[] tmp1277_1274 = new Object[1]; gnu.mapping.SimpleSymbol tmp1285_1282 = gnu.mapping.Symbol.valueOf("%test-match-nth");Lit133 = tmp1285_1282;tmp1277_1274[0] = tmp1285_1282;tmp1171_1170[1] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\f\007\f\017\b", Lit149, 2, "testing.scm:964"), "\001\001", "\021\030\004\t\003\b\013", tmp1277_1274, 0);Lit135 = new kawa.lang.SyntaxRules(Lit149, tmp1170_1167, 2, Lit134); kawa.lang.SyntaxRule[] tmp1316_1313 = new kawa.lang.SyntaxRule[1]; Object[] tmp1350_1347 = new Object[6]; Object[] tmp1351_1350 = tmp1350_1347;tmp1351_1350[0] = Lit151; Object[] tmp1357_1351 = tmp1351_1350;tmp1357_1351[1] = gnu.lists.PairWithPosition.make(gnu.lists.PairWithPosition.make(Lit157, Lit188, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3874828), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3874827); Object[] tmp1387_1357 = tmp1357_1351;tmp1387_1357[2] = Lit187; Object[] tmp1393_1387 = tmp1387_1357;tmp1393_1387[3] = Lit156; Object[] tmp1399_1393 = tmp1393_1387;tmp1399_1393[4] = Lit155;tmp1399_1393[5] = gnu.lists.PairWithPosition.make(gnu.lists.PairWithPosition.make(Lit156, gnu.lists.PairWithPosition.make(gnu.lists.LList.Empty, gnu.lists.PairWithPosition.make(gnu.lists.PairWithPosition.make(Lit155, gnu.lists.PairWithPosition.make(Lit157, gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3891244), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3891223), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3891223), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3891220), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3891212), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3891212);tmp1316_1313[0] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\f\007\r\017\b\b\b", Lit149, 2, "testing.scm:945"), "\001\003", "\021\030\004\021\030\f\b\021\030\024Y\021\030\034\t\020\b\021\030$\b\003A\021\030\034\t\020\b\r\013\030,", tmp1350_1347, 1);Lit132 = new kawa.lang.SyntaxRules(Lit149, tmp1316_1313, 2, testing.Lit131 = gnu.mapping.Symbol.valueOf("test-with-runner"));Lit130 = gnu.mapping.Symbol.valueOf("test-apply"); Object[] tmp1528_1525 = new Object[6]; Object[] tmp1529_1528 = tmp1528_1525;tmp1529_1528[0] = Lit160; Object[] tmp1535_1529 = tmp1529_1528;tmp1535_1529[1] = Lit161; Object[] tmp1541_1535 = tmp1535_1529; gnu.mapping.SimpleSymbol tmp1548_1545 = gnu.mapping.Symbol.valueOf("test-result-alist!");Lit52 = tmp1548_1545;tmp1541_1535[2] = tmp1548_1545; Object[] tmp1553_1541 = tmp1541_1535;tmp1553_1541[3] = Lit159; Object[] tmp1559_1553 = tmp1553_1541; gnu.mapping.SimpleSymbol tmp1567_1564 = gnu.mapping.Symbol.valueOf("%test-error");Lit120 = tmp1567_1564;tmp1559_1553[4] = tmp1567_1564;tmp1559_1553[5] = Boolean.TRUE;Lit129 = new kawa.lang.SyntaxTemplate("\001\001\001", "\021\030\004\021\030\fA\021\030\024\021\030\034\b\023\b\021\030$\021\030\034\t,\b\013", tmp1528_1525, 0);Lit128 = new kawa.lang.SyntaxPattern(",\f\007\f\017\b\f\027\b", Lit149, 3, "testing.scm:903"); Object[] tmp1618_1615 = new Object[5]; Object[] tmp1619_1618 = tmp1618_1615;tmp1619_1618[0] = Lit160; Object[] tmp1625_1619 = tmp1619_1618;tmp1625_1619[1] = Lit161; Object[] tmp1631_1625 = tmp1625_1619;tmp1631_1625[2] = Lit52; Object[] tmp1637_1631 = tmp1631_1625;tmp1637_1631[3] = Lit159;tmp1637_1631[4] = Lit120;Lit127 = new kawa.lang.SyntaxTemplate("\001\001\001\001", "\021\030\004\021\030\fA\021\030\024\021\030\034\b\033\b\021\030$\021\030\034\t\013\b\023", tmp1618_1615, 0);Lit126 = new kawa.lang.SyntaxPattern("<\f\007\f\017\f\027\b\f\037\b", Lit149, 4, "testing.scm:898"); Object[] tmp1690_1687 = new Object[8]; Object[] tmp1691_1690 = tmp1690_1687;tmp1691_1690[0] = Lit160; Object[] tmp1697_1691 = tmp1691_1690;tmp1697_1691[1] = Lit162; Object[] tmp1703_1697 = tmp1697_1691;tmp1703_1697[2] = Lit177; Object[] tmp1709_1703 = tmp1703_1697;tmp1709_1703[3] = Lit52; Object[] tmp1715_1709 = tmp1709_1703;tmp1715_1709[4] = Lit159; Object[] tmp1721_1715 = tmp1715_1709;tmp1721_1715[5] = Lit153; Object[] tmp1727_1721 = tmp1721_1715;tmp1727_1721[6] = Lit178;tmp1727_1721[7] = Lit120;Lit125 = new kawa.lang.SyntaxTemplate("\001\001\001\001\001", "\021\030\004I\021\030\f\b\021\030\024\b\013©\021\030\034\021\030$\b\021\030,A\021\030,\021\0304\b\013\b#\b\021\030<\021\030$\t\023\b\033", tmp1690_1687, 0);Lit124 = new kawa.lang.SyntaxPattern("L\f\007\f\017\f\027\f\037\b\f'\b", Lit149, 5, "testing.scm:892");Lit123 = new kawa.lang.SyntaxTemplate("", "\030\004", Lit179, 0);Lit122 = gnu.mapping.Symbol.valueOf("test-error"); kawa.lang.SyntaxRule[] tmp1807_1804 = new kawa.lang.SyntaxRule[2]; kawa.lang.SyntaxRule[] tmp1808_1807 = tmp1807_1804; Object[] tmp1849_1846 = new Object[14]; Object[] tmp1850_1849 = tmp1849_1846;tmp1850_1849[0] = Lit173; Object[] tmp1856_1850 = tmp1850_1849; gnu.mapping.SimpleSymbol tmp1864_1861 = gnu.mapping.Symbol.valueOf("%test-on-test-begin");Lit88 = tmp1864_1861;tmp1856_1850[1] = tmp1864_1861; Object[] tmp1869_1856 = tmp1856_1850; gnu.mapping.SimpleSymbol tmp1877_1874 = gnu.mapping.Symbol.valueOf("test-result-set!");Lit80 = tmp1877_1874;tmp1869_1856[2] = tmp1877_1874; Object[] tmp1882_1869 = tmp1869_1856;tmp1882_1869[3] = gnu.lists.PairWithPosition.make(Lit166, Lit165, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3416092); Object[] tmp1900_1882 = tmp1882_1869; gnu.mapping.SimpleSymbol tmp1908_1905 = gnu.mapping.Symbol.valueOf("%test-on-test-end");Lit89 = tmp1908_1905;tmp1900_1882[4] = tmp1908_1905; Object[] tmp1913_1900 = tmp1900_1882;tmp1913_1900[5] = Lit168; Object[] tmp1919_1913 = tmp1913_1900;tmp1919_1913[6] = Lit151; Object[] tmp1926_1919 = tmp1919_1913;tmp1926_1919[7] = Lit169; Object[] tmp1933_1926 = tmp1926_1919;tmp1933_1926[8] = Lit170; Object[] tmp1940_1933 = tmp1933_1926;tmp1940_1933[9] = Lit164; Object[] tmp1947_1940 = tmp1940_1933;tmp1947_1940[10] = Lit171; Object[] tmp1954_1947 = tmp1947_1940;tmp1954_1947[11] = Lit172; Object[] tmp1961_1954 = tmp1954_1947;tmp1961_1954[12] = Lit165;tmp1961_1954[13] = Lit176;tmp1808_1807[0] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\f\007\f\002\f\017\b", new Object[] { Boolean.TRUE }, 2, "testing.scm:832"), "\001\001", "\021\030\004\b)\021\030\f\b\0039\021\030\024\t\003\030\034ũ\021\030$\t\003\b\021\030,\021\0304\t\020Q\021\030\024\t\003\021\030<\b\013\030D\b\021\030L\021\030T9\021\030\024\t\003\030\\\030d\030l", tmp1849_1846, 0); Object[] tmp2012_2009 = new Object[15]; Object[] tmp2013_2012 = tmp2012_2009;tmp2013_2012[0] = Lit180; Object[] tmp2019_2013 = tmp2013_2012;tmp2019_2013[1] = Lit88; Object[] tmp2025_2019 = tmp2019_2013;tmp2025_2019[2] = Lit151; Object[] tmp2031_2025 = tmp2025_2019;tmp2031_2025[3] = Lit167; Object[] tmp2037_2031 = tmp2031_2025;tmp2037_2031[4] = Lit80; Object[] tmp2043_2037 = tmp2037_2031;tmp2043_2037[5] = gnu.lists.PairWithPosition.make(Lit166, Lit175, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3469339); Object[] tmp2061_2043 = tmp2043_2037;tmp2061_2043[6] = Lit89; Object[] tmp2068_2061 = tmp2061_2043;tmp2068_2061[7] = Lit168; Object[] tmp2075_2068 = tmp2068_2061;tmp2075_2068[8] = Lit169; Object[] tmp2082_2075 = tmp2075_2068;tmp2082_2075[9] = Lit170; Object[] tmp2089_2082 = tmp2082_2075;tmp2089_2082[10] = Lit164; Object[] tmp2096_2089 = tmp2089_2082;tmp2096_2089[11] = Lit171; Object[] tmp2103_2096 = tmp2096_2089;tmp2103_2096[12] = Lit172; Object[] tmp2110_2103 = tmp2103_2096;tmp2110_2103[13] = gnu.lists.PairWithPosition.make(gnu.lists.PairWithPosition.make(Lit173, gnu.lists.PairWithPosition.make(gnu.lists.PairWithPosition.make(gnu.lists.PairWithPosition.make(gnu.mapping.Symbol.valueOf("and"), gnu.lists.PairWithPosition.make(gnu.lists.PairWithPosition.make(Lit174, gnu.lists.PairWithPosition.make(Lit167, gnu.lists.PairWithPosition.make(gnu.mapping.Symbol.valueOf("<gnu.bytecode.ClassType>"), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3502116), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3502113), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3502102), gnu.lists.PairWithPosition.make(gnu.lists.PairWithPosition.make(gnu.lists.PairWithPosition.make(gnu.mapping.Symbol.valueOf("$lookup$"), gnu.lists.Pair.make(gnu.mapping.Symbol.valueOf("gnu.bytecode.ClassType"), gnu.lists.Pair.make(gnu.lists.Pair.make(gnu.mapping.Symbol.valueOf("quasiquote"), gnu.lists.Pair.make(gnu.mapping.Symbol.valueOf("isSubclass"), gnu.lists.LList.Empty)), gnu.lists.LList.Empty)), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3506185), gnu.lists.PairWithPosition.make(Lit167, gnu.lists.PairWithPosition.make(Lit171, gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3506222), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3506219), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3506184), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3506184), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3502102), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3502097), gnu.lists.PairWithPosition.make(gnu.lists.PairWithPosition.make(Lit174, gnu.lists.PairWithPosition.make(Lit164, Lit175, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3510293), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3510282), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3510282), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3502096), gnu.lists.PairWithPosition.make(gnu.lists.PairWithPosition.make(gnu.mapping.Symbol.valueOf("else"), Lit165, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3514377), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3514377), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3502096), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3502090), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 3502090);tmp2110_2103[14] = Lit176;tmp1808_1807[1] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\f\007\f\017\f\027\b", Lit149, 3, "testing.scm:844"), "\001\001\001", "\021\030\004)\021\030\f\b\003\b\021\030\0241\b\021\030\034\b\0139\021\030$\t\003\030,ũ\021\0304\t\003\b\021\030<\021\030\024\t\020Q\021\030$\t\003\021\030D\b\023\030L\b\021\030T\021\030\\9\021\030$\t\003\030d\030l\030t", tmp2012_2009, 0);Lit121 = new kawa.lang.SyntaxRules(Lit149, tmp1807_1804, 3, Lit120); Object[] tmp2426_2423 = new Object[6]; Object[] tmp2427_2426 = tmp2426_2423;tmp2427_2426[0] = Lit160; Object[] tmp2433_2427 = tmp2427_2426;tmp2433_2427[1] = Lit161; Object[] tmp2439_2433 = tmp2433_2427;tmp2439_2433[2] = Lit52; Object[] tmp2445_2439 = tmp2439_2433;tmp2445_2439[3] = Lit159; Object[] tmp2451_2445 = tmp2445_2439; gnu.mapping.SimpleSymbol tmp2459_2456 = gnu.mapping.Symbol.valueOf("%test-comp2body");Lit91 = tmp2459_2456;tmp2451_2445[4] = tmp2459_2456; gnu.mapping.SimpleSymbol tmp2471_2468 = gnu.mapping.Symbol.valueOf("%test-approximate=");Lit93 = tmp2471_2468;tmp2451_2445[5] = tmp2471_2468;Lit119 = new kawa.lang.SyntaxTemplate("\001\001\001\001\001", "\021\030\004\021\030\fA\021\030\024\021\030\034\b#\b\021\030$\021\030\034)\021\030,\b\033\t\013\b\023", tmp2426_2423, 0);Lit118 = new kawa.lang.SyntaxPattern("L\f\007\f\017\f\027\f\037\b\f'\b", Lit149, 5, "testing.scm:743"); Object[] tmp2518_2515 = new Object[9]; Object[] tmp2519_2518 = tmp2518_2515;tmp2519_2518[0] = Lit160; Object[] tmp2525_2519 = tmp2519_2518;tmp2525_2519[1] = Lit162; Object[] tmp2531_2525 = tmp2525_2519;tmp2531_2525[2] = Lit177; Object[] tmp2537_2531 = tmp2531_2525;tmp2537_2531[3] = Lit52; Object[] tmp2543_2537 = tmp2537_2531;tmp2543_2537[4] = Lit159; Object[] tmp2549_2543 = tmp2543_2537;tmp2549_2543[5] = Lit153; Object[] tmp2555_2549 = tmp2549_2543;tmp2555_2549[6] = Lit178; Object[] tmp2562_2555 = tmp2555_2549;tmp2562_2555[7] = Lit91;tmp2562_2555[8] = Lit93;Lit117 = new kawa.lang.SyntaxTemplate("\001\001\001\001\001\001", "\021\030\004I\021\030\f\b\021\030\024\b\013©\021\030\034\021\030$\b\021\030,A\021\030,\021\0304\b\013\b+\b\021\030<\021\030$)\021\030D\b#\t\023\b\033", tmp2518_2515, 0);Lit116 = new kawa.lang.SyntaxPattern("\\\f\007\f\017\f\027\f\037\f'\b\f/\b", Lit149, 6, "testing.scm:737");Lit115 = new kawa.lang.SyntaxTemplate("", "\030\004", Lit179, 0);Lit114 = gnu.mapping.Symbol.valueOf("test-approximate");Lit113 = new kawa.lang.SyntaxTemplate("", "\030\004", new Object[] { gnu.mapping.Symbol.valueOf("equal?") }, 0);Lit112 = gnu.mapping.Symbol.valueOf("test-equal");Lit111 = new kawa.lang.SyntaxTemplate("", "\030\004", new Object[] { gnu.mapping.Symbol.valueOf("eq?") }, 0);Lit110 = gnu.mapping.Symbol.valueOf("test-eq");Lit109 = new kawa.lang.SyntaxTemplate("", "\030\004", new Object[] { gnu.mapping.Symbol.valueOf("eqv?") }, 0);Lit108 = gnu.mapping.Symbol.valueOf("test-eqv"); Object[] tmp2763_2760 = new Object[5]; Object[] tmp2764_2763 = tmp2763_2760;tmp2764_2763[0] = Lit160; Object[] tmp2770_2764 = tmp2764_2763;tmp2770_2764[1] = Lit161; Object[] tmp2776_2770 = tmp2770_2764;tmp2776_2770[2] = Lit52; Object[] tmp2782_2776 = tmp2776_2770;tmp2782_2776[3] = Lit159; gnu.mapping.SimpleSymbol tmp2795_2792 = gnu.mapping.Symbol.valueOf("%test-comp1body");Lit94 = tmp2795_2792;tmp2782_2776[4] = tmp2795_2792;Lit107 = new kawa.lang.SyntaxTemplate("\001\001\001", "\021\030\004\021\030\fA\021\030\024\021\030\034\b\023\b\021\030$\021\030\034\b\013", tmp2763_2760, 0);Lit106 = new kawa.lang.SyntaxPattern(",\f\007\f\017\b\f\027\b", Lit149, 3, "testing.scm:710"); Object[] tmp2842_2839 = new Object[8]; Object[] tmp2843_2842 = tmp2842_2839;tmp2843_2842[0] = Lit160; Object[] tmp2849_2843 = tmp2843_2842;tmp2849_2843[1] = Lit162; Object[] tmp2855_2849 = tmp2849_2843;tmp2855_2849[2] = Lit177; Object[] tmp2861_2855 = tmp2855_2849;tmp2861_2855[3] = Lit52; Object[] tmp2867_2861 = tmp2861_2855;tmp2867_2861[4] = Lit159; Object[] tmp2873_2867 = tmp2867_2861;tmp2873_2867[5] = Lit153; Object[] tmp2879_2873 = tmp2873_2867;tmp2879_2873[6] = Lit178;tmp2879_2873[7] = Lit94;Lit105 = new kawa.lang.SyntaxTemplate("\001\001\001\001", "\021\030\004I\021\030\f\b\021\030\024\b\013©\021\030\034\021\030$\b\021\030,A\021\030,\021\0304\b\013\b\033\b\021\030<\021\030$\b\023", tmp2842_2839, 0);Lit104 = new kawa.lang.SyntaxPattern("<\f\007\f\017\f\027\b\f\037\b", Lit149, 4, "testing.scm:704");Lit103 = new kawa.lang.SyntaxTemplate("", "\030\004", Lit179, 0);Lit102 = gnu.mapping.Symbol.valueOf("test-assert"); Object[] tmp2962_2959 = new Object[2]; Object[] tmp2963_2962 = tmp2962_2959; gnu.mapping.SimpleSymbol tmp2971_2968 = gnu.mapping.Symbol.valueOf("%test-end");Lit71 = tmp2971_2968;tmp2963_2962[0] = tmp2971_2968;tmp2963_2962[1] = Boolean.FALSE;Lit101 = new kawa.lang.SyntaxTemplate("\001\001", "\021\030\004\t\f\b\013", tmp2962_2959, 0);Lit100 = new kawa.lang.SyntaxPattern("\034\f\007\b\f\017\b", Lit149, 2, "testing.scm:698");Lit99 = new kawa.lang.SyntaxTemplate("\001\001\001", "\021\030\004\t\013\b\023", new Object[] { Lit71 }, 0);Lit98 = new kawa.lang.SyntaxPattern(",\f\007\f\017\b\f\027\b", Lit149, 3, "testing.scm:695");Lit97 = new kawa.lang.SyntaxTemplate("", "\030\004", Lit179, 0);Lit96 = gnu.mapping.Symbol.valueOf("test-end"); kawa.lang.SyntaxRule[] tmp3095_3092 = new kawa.lang.SyntaxRule[1]; Object[] tmp3129_3126 = new Object[10]; Object[] tmp3130_3129 = tmp3129_3126;tmp3130_3129[0] = Lit151; Object[] tmp3136_3130 = tmp3130_3129;tmp3136_3130[1] = Lit180; Object[] tmp3142_3136 = tmp3136_3130;tmp3142_3136[2] = Lit88; Object[] tmp3148_3142 = tmp3142_3136;tmp3148_3142[3] = Lit181; Object[] tmp3154_3148 = tmp3148_3142; gnu.mapping.SimpleSymbol tmp3162_3159 = gnu.mapping.Symbol.valueOf("%test-evaluate-with-catch");Lit86 = tmp3162_3159;tmp3154_3148[4] = tmp3162_3159; Object[] tmp3167_3154 = tmp3154_3148;tmp3167_3154[5] = Lit80; Object[] tmp3173_3167 = tmp3167_3154;tmp3173_3167[6] = Lit184; Object[] tmp3180_3173 = tmp3173_3167;tmp3180_3173[7] = Lit89; Object[] tmp3187_3180 = tmp3180_3173;tmp3187_3180[8] = Lit182;tmp3187_3180[9] = Lit176;tmp3095_3092[0] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\f\007\f\017\b", Lit149, 2, "testing.scm:679"), "\001\001", "\021\030\004\t\020ű\021\030\f)\021\030\024\b\003\b\021\030\004\t\020\b\021\030\004Q\b\021\030\034\b\021\030$\b\0139\021\030,\t\003\0304\b\021\030<\t\003\030D\030L", tmp3129_3126, 0);Lit95 = new kawa.lang.SyntaxRules(Lit149, tmp3095_3092, 2, Lit94); kawa.lang.SyntaxRule[] tmp3226_3223 = new kawa.lang.SyntaxRule[1]; Object[] tmp3260_3257 = new Object[12]; Object[] tmp3261_3260 = tmp3260_3257;tmp3261_3260[0] = Lit151; Object[] tmp3267_3261 = tmp3261_3260;tmp3267_3261[1] = Lit180; Object[] tmp3273_3267 = tmp3267_3261;tmp3273_3267[2] = Lit88; Object[] tmp3279_3273 = tmp3273_3267;tmp3279_3273[3] = Lit183; Object[] tmp3285_3279 = tmp3279_3273;tmp3285_3279[4] = Lit80; Object[] tmp3291_3285 = tmp3285_3279;tmp3291_3285[5] = gnu.lists.PairWithPosition.make(gnu.lists.PairWithPosition.make(Lit163, gnu.lists.PairWithPosition.make(gnu.mapping.Symbol.valueOf("expected-value"), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 2703386), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 2703386), gnu.lists.PairWithPosition.make(Lit183, gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 2703401), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 2703385); Object[] tmp3348_3291 = tmp3291_3285;tmp3348_3291[6] = Lit181; Object[] tmp3355_3348 = tmp3348_3291;tmp3355_3348[7] = Lit86; Object[] tmp3362_3355 = tmp3355_3348;tmp3362_3355[8] = Lit184; Object[] tmp3369_3362 = tmp3362_3355;tmp3369_3362[9] = Lit89; Object[] tmp3376_3369 = tmp3369_3362;tmp3376_3369[10] = gnu.lists.PairWithPosition.make(Lit183, Lit182, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 2715682);tmp3376_3369[11] = Lit176;tmp3226_3223[0] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\f\007\f\017\f\027\f\037\b", Lit149, 4, "testing.scm:656"), "\001\001\001\001", "\021\030\004\t\020Ǳ\021\030\f)\021\030\024\b\003\b\021\030\0041\b\021\030\034\b\0239\021\030$\t\003\030,\b\021\030\004Q\b\021\0304\b\021\030<\b\0339\021\030$\t\003\030D\b\021\030L\t\003\b\t\013\030T\030\\", tmp3260_3257, 0);Lit92 = new kawa.lang.SyntaxRules(Lit149, tmp3226_3223, 4, Lit91);Lit90 = gnu.mapping.Symbol.valueOf("test-runner-test-name"); kawa.lang.SyntaxRule[] tmp3436_3433 = new kawa.lang.SyntaxRule[1]; Object[] tmp3469_3466 = new Object[2]; Object[] tmp3470_3469 = tmp3469_3466;tmp3470_3469[0] = Lit168;tmp3470_3469[1] = gnu.lists.PairWithPosition.make(gnu.lists.PairWithPosition.make(Lit164, gnu.lists.PairWithPosition.make(Lit171, gnu.lists.PairWithPosition.make(gnu.lists.PairWithPosition.make(Lit80, gnu.lists.PairWithPosition.make(Lit185, Lit172, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 2396187), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 2396169), Lit170, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 2396169), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 2392073), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 2392069), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 2392069);tmp3436_3433[0] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\f\007\b", Lit149, 1, "testing.scm:582"), "\001", "\021\030\004\t\003\030\f", tmp3469_3466, 0);Lit87 = new kawa.lang.SyntaxRules(Lit149, tmp3436_3433, 1, Lit86);Lit84 = gnu.mapping.Symbol.valueOf("test-passed?");Lit83 = gnu.mapping.Symbol.valueOf("test-result-kind");Lit82 = gnu.mapping.Symbol.valueOf("test-result-remove");Lit81 = gnu.mapping.Symbol.valueOf("test-result-clear");Lit79 = gnu.mapping.Symbol.valueOf("test-on-test-end-simple"); kawa.lang.SyntaxRule[] tmp3624_3621 = new kawa.lang.SyntaxRule[2]; kawa.lang.SyntaxRule[] tmp3625_3624 = tmp3624_3621; Object[] tmp3658_3655 = new Object[2]; Object[] tmp3659_3658 = tmp3658_3655; gnu.mapping.SimpleSymbol tmp3667_3664 = gnu.mapping.Symbol.valueOf("test-result-ref");Lit77 = tmp3667_3664;tmp3659_3658[0] = tmp3667_3664;tmp3659_3658[1] = Lit170;tmp3625_3624[0] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\f\007\f\017\b", Lit149, 2, "testing.scm:478"), "\001\001", "\021\030\004\t\003\t\013\030\f", tmp3658_3655, 0); Object[] tmp3715_3712 = new Object[6]; Object[] tmp3716_3715 = tmp3715_3712;tmp3716_3715[0] = Lit151; Object[] tmp3722_3716 = tmp3716_3715;tmp3722_3716[1] = Lit186; Object[] tmp3728_3722 = tmp3722_3716;tmp3728_3722[2] = gnu.mapping.Symbol.valueOf("assq"); Object[] tmp3737_3728 = tmp3728_3722; gnu.mapping.SimpleSymbol tmp3745_3742 = gnu.mapping.Symbol.valueOf("test-result-alist");Lit51 = tmp3745_3742;tmp3737_3728[3] = tmp3745_3742; Object[] tmp3750_3737 = tmp3737_3728;tmp3750_3737[4] = Lit180;tmp3750_3737[5] = gnu.lists.PairWithPosition.make(gnu.mapping.Symbol.valueOf("cdr"), gnu.lists.PairWithPosition.make(Lit186, gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 1974291), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 1974286);tmp3625_3624[1] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\f\007\f\017\f\027\b", Lit149, 3, "testing.scm:480"), "\001\001\001", "\021\030\004\b\021\030\f\b\021\030\024\t\013\b\021\030\034\b\003\b\021\030$\021\030\f\021\030,\b\023", tmp3715_3712, 0);Lit78 = new kawa.lang.SyntaxRules(Lit149, tmp3624_3621, 3, Lit77);Lit76 = gnu.mapping.Symbol.valueOf("test-on-test-begin-simple"); kawa.lang.SyntaxRule[] tmp3823_3820 = new kawa.lang.SyntaxRule[3]; kawa.lang.SyntaxRule[] tmp3824_3823 = tmp3823_3820; Object[] tmp3857_3854 = new Object[4]; Object[] tmp3858_3857 = tmp3857_3854; gnu.mapping.SimpleSymbol tmp3866_3863 = gnu.mapping.Symbol.valueOf("test-group");Lit72 = tmp3866_3863;tmp3858_3857[0] = tmp3866_3863; Object[] tmp3871_3858 = tmp3858_3857;tmp3871_3858[1] = Lit187; Object[] tmp3877_3871 = tmp3871_3858;tmp3877_3871[2] = gnu.lists.PairWithPosition.make(Lit156, gnu.lists.PairWithPosition.make(gnu.lists.LList.Empty, Lit170, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 1855500), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 1855492);tmp3877_3871[3] = Lit156;tmp3824_3823[0] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\f\007\f\017\f\027\b", Lit149, 3, "testing.scm:450"), "\001\001\001", "\021\030\004\t\003\b\021\030\f\021\030\0249\021\030\034\t\020\b\013\b\021\030\034\t\020\b\023", tmp3857_3854, 0); kawa.lang.SyntaxRule[] tmp3917_3824 = tmp3824_3823; Object[] tmp3950_3947 = new Object[2]; Object[] tmp3951_3950 = tmp3950_3947; gnu.mapping.SimpleSymbol tmp3959_3956 = gnu.mapping.Symbol.valueOf("test-group-with-cleanup");Lit74 = tmp3959_3956;tmp3951_3950[0] = tmp3959_3956;tmp3951_3950[1] = Boolean.FALSE;tmp3917_3824[1] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\f\007\f\017\b", Lit149, 2, "testing.scm:456"), "\001\001", "\021\030\004\t\003\t\f\b\013", tmp3950_3947, 0); Object[] tmp4006_4003 = new Object[2]; Object[] tmp4007_4006 = tmp4006_4003;tmp4007_4006[0] = Lit74;tmp4007_4006[1] = gnu.mapping.Symbol.valueOf("begin");tmp3917_3824[2] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\f\007\f\017\f\027\f\037#", Lit149, 5, "testing.scm:458"), "\001\001\001\001\000", "\021\030\004\t\0039\021\030\f\t\013\b\023\t\033\"", tmp4006_4003, 0);Lit75 = new kawa.lang.SyntaxRules(Lit149, tmp3823_3820, 5, Lit74); kawa.lang.SyntaxRule[] tmp4047_4044 = new kawa.lang.SyntaxRule[1]; Object[] tmp4081_4078 = new Object[13]; Object[] tmp4082_4081 = tmp4081_4078;tmp4082_4081[0] = Lit151; Object[] tmp4088_4082 = tmp4082_4081;tmp4088_4082[1] = gnu.lists.PairWithPosition.make(gnu.lists.PairWithPosition.make(Lit159, Lit188, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 1798156), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 1798155); Object[] tmp4118_4088 = tmp4088_4082;tmp4118_4088[2] = Lit52; Object[] tmp4124_4118 = tmp4118_4088;tmp4124_4118[3] = Lit159; Object[] tmp4130_4124 = tmp4124_4118;tmp4130_4124[4] = gnu.mapping.Symbol.valueOf("list"); Object[] tmp4139_4130 = tmp4130_4124;tmp4139_4130[5] = Lit153; Object[] tmp4145_4139 = tmp4139_4130;tmp4145_4139[6] = Lit178; Object[] tmp4152_4145 = tmp4145_4139;tmp4152_4145[7] = Lit180; Object[] tmp4159_4152 = tmp4152_4145; gnu.mapping.SimpleSymbol tmp4168_4165 = gnu.mapping.Symbol.valueOf("%test-should-execute");Lit62 = tmp4168_4165;tmp4159_4152[8] = gnu.lists.PairWithPosition.make(tmp4168_4165, gnu.lists.PairWithPosition.make(Lit159, gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 1810466), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 1810444); Object[] tmp4197_4159 = tmp4159_4152;tmp4197_4159[9] = Lit187; Object[] tmp4204_4197 = tmp4197_4159;tmp4204_4197[10] = Lit156; Object[] tmp4211_4204 = tmp4204_4197; gnu.mapping.SimpleSymbol tmp4220_4217 = gnu.mapping.Symbol.valueOf("test-begin");Lit64 = tmp4220_4217;tmp4211_4204[11] = tmp4220_4217;tmp4211_4204[12] = Lit96;tmp4047_4044[0] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\f\007\013", Lit149, 2, "testing.scm:438"), "\001\000", "\021\030\004\021\030\f\021\030\024\021\030\034\b\021\030$\b\021\030,\021\0304\b\003\b\021\030<\021\030D\b\021\030LY\021\030T\t\020\b\021\030\\\b\0031\021\030T\t\020\n\b\021\030T\t\020\b\021\030d\b\003", tmp4081_4078, 0);Lit73 = new kawa.lang.SyntaxRules(Lit149, tmp4047_4044, 2, Lit72);Lit70 = gnu.mapping.Symbol.valueOf("test-on-final-simple");Lit69 = gnu.mapping.Symbol.valueOf("test-on-bad-end-name-simple");Lit68 = gnu.mapping.Symbol.valueOf("test-on-bad-count-simple");Lit67 = gnu.mapping.Symbol.valueOf("test-on-group-end-simple");Lit66 = gnu.mapping.Symbol.valueOf("test-on-group-begin-simple"); kawa.lang.SyntaxRule[] tmp4302_4299 = new kawa.lang.SyntaxRule[2]; kawa.lang.SyntaxRule[] tmp4303_4302 = tmp4302_4299; Object[] tmp4336_4333 = new Object[2]; Object[] tmp4337_4336 = tmp4336_4333; gnu.mapping.SimpleSymbol tmp4345_4342 = gnu.mapping.Symbol.valueOf("%test-begin");Lit63 = tmp4345_4342;tmp4337_4336[0] = tmp4345_4342;tmp4337_4336[1] = Lit170;tmp4303_4302[0] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\f\007\b", Lit149, 1, "testing.scm:305"), "\001", "\021\030\004\t\003\030\f", tmp4336_4333, 0);tmp4303_4302[1] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\f\007\f\017\b", Lit149, 2, "testing.scm:307"), "\001\001", "\021\030\004\t\003\b\013", new Object[] { Lit63 }, 0);Lit65 = new kawa.lang.SyntaxRules(Lit149, tmp4302_4299, 2, Lit64);Lit61 = gnu.mapping.Symbol.valueOf("test-runner-create");Lit59 = gnu.mapping.Symbol.valueOf("test-runner-simple");Lit58 = gnu.mapping.Symbol.valueOf("test-runner-null");Lit57 = gnu.mapping.Symbol.valueOf("%test-null-callback");Lit56 = gnu.mapping.Symbol.valueOf("test-runner-group-path");Lit55 = gnu.mapping.Symbol.valueOf("test-runner-reset");Lit54 = gnu.mapping.Symbol.valueOf("test-runner-aux-value!");Lit53 = gnu.mapping.Symbol.valueOf("test-runner-aux-value");Lit50 = gnu.mapping.Symbol.valueOf("test-runner-on-bad-end-name!");Lit49 = gnu.mapping.Symbol.valueOf("test-runner-on-bad-end-name");Lit48 = gnu.mapping.Symbol.valueOf("test-runner-on-bad-count!");Lit47 = gnu.mapping.Symbol.valueOf("test-runner-on-bad-count");Lit46 = gnu.mapping.Symbol.valueOf("test-runner-on-final!");Lit45 = gnu.mapping.Symbol.valueOf("test-runner-on-final");Lit44 = gnu.mapping.Symbol.valueOf("test-runner-on-group-end!");Lit43 = gnu.mapping.Symbol.valueOf("test-runner-on-group-end");Lit42 = gnu.mapping.Symbol.valueOf("test-runner-on-group-begin!");Lit41 = gnu.mapping.Symbol.valueOf("test-runner-on-group-begin");Lit40 = gnu.mapping.Symbol.valueOf("test-runner-on-test-end!");Lit39 = gnu.mapping.Symbol.valueOf("test-runner-on-test-end");Lit38 = gnu.mapping.Symbol.valueOf("test-runner-on-test-begin!");Lit37 = gnu.mapping.Symbol.valueOf("test-runner-on-test-begin");Lit36 = gnu.mapping.Symbol.valueOf("test-runner-group-stack!");Lit35 = gnu.mapping.Symbol.valueOf("test-runner-group-stack");Lit30 = gnu.mapping.Symbol.valueOf("test-runner-skip-count!");Lit29 = gnu.mapping.Symbol.valueOf("test-runner-skip-count");Lit28 = gnu.mapping.Symbol.valueOf("test-runner-xfail-count!");Lit27 = gnu.mapping.Symbol.valueOf("test-runner-xfail-count");Lit26 = gnu.mapping.Symbol.valueOf("test-runner-xpass-count!");Lit25 = gnu.mapping.Symbol.valueOf("test-runner-xpass-count");Lit24 = gnu.mapping.Symbol.valueOf("test-runner-fail-count!");Lit23 = gnu.mapping.Symbol.valueOf("test-runner-fail-count");Lit22 = gnu.mapping.Symbol.valueOf("test-runner-pass-count!");Lit21 = gnu.mapping.Symbol.valueOf("test-runner-pass-count");Lit20 = gnu.mapping.Symbol.valueOf("test-runner?"); Object[] tmp4735_4732 = new Object[5]; Object[] tmp4736_4735 = tmp4735_4732;tmp4736_4735[0] = Lit160; Object[] tmp4742_4736 = tmp4736_4735;tmp4742_4736[1] = Lit161; Object[] tmp4748_4742 = tmp4742_4736;tmp4748_4742[2] = Lit52; Object[] tmp4754_4748 = tmp4748_4742;tmp4754_4748[3] = Lit159;tmp4754_4748[4] = Lit91;Lit19 = new kawa.lang.SyntaxTemplate("\001\001\001\001\001", "\021\030\004\021\030\fA\021\030\024\021\030\034\b\033\b\021\030$\021\030\034\t#\t\013\b\023", tmp4735_4732, 0);Lit18 = new kawa.lang.SyntaxPattern("<\f\007\f\017\f\027\b\f\037\f'\b", Lit149, 5, "testing.scm:723"); Object[] tmp4807_4804 = new Object[8]; Object[] tmp4808_4807 = tmp4807_4804;tmp4808_4807[0] = Lit160; Object[] tmp4814_4808 = tmp4808_4807;tmp4814_4808[1] = Lit162; Object[] tmp4820_4814 = tmp4814_4808;tmp4820_4814[2] = Lit177; Object[] tmp4826_4820 = tmp4820_4814;tmp4826_4820[3] = Lit52; Object[] tmp4832_4826 = tmp4826_4820;tmp4832_4826[4] = Lit159; Object[] tmp4838_4832 = tmp4832_4826;tmp4838_4832[5] = Lit153; Object[] tmp4844_4838 = tmp4838_4832;tmp4844_4838[6] = Lit178;tmp4844_4838[7] = Lit91;Lit17 = new kawa.lang.SyntaxTemplate("\001\001\001\001\001\001", "\021\030\004I\021\030\f\b\021\030\024\b\013©\021\030\034\021\030$\b\021\030,A\021\030,\021\0304\b\013\b#\b\021\030<\021\030$\t+\t\023\b\033", tmp4807_4804, 0);Lit16 = new kawa.lang.SyntaxPattern("L\f\007\f\017\f\027\f\037\b\f'\f/\b", Lit149, 6, "testing.scm:717");Lit15 = new kawa.lang.SyntaxTemplate("", "\030\004", Lit179, 0);Lit14 = gnu.mapping.Symbol.valueOf("pass");Lit12 = gnu.mapping.Symbol.valueOf("fail");Lit11 = gnu.lists.PairWithPosition.make(Lit14, Lit189, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 2248754);Lit10 = gnu.lists.PairWithPosition.make(Lit7, gnu.lists.PairWithPosition.make(testing.Lit4 = gnu.mapping.Symbol.valueOf("source-file"), gnu.lists.PairWithPosition.make(testing.Lit5 = gnu.mapping.Symbol.valueOf("source-line"), gnu.lists.PairWithPosition.make(testing.Lit6 = gnu.mapping.Symbol.valueOf("source-form"), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 2101290), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 2101278), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 2101266), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 2101255);Lit8 = gnu.lists.PairWithPosition.make(Lit12, Lit189, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm", 1994773);Lit3 = gnu.mapping.Symbol.valueOf("xfail");Lit2 = gnu.mapping.Symbol.valueOf("skip");Lit1 = gnu.mapping.Symbol.valueOf("result-kind");Lit0 = gnu.math.IntNum.valueOf(0);test$Mnrunner = (gnu.bytecode.ClassType)gnu.bytecode.Type.make(test-runner.class);$instance = new testing();$Prvt$cons = gnu.kawa.reflect.StaticFieldLocation.make("kawa.lib.lists", "cons");$Prvt$cdr = gnu.kawa.reflect.StaticFieldLocation.make("kawa.lib.lists", "cdr");$Prvt$assq = gnu.kawa.reflect.StaticFieldLocation.make("kawa.lib.lists", "assq");$Prvt$dynamic$Mnwind = gnu.kawa.reflect.StaticFieldLocation.make("kawa.lib.misc", "dynamic$Mnwind");$Prvt$if = gnu.kawa.reflect.StaticFieldLocation.make("kawa.lib.prim_syntax", "if");$Prvt$cond = gnu.kawa.reflect.StaticFieldLocation.make("kawa.lib.std_syntax", "cond");$Prvt$and = gnu.kawa.reflect.StaticFieldLocation.make("kawa.lib.std_syntax", "and");$Prvt$let = gnu.kawa.reflect.StaticFieldLocation.make("kawa.lib.std_syntax", "let");$Prvt$let$St = gnu.kawa.reflect.StaticFieldLocation.make("kawa.lib.std_syntax", "let$St");$Prvt$else = gnu.kawa.reflect.StaticFieldLocation.make("kawa.lib.std_syntax", "else");$Prvt$define$Mnrecord$Mntype = gnu.kawa.reflect.StaticFieldLocation.make("kawa.lib.DefineRecordType", "define$Mnrecord$Mntype");$Prvt$begin = gnu.kawa.reflect.StaticFieldLocation.make("kawa.standard.begin", "begin");$Prvt$eq$Qu = gnu.kawa.reflect.StaticFieldLocation.make("kawa.standard.Scheme", "isEq");$Prvt$equal$Qu = gnu.kawa.reflect.StaticFieldLocation.make("kawa.standard.Scheme", "isEqual");$Prvt$eqv$Qu = gnu.kawa.reflect.StaticFieldLocation.make("kawa.standard.Scheme", "isEqv");$Prvt$lambda = gnu.kawa.reflect.StaticFieldLocation.make("kawa.standard.SchemeCompilation", "lambda");$Prvt$list = gnu.kawa.reflect.StaticFieldLocation.make("gnu.kawa.lispexpr.LangObjType", "listType");$Prvt$quasiquote = gnu.kawa.reflect.StaticFieldLocation.make("kawa.lang.Quote", "quasiQuote");$Prvt$quote = gnu.kawa.reflect.StaticFieldLocation.make("kawa.lang.Quote", "plainQuote");
    $Prvt$try$Mncatch = gnu.kawa.reflect.StaticFieldLocation.make("kawa.lib.prim_syntax", "try$Mncatch");testing localTesting1 = $instance;test$Mnrunner$Qu = new ModuleMethod(localTesting1, 12, Lit20, 4097);test$Mnrunner$Mnpass$Mncount = new ModuleMethod(localTesting1, 13, Lit21, 4097);test$Mnrunner$Mnpass$Mncount$Ex = new ModuleMethod(localTesting1, 14, Lit22, 8194);test$Mnrunner$Mnfail$Mncount = new ModuleMethod(localTesting1, 15, Lit23, 4097);test$Mnrunner$Mnfail$Mncount$Ex = new ModuleMethod(localTesting1, 16, Lit24, 8194);test$Mnrunner$Mnxpass$Mncount = new ModuleMethod(localTesting1, 17, Lit25, 4097);test$Mnrunner$Mnxpass$Mncount$Ex = new ModuleMethod(localTesting1, 18, Lit26, 8194);test$Mnrunner$Mnxfail$Mncount = new ModuleMethod(localTesting1, 19, Lit27, 4097);test$Mnrunner$Mnxfail$Mncount$Ex = new ModuleMethod(localTesting1, 20, Lit28, 8194);test$Mnrunner$Mnskip$Mncount = new ModuleMethod(localTesting1, 21, Lit29, 4097);test$Mnrunner$Mnskip$Mncount$Ex = new ModuleMethod(localTesting1, 22, Lit30, 8194);$Prvt$$Pctest$Mnrunner$Mnskip$Mnlist = new ModuleMethod(localTesting1, 23, Lit31, 4097);$Prvt$$Pctest$Mnrunner$Mnskip$Mnlist$Ex = new ModuleMethod(localTesting1, 24, Lit32, 8194);$Prvt$$Pctest$Mnrunner$Mnfail$Mnlist = new ModuleMethod(localTesting1, 25, Lit33, 4097);$Prvt$$Pctest$Mnrunner$Mnfail$Mnlist$Ex = new ModuleMethod(localTesting1, 26, Lit34, 8194);test$Mnrunner$Mngroup$Mnstack = new ModuleMethod(localTesting1, 27, Lit35, 4097);test$Mnrunner$Mngroup$Mnstack$Ex = new ModuleMethod(localTesting1, 28, Lit36, 8194);test$Mnrunner$Mnon$Mntest$Mnbegin = new ModuleMethod(localTesting1, 29, Lit37, 4097);test$Mnrunner$Mnon$Mntest$Mnbegin$Ex = new ModuleMethod(localTesting1, 30, Lit38, 8194);test$Mnrunner$Mnon$Mntest$Mnend = new ModuleMethod(localTesting1, 31, Lit39, 4097);test$Mnrunner$Mnon$Mntest$Mnend$Ex = new ModuleMethod(localTesting1, 32, Lit40, 8194);test$Mnrunner$Mnon$Mngroup$Mnbegin = new ModuleMethod(localTesting1, 33, Lit41, 4097);test$Mnrunner$Mnon$Mngroup$Mnbegin$Ex = new ModuleMethod(localTesting1, 34, Lit42, 8194);test$Mnrunner$Mnon$Mngroup$Mnend = new ModuleMethod(localTesting1, 35, Lit43, 4097);test$Mnrunner$Mnon$Mngroup$Mnend$Ex = new ModuleMethod(localTesting1, 36, Lit44, 8194);test$Mnrunner$Mnon$Mnfinal = new ModuleMethod(localTesting1, 37, Lit45, 4097);test$Mnrunner$Mnon$Mnfinal$Ex = new ModuleMethod(localTesting1, 38, Lit46, 8194);test$Mnrunner$Mnon$Mnbad$Mncount = new ModuleMethod(localTesting1, 39, Lit47, 4097);test$Mnrunner$Mnon$Mnbad$Mncount$Ex = new ModuleMethod(localTesting1, 40, Lit48, 8194);test$Mnrunner$Mnon$Mnbad$Mnend$Mnname = new ModuleMethod(localTesting1, 41, Lit49, 4097);test$Mnrunner$Mnon$Mnbad$Mnend$Mnname$Ex = new ModuleMethod(localTesting1, 42, Lit50, 8194);test$Mnresult$Mnalist = new ModuleMethod(localTesting1, 43, Lit51, 4097);test$Mnresult$Mnalist$Ex = new ModuleMethod(localTesting1, 44, Lit52, 8194);test$Mnrunner$Mnaux$Mnvalue = new ModuleMethod(localTesting1, 45, Lit53, 4097);test$Mnrunner$Mnaux$Mnvalue$Ex = new ModuleMethod(localTesting1, 46, Lit54, 8194);test$Mnrunner$Mnreset = new ModuleMethod(localTesting1, 47, Lit55, 4097);test$Mnrunner$Mngroup$Mnpath = new ModuleMethod(localTesting1, 48, Lit56, 4097);$Pctest$Mnnull$Mncallback = new ModuleMethod(localTesting1, 49, Lit57, 4097); void tmp6069_6066 = new ModuleMethod(localTesting1, 50, null, 12291);tmp6069_6066.setProperty("source-location", "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm:199");lambda$Fn1 = tmp6069_6066; void tmp6096_6093 = new ModuleMethod(localTesting1, 51, null, 12291);tmp6096_6093.setProperty("source-location", "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm:204");lambda$Fn2 = tmp6096_6093; void tmp6123_6120 = new ModuleMethod(localTesting1, 52, null, 12291);tmp6123_6120.setProperty("source-location", "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm:205");lambda$Fn3 = tmp6123_6120;test$Mnrunner$Mnnull = new ModuleMethod(localTesting1, 53, Lit58, 0);test$Mnrunner$Mnsimple = new ModuleMethod(localTesting1, 54, Lit59, 0);test$Mnrunner$Mnget = new ModuleMethod(localTesting1, 55, Lit60, 0);test$Mnrunner$Mncreate = new ModuleMethod(localTesting1, 56, Lit61, 0);$Prvt$$Pctest$Mnshould$Mnexecute = new ModuleMethod(localTesting1, 57, Lit62, 4097);$Pctest$Mnbegin = new ModuleMethod(localTesting1, 58, Lit63, 8194);
    
























    test$Mnbegin = kawa.lang.Macro.make(Lit64, Lit65, "gnu.kawa.slib.testing");test$Mnon$Mngroup$Mnbegin$Mnsimple = new ModuleMethod(localTesting1, 59, Lit66, 12291);test$Mnon$Mngroup$Mnend$Mnsimple = new ModuleMethod(localTesting1, 60, Lit67, 4097);test$Mnon$Mnbad$Mncount$Mnsimple = new ModuleMethod(localTesting1, 61, Lit68, 12291);test$Mnon$Mnbad$Mnend$Mnname$Mnsimple = new ModuleMethod(localTesting1, 62, Lit69, 12291);test$Mnon$Mnfinal$Mnsimple = new ModuleMethod(localTesting1, 63, Lit70, 4097);$Prvt$$Pctest$Mnend = new ModuleMethod(localTesting1, 64, Lit71, 8194);
    



    test$Mngroup = kawa.lang.Macro.make(Lit72, Lit73, "gnu.kawa.slib.testing");test$Mngroup$Mnwith$Mncleanup = kawa.lang.Macro.make(Lit74, Lit75, "gnu.kawa.slib.testing");test$Mnon$Mntest$Mnbegin$Mnsimple = new ModuleMethod(localTesting1, 65, Lit76, 4097);
    test$Mnresult$Mnref = kawa.lang.Macro.make(Lit77, Lit78, "gnu.kawa.slib.testing");test$Mnon$Mntest$Mnend$Mnsimple = new ModuleMethod(localTesting1, 66, Lit79, 4097);test$Mnresult$Mnset$Ex = new ModuleMethod(localTesting1, 67, Lit80, 12291);test$Mnresult$Mnclear = new ModuleMethod(localTesting1, 68, Lit81, 4097);test$Mnresult$Mnremove = new ModuleMethod(localTesting1, 69, Lit82, 8194);test$Mnresult$Mnkind = new ModuleMethod(localTesting1, 70, Lit83, 61440);test$Mnpassed$Qu = new ModuleMethod(localTesting1, 71, Lit84, 61440);$Prvt$$Pctest$Mnreport$Mnresult = new ModuleMethod(localTesting1, 72, Lit85, 0);$Prvt$$Pctest$Mnevaluate$Mnwith$Mncatch = kawa.lang.Macro.make(Lit86, Lit87, "gnu.kawa.slib.testing");$Prvt$$Pctest$Mnon$Mntest$Mnbegin = new ModuleMethod(localTesting1, 73, Lit88, 4097);$Prvt$$Pctest$Mnon$Mntest$Mnend = new ModuleMethod(localTesting1, 74, Lit89, 8194);test$Mnrunner$Mntest$Mnname = new ModuleMethod(localTesting1, 75, Lit90, 4097);$Prvt$$Pctest$Mncomp2body = kawa.lang.Macro.make(Lit91, Lit92, "gnu.kawa.slib.testing");$Prvt$$Pctest$Mnapproximate$Eq = new ModuleMethod(localTesting1, 76, Lit93, 4097);$Prvt$$Pctest$Mncomp1body = kawa.lang.Macro.make(Lit94, Lit95, "gnu.kawa.slib.testing");
    





































































































































































































































































































































































































































































































































































































































    testing localTesting2 = $instance; void tmp6708_6705 = new ModuleMethod(localTesting2, 77, null, 4097);tmp6708_6705.setProperty("source-location", "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm:693");test$Mnend = kawa.lang.Macro.make(Lit96, tmp6708_6705, "gnu.kawa.slib.testing");
    







    testing localTesting3 = $instance; void tmp6748_6745 = new ModuleMethod(localTesting3, 78, null, 4097);tmp6748_6745.setProperty("source-location", "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm:702");test$Mnassert = kawa.lang.Macro.make(Lit102, tmp6748_6745, "gnu.kawa.slib.testing");
    

























    testing localTesting4 = $instance; void tmp6788_6785 = new ModuleMethod(localTesting4, 79, null, 4097);tmp6788_6785.setProperty("source-location", "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm:729");test$Mneqv = kawa.lang.Macro.make(Lit108, tmp6788_6785, "gnu.kawa.slib.testing");
    
    testing localTesting5 = $instance; void tmp6830_6827 = new ModuleMethod(localTesting5, 80, null, 4097);tmp6830_6827.setProperty("source-location", "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm:731");test$Mneq = kawa.lang.Macro.make(Lit110, tmp6830_6827, "gnu.kawa.slib.testing");
    
    testing localTesting6 = $instance; void tmp6872_6869 = new ModuleMethod(localTesting6, 81, null, 4097);tmp6872_6869.setProperty("source-location", "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm:733");test$Mnequal = kawa.lang.Macro.make(Lit112, tmp6872_6869, "gnu.kawa.slib.testing");
    
    testing localTesting7 = $instance; void tmp6914_6911 = new ModuleMethod(localTesting7, 82, null, 4097);tmp6914_6911.setProperty("source-location", "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm:735");test$Mnapproximate = kawa.lang.Macro.make(Lit114, tmp6914_6911, "gnu.kawa.slib.testing");$Prvt$$Pctest$Mnerror = kawa.lang.Macro.make(Lit120, Lit121, "gnu.kawa.slib.testing");
    

























































































































































    testing localTesting8 = $instance; void tmp6971_6968 = new ModuleMethod(localTesting8, 83, null, 4097);tmp6971_6968.setProperty("source-location", "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm:890");test$Mnerror = kawa.lang.Macro.make(Lit122, tmp6971_6968, "gnu.kawa.slib.testing");test$Mnapply = new ModuleMethod(localTesting1, 84, Lit130, 61441);test$Mnwith$Mnrunner = kawa.lang.Macro.make(Lit131, Lit132, "gnu.kawa.slib.testing");$Prvt$$Pctest$Mnmatch$Mnnth = new ModuleMethod(localTesting1, 85, Lit133, 8194);test$Mnmatch$Mnnth = kawa.lang.Macro.make(Lit134, Lit135, "gnu.kawa.slib.testing");$Prvt$$Pctest$Mnmatch$Mnall = new ModuleMethod(localTesting1, 86, Lit136, 61440);test$Mnmatch$Mnall = kawa.lang.Macro.make(Lit137, Lit138, "gnu.kawa.slib.testing");$Prvt$$Pctest$Mnmatch$Mnany = new ModuleMethod(localTesting1, 87, Lit139, 61440);test$Mnmatch$Mnany = kawa.lang.Macro.make(Lit140, Lit141, "gnu.kawa.slib.testing");$Prvt$$Pctest$Mnas$Mnspecifier = new ModuleMethod(localTesting1, 88, Lit142, 4097);test$Mnskip = kawa.lang.Macro.make(Lit143, Lit144, "gnu.kawa.slib.testing");test$Mnexpect$Mnfail = kawa.lang.Macro.make(Lit145, Lit146, "gnu.kawa.slib.testing");test$Mnmatch$Mnname = new ModuleMethod(localTesting1, 89, Lit147, 4097);test$Mnread$Mneval$Mnstring = new ModuleMethod(localTesting1, 90, Lit148, 4097);$runBody$();
  }
  



























































  public static boolean isTestRunner(Object obj) { return obj instanceof test-runner; } public static Object testRunnerPassCount(test-runner obj) { return pass$Mncount; } public static Object testRunnerFailCount(test-runner obj) { return fail$Mncount; } public static Object testRunnerXpassCount(test-runner obj) { return xpass$Mncount; } public static Object testRunnerXfailCount(test-runner obj) { return xfail$Mncount; } public static Object testRunnerSkipCount(test-runner obj) { return skip$Mncount; } public static Object $PcTestRunnerSkipList(test-runner obj) { return skip$Mnlist; } public static Object $PcTestRunnerFailList(test-runner obj) { return fail$Mnlist; } public static Object testRunnerGroupStack(test-runner obj) { return group$Mnstack; } public static Object testRunnerOnTestBegin(test-runner obj) { return on$Mntest$Mnbegin; } public static Object testRunnerOnTestEnd(test-runner obj) { return on$Mntest$Mnend; } public static Object testRunnerOnGroupBegin(test-runner obj) { return on$Mngroup$Mnbegin; } public static Object testRunnerOnGroupEnd(test-runner obj) { return on$Mngroup$Mnend; } public static Object testRunnerOnFinal(test-runner obj) { return on$Mnfinal; } public static Object testRunnerOnBadCount(test-runner obj) { return on$Mnbad$Mncount; } public static Object testRunnerOnBadEndName(test-runner obj) { return on$Mnbad$Mnend$Mnname; } public static Object testResultAlist(test-runner obj) { return result$Mnalist; } public static Object testRunnerAuxValue(test-runner obj) { return aux$Mnvalue; } static Object $PcTestRunnerRunList(test-runner obj) { return run$Mnlist; } static Object $PcTestRunnerSkipSave(test-runner obj) { return skip$Mnsave; } static Object $PcTestRunnerFailSave(test-runner obj) { return fail$Mnsave; } static Object $PcTestRunnerTotalCount(test-runner obj) { return total$Mncount; } static Object $PcTestRunnerCountList(test-runner obj) { return count$Mnlist; }
  












































































































































































































































































































































































































































































































































































































































































































































































  public int match1(ModuleMethod paramModuleMethod, Object paramObject, gnu.mapping.CallContext paramCallContext)
  {
    switch (selector) {case 83:  value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0;
    case 82: 
      value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0;
    case 81: 
      value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0;
    case 80: 
      value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0;
    case 79: 
      value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0;
    case 78: 
      value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0;
    case 77: 
      value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0;
    











































































































































































































































































































































    case 90: 
      value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0;
    case 89: 
      value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0;
    case 88: 
      value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0;
    case 76: 
      value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0;
    case 75: 
      value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0;
    case 73: 
      value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0;
    case 68: 
      value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0;
    case 66: 
      value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0;
    case 65: 
      value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0;
    case 63: 
      value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0;
    case 60: 
      value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0;
    case 57: 
      value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0;
    case 49: 
      value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0;
    case 48: 
      value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0;
    case 47: 
      value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0;
    case 45: 
      Object tmp717_714 = gnu.mapping.Promise.force(paramObject, test-runner.class);
      










































































































































































      if (!(tmp717_714 instanceof test-runner)) return -786431; value1 = tmp717_714;proc = paramModuleMethod;pc = 1;return 0;
    case 43: 
      Object tmp750_747 = gnu.mapping.Promise.force(paramObject, test-runner.class);
      







































































































































































      if (!(tmp750_747 instanceof test-runner)) return -786431; value1 = tmp750_747;proc = paramModuleMethod;pc = 1;return 0;
    case 41: 
      Object tmp783_780 = gnu.mapping.Promise.force(paramObject, test-runner.class);
      


































































































































































      if (!(tmp783_780 instanceof test-runner)) return -786431; value1 = tmp783_780;proc = paramModuleMethod;pc = 1;return 0;
    case 39: 
      Object tmp816_813 = gnu.mapping.Promise.force(paramObject, test-runner.class);
      
































































































































































      if (!(tmp816_813 instanceof test-runner)) return -786431; value1 = tmp816_813;proc = paramModuleMethod;pc = 1;return 0;
    case 37: 
      Object tmp849_846 = gnu.mapping.Promise.force(paramObject, test-runner.class);
      






























































































































































      if (!(tmp849_846 instanceof test-runner)) return -786431; value1 = tmp849_846;proc = paramModuleMethod;pc = 1;return 0;
    case 35: 
      Object tmp882_879 = gnu.mapping.Promise.force(paramObject, test-runner.class);
      




























































































































































      if (!(tmp882_879 instanceof test-runner)) return -786431; value1 = tmp882_879;proc = paramModuleMethod;pc = 1;return 0;
    case 33: 
      Object tmp915_912 = gnu.mapping.Promise.force(paramObject, test-runner.class);
      


























































































































































      if (!(tmp915_912 instanceof test-runner)) return -786431; value1 = tmp915_912;proc = paramModuleMethod;pc = 1;return 0;
    case 31: 
      Object tmp948_945 = gnu.mapping.Promise.force(paramObject, test-runner.class);
      
























































































































































      if (!(tmp948_945 instanceof test-runner)) return -786431; value1 = tmp948_945;proc = paramModuleMethod;pc = 1;return 0;
    case 29: 
      Object tmp981_978 = gnu.mapping.Promise.force(paramObject, test-runner.class);
      























































































































































      if (!(tmp981_978 instanceof test-runner)) return -786431; value1 = tmp981_978;proc = paramModuleMethod;pc = 1;return 0;
    case 27: 
      Object tmp1014_1011 = gnu.mapping.Promise.force(paramObject, test-runner.class);
      






















































































































































      if (!(tmp1014_1011 instanceof test-runner)) return -786431; value1 = tmp1014_1011;proc = paramModuleMethod;pc = 1;return 0;
    case 25: 
      Object tmp1047_1044 = gnu.mapping.Promise.force(paramObject, test-runner.class);
      

















































































































































      if (!(tmp1047_1044 instanceof test-runner)) return -786431; value1 = tmp1047_1044;proc = paramModuleMethod;pc = 1;return 0;
    case 23: 
      Object tmp1080_1077 = gnu.mapping.Promise.force(paramObject, test-runner.class);
      
















































































































































      if (!(tmp1080_1077 instanceof test-runner)) return -786431; value1 = tmp1080_1077;proc = paramModuleMethod;pc = 1;return 0;
    case 21: 
      Object tmp1113_1110 = gnu.mapping.Promise.force(paramObject, test-runner.class);
      















































































































































      if (!(tmp1113_1110 instanceof test-runner)) return -786431; value1 = tmp1113_1110;proc = paramModuleMethod;pc = 1;return 0;
    case 19: 
      Object tmp1146_1143 = gnu.mapping.Promise.force(paramObject, test-runner.class);
      














































































































































      if (!(tmp1146_1143 instanceof test-runner)) return -786431; value1 = tmp1146_1143;proc = paramModuleMethod;pc = 1;return 0;
    case 17: 
      Object tmp1179_1176 = gnu.mapping.Promise.force(paramObject, test-runner.class);
      













































































































































      if (!(tmp1179_1176 instanceof test-runner)) return -786431; value1 = tmp1179_1176;proc = paramModuleMethod;pc = 1;return 0;
    case 15: 
      Object tmp1212_1209 = gnu.mapping.Promise.force(paramObject, test-runner.class);
      












































































































































      if (!(tmp1212_1209 instanceof test-runner)) return -786431; value1 = tmp1212_1209;proc = paramModuleMethod;pc = 1;return 0;
    case 13: 
      Object tmp1245_1242 = gnu.mapping.Promise.force(paramObject, test-runner.class);
      











































































































































      if (!(tmp1245_1242 instanceof test-runner)) return -786431; value1 = tmp1245_1242;proc = paramModuleMethod;pc = 1;return 0;
    case 12: 
      value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0; } return super.match1(paramModuleMethod, paramObject, paramCallContext); }
  
  public static void testRunnerPassCount$Ex(test-runner obj, Object value) { pass$Mncount = value; }
  









































































































































































































































































































































































































































































































































































































































































































































































































































  public int match2(ModuleMethod paramModuleMethod, Object paramObject1, Object paramObject2, gnu.mapping.CallContext paramCallContext)
  {
    switch (selector) {case 85:  value1 = paramObject1;value2 = paramObject2;proc = paramModuleMethod;pc = 2;return 0;
    case 74: 
      value1 = paramObject1;value2 = paramObject2;proc = paramModuleMethod;pc = 2;return 0;
    case 69: 
      value1 = paramObject1;value2 = paramObject2;proc = paramModuleMethod;pc = 2;return 0;
    case 64: 
      value1 = paramObject1;value2 = paramObject2;proc = paramModuleMethod;pc = 2;return 0;
    case 58: 
      value1 = paramObject1;value2 = paramObject2;proc = paramModuleMethod;pc = 2;return 0;
    case 46: 
      Object tmp330_327 = gnu.mapping.Promise.force(paramObject1, test-runner.class);
      










































































































































































      if (!(tmp330_327 instanceof test-runner)) return -786431; value1 = tmp330_327;value2 = paramObject2;proc = paramModuleMethod;pc = 2;return 0;
    case 44: 
      Object tmp372_369 = gnu.mapping.Promise.force(paramObject1, test-runner.class);
      







































































































































































      if (!(tmp372_369 instanceof test-runner)) return -786431; value1 = tmp372_369;value2 = paramObject2;proc = paramModuleMethod;pc = 2;return 0;
    case 42: 
      Object tmp414_411 = gnu.mapping.Promise.force(paramObject1, test-runner.class);
      


































































































































































      if (!(tmp414_411 instanceof test-runner)) return -786431; value1 = tmp414_411;value2 = paramObject2;proc = paramModuleMethod;pc = 2;return 0;
    case 40: 
      Object tmp456_453 = gnu.mapping.Promise.force(paramObject1, test-runner.class);
      
































































































































































      if (!(tmp456_453 instanceof test-runner)) return -786431; value1 = tmp456_453;value2 = paramObject2;proc = paramModuleMethod;pc = 2;return 0;
    case 38: 
      Object tmp498_495 = gnu.mapping.Promise.force(paramObject1, test-runner.class);
      






























































































































































      if (!(tmp498_495 instanceof test-runner)) return -786431; value1 = tmp498_495;value2 = paramObject2;proc = paramModuleMethod;pc = 2;return 0;
    case 36: 
      Object tmp540_537 = gnu.mapping.Promise.force(paramObject1, test-runner.class);
      




























































































































































      if (!(tmp540_537 instanceof test-runner)) return -786431; value1 = tmp540_537;value2 = paramObject2;proc = paramModuleMethod;pc = 2;return 0;
    case 34: 
      Object tmp582_579 = gnu.mapping.Promise.force(paramObject1, test-runner.class);
      


























































































































































      if (!(tmp582_579 instanceof test-runner)) return -786431; value1 = tmp582_579;value2 = paramObject2;proc = paramModuleMethod;pc = 2;return 0;
    case 32: 
      Object tmp624_621 = gnu.mapping.Promise.force(paramObject1, test-runner.class);
      
























































































































































      if (!(tmp624_621 instanceof test-runner)) return -786431; value1 = tmp624_621;value2 = paramObject2;proc = paramModuleMethod;pc = 2;return 0;
    case 30: 
      Object tmp666_663 = gnu.mapping.Promise.force(paramObject1, test-runner.class);
      























































































































































      if (!(tmp666_663 instanceof test-runner)) return -786431; value1 = tmp666_663;value2 = paramObject2;proc = paramModuleMethod;pc = 2;return 0;
    case 28: 
      Object tmp708_705 = gnu.mapping.Promise.force(paramObject1, test-runner.class);
      






















































































































































      if (!(tmp708_705 instanceof test-runner)) return -786431; value1 = tmp708_705;value2 = paramObject2;proc = paramModuleMethod;pc = 2;return 0;
    case 26: 
      Object tmp750_747 = gnu.mapping.Promise.force(paramObject1, test-runner.class);
      

















































































































































      if (!(tmp750_747 instanceof test-runner)) return -786431; value1 = tmp750_747;value2 = paramObject2;proc = paramModuleMethod;pc = 2;return 0;
    case 24: 
      Object tmp792_789 = gnu.mapping.Promise.force(paramObject1, test-runner.class);
      
















































































































































      if (!(tmp792_789 instanceof test-runner)) return -786431; value1 = tmp792_789;value2 = paramObject2;proc = paramModuleMethod;pc = 2;return 0;
    case 22: 
      Object tmp834_831 = gnu.mapping.Promise.force(paramObject1, test-runner.class);
      















































































































































      if (!(tmp834_831 instanceof test-runner)) return -786431; value1 = tmp834_831;value2 = paramObject2;proc = paramModuleMethod;pc = 2;return 0;
    case 20: 
      Object tmp876_873 = gnu.mapping.Promise.force(paramObject1, test-runner.class);
      














































































































































      if (!(tmp876_873 instanceof test-runner)) return -786431; value1 = tmp876_873;value2 = paramObject2;proc = paramModuleMethod;pc = 2;return 0;
    case 18: 
      Object tmp918_915 = gnu.mapping.Promise.force(paramObject1, test-runner.class);
      













































































































































      if (!(tmp918_915 instanceof test-runner)) return -786431; value1 = tmp918_915;value2 = paramObject2;proc = paramModuleMethod;pc = 2;return 0;
    case 16: 
      Object tmp960_957 = gnu.mapping.Promise.force(paramObject1, test-runner.class);
      












































































































































      if (!(tmp960_957 instanceof test-runner)) return -786431; value1 = tmp960_957;value2 = paramObject2;proc = paramModuleMethod;pc = 2;return 0;
    case 14: 
      Object tmp1002_999 = gnu.mapping.Promise.force(paramObject1, test-runner.class);
      











































































































































      if (!(tmp1002_999 instanceof test-runner)) return -786431; value1 = tmp1002_999;value2 = paramObject2;proc = paramModuleMethod;pc = 2;return 0; } return super.match2(paramModuleMethod, paramObject1, paramObject2, paramCallContext); }
  public static void testRunnerFailCount$Ex(test-runner obj, Object value) { fail$Mncount = value; }
  public static void testRunnerXpassCount$Ex(test-runner obj, Object value) { xpass$Mncount = value; }
  public static void testRunnerXfailCount$Ex(test-runner obj, Object value) { xfail$Mncount = value; }
  public static void testRunnerSkipCount$Ex(test-runner obj, Object value) { skip$Mncount = value; }
  public static void $PcTestRunnerSkipList$Ex(test-runner obj, Object value) { skip$Mnlist = value; }
  public static void $PcTestRunnerFailList$Ex(test-runner obj, Object value) { fail$Mnlist = value; }
  
  static void $PcTestRunnerRunList$Ex(test-runner obj, Object value) { run$Mnlist = value; }
  static void $PcTestRunnerSkipSave$Ex(test-runner obj, Object value) { skip$Mnsave = value; }
  static void $PcTestRunnerFailSave$Ex(test-runner obj, Object value) { fail$Mnsave = value; }
  public static void testRunnerGroupStack$Ex(test-runner obj, Object value) { group$Mnstack = value; }
  public static void testRunnerOnTestBegin$Ex(test-runner obj, Object value) { on$Mntest$Mnbegin = value; }
  public static void testRunnerOnTestEnd$Ex(test-runner obj, Object value) { on$Mntest$Mnend = value; }
  
  public static void testRunnerOnGroupBegin$Ex(test-runner obj, Object value) { on$Mngroup$Mnbegin = value; }
  
  public static void testRunnerOnGroupEnd$Ex(test-runner obj, Object value) { on$Mngroup$Mnend = value; }
  
  public static void testRunnerOnFinal$Ex(test-runner obj, Object value) { on$Mnfinal = value; }
  
  public static void testRunnerOnBadCount$Ex(test-runner obj, Object value) { on$Mnbad$Mncount = value; }
  
  public static void testRunnerOnBadEndName$Ex(test-runner obj, Object value) { on$Mnbad$Mnend$Mnname = value; }
  
  static void $PcTestRunnerTotalCount$Ex(test-runner obj, Object value) { total$Mncount = value; }
  
  static void $PcTestRunnerCountList$Ex(test-runner obj, Object value) { count$Mnlist = value; }
  public static void testResultAlist$Ex(test-runner obj, Object value) { result$Mnalist = value; }
  
  public static void testRunnerAuxValue$Ex(test-runner obj, Object value) {
    aux$Mnvalue = value;
  }
  

















  static boolean $PcTestNullCallback(Object runner)
  {
    return false;
  }
  
































































































































































































































































































































































  public int match0(ModuleMethod paramModuleMethod, gnu.mapping.CallContext paramCallContext)
  {
    switch (selector) {case 72:  proc = paramModuleMethod;pc = 0;return 0;
    case 56: 
      proc = paramModuleMethod;pc = 0;return 0;
    case 55: 
      proc = paramModuleMethod;pc = 0;return 0;
    case 54: 
      proc = paramModuleMethod;pc = 0;return 0;
    case 53: 
      proc = paramModuleMethod;pc = 0;return 0; } return super.match0(paramModuleMethod, paramCallContext);
  }
  
  static boolean lambda1(Object runner, Object name, Object count) { return false; }
  

































































































































































































































































































































  public int match3(ModuleMethod paramModuleMethod, Object paramObject1, Object paramObject2, Object paramObject3, gnu.mapping.CallContext paramCallContext)
  {
    switch (selector) {case 67:  value1 = paramObject1;value2 = paramObject2;value3 = paramObject3;proc = paramModuleMethod;pc = 3;return 0;
    case 62: 
      value1 = paramObject1;value2 = paramObject2;value3 = paramObject3;proc = paramModuleMethod;pc = 3;return 0;
    case 61: 
      value1 = paramObject1;value2 = paramObject2;value3 = paramObject3;proc = paramModuleMethod;pc = 3;return 0;
    case 59: 
      value1 = paramObject1;value2 = paramObject2;value3 = paramObject3;proc = paramModuleMethod;pc = 3;return 0;
    case 52: 
      value1 = paramObject1;value2 = paramObject2;value3 = paramObject3;proc = paramModuleMethod;pc = 3;return 0;
    case 51: 
      value1 = paramObject1;value2 = paramObject2;value3 = paramObject3;proc = paramModuleMethod;pc = 3;return 0;
    case 50: 
      value1 = paramObject1;value2 = paramObject2;value3 = paramObject3;proc = paramModuleMethod;pc = 3;return 0; } return super.match3(paramModuleMethod, paramObject1, paramObject2, paramObject3, paramCallContext);
  }
  


  static boolean lambda2(Object runner, Object count, Object expected) { return false; }
  static boolean lambda3(Object runner, Object begin, Object end) { return false;
  }
  
  public static test-runner testRunnerNull()
  {
    test-runner runner = $PcTestRunnerAlloc();
    testRunnerReset(runner);
    testRunnerOnGroupBegin$Ex(runner, lambda$Fn1);
    testRunnerOnGroupEnd$Ex(runner, $Pctest$Mnnull$Mncallback);
    testRunnerOnFinal$Ex(runner, $Pctest$Mnnull$Mncallback);
    testRunnerOnTestBegin$Ex(runner, $Pctest$Mnnull$Mncallback);
    testRunnerOnTestEnd$Ex(runner, $Pctest$Mnnull$Mncallback);
    testRunnerOnBadCount$Ex(runner, lambda$Fn2);
    testRunnerOnBadEndName$Ex(runner, lambda$Fn3);
    return runner;
  }
  


  public static test-runner testRunnerSimple()
  {
    test-runner runner = $PcTestRunnerAlloc();
    testRunnerReset(runner);
    testRunnerOnGroupBegin$Ex(runner, test$Mnon$Mngroup$Mnbegin$Mnsimple);
    testRunnerOnGroupEnd$Ex(runner, test$Mnon$Mngroup$Mnend$Mnsimple);
    testRunnerOnFinal$Ex(runner, test$Mnon$Mnfinal$Mnsimple);
    testRunnerOnTestBegin$Ex(runner, test$Mnon$Mntest$Mnbegin$Mnsimple);
    testRunnerOnTestEnd$Ex(runner, test$Mnon$Mntest$Mnend$Mnsimple);
    testRunnerOnBadCount$Ex(runner, test$Mnon$Mnbad$Mncount$Mnsimple);
    testRunnerOnBadEndName$Ex(runner, test$Mnon$Mnbad$Mnend$Mnname$Mnsimple);
    return runner;
  }
  
  private static void $runBody$()
  {
    ;
    gnu.lists.Consumer $result = getInstanceconsumer;
    





















































































































































































    test$Mnlog$Mnto$Mnfile = true;
    














    test$Mnrunner$Mncurrent = kawa.lib.parameters.makeParameter(Boolean.FALSE);
    test$Mnrunner$Mnfactory = kawa.lib.parameters.makeParameter(test$Mnrunner$Mnsimple);
  }
  














  public static Object testRunnerGet()
  {
    Object r = test$Mnrunner$Mncurrent.getValue();
    if (!gnu.expr.KawaConvert.isTrue(r))
    {
      throw gnu.expr.Special.reachedUnexpected;
    }
    return r;
  }
  
  static Object $PcTestSpecifierMatches(Object spec, Object runner) { return kawa.standard.Scheme.applyToArgs.apply2(spec, runner); }
  
  public static Object testRunnerCreate() {
    return kawa.standard.Scheme.applyToArgs.apply1(test$Mnrunner$Mnfactory.getValue());
  }
  























































































  static void $PcTestOnBadCountWrite(Object runner, Object count, Object expected$Mncount, Object port)
  {
    kawa.lib.ports.display("*** Total number of tests was ", port);
    kawa.lib.ports.display(count, port);
    kawa.lib.ports.display(" but should be ", port);
    kawa.lib.ports.display(expected$Mncount, port);
    kawa.lib.ports.display(". ***", port);
    kawa.lib.ports.newline(port);
    kawa.lib.ports.display("*** Discrepancy indicates testsuite error or exceptions. ***", port);
    kawa.lib.ports.newline(port);
  }
  
  public static void testOnBadCountSimple(Object runner, Object count, Object expected$Mncount) { $PcTestOnBadCountWrite(runner, count, expected$Mncount, (gnu.kawa.io.OutPort)kawa.lib.ports.current$Mnoutput$Mnport.getValue());
    try { Object log = testRunnerAuxValue((test-runner)(localObject1 = gnu.mapping.Promise.force(runner, test-runner.class)));
      if (kawa.lib.ports.isOutputPort(log)) {
        $PcTestOnBadCountWrite(runner, count, expected$Mncount, log);
      }
      return;
    }
    catch (ClassCastException localClassCastException)
    {
      Object localObject1;
      throw new gnu.mapping.WrongType(
      
        localClassCastException, "test-runner-aux-value", 0, localObject1);
    } }
  
  public static gnu.bytecode.Type.NeverReturns testOnBadEndNameSimple(Object runner, Object begin$Mnname, Object end$Mnname) { gnu.lists.FString msg = kawa.lib.strings.stringAppend(new Object[] { $PcTestFormatLine(runner), "test-end ", begin$Mnname, " does not match test-begin ", end$Mnname });
    

    throw gnu.expr.Special.reachedUnexpected;
  }
  
  static void $PcTestFinalReport1(Object value, Object label, Object port)
  {
    if (gnu.kawa.functions.NumberCompare.$Gr(value, Lit0))
    {
      kawa.lib.ports.display(label, port);
      kawa.lib.ports.display(value, port);
      kawa.lib.ports.newline(port);
    }
  }
  









  public static void testOnFinalSimple(Object runner)
  {
    $PcTestFinalReportSimple(runner, (gnu.kawa.io.OutPort)kawa.lib.ports.current$Mnoutput$Mnport.getValue());
    try { Object log = testRunnerAuxValue((test-runner)(localObject1 = gnu.mapping.Promise.force(runner, test-runner.class)));
      if (kawa.lib.ports.isOutputPort(log)) {
        $PcTestFinalReportSimple(runner, log);
      }
      return;
    }
    catch (ClassCastException localClassCastException)
    {
      Object localObject1;
      throw new gnu.mapping.WrongType(
      
        localClassCastException, "test-runner-aux-value", 0, localObject1);
    }
  }
  













  public static Object testOnTestEndSimple(Object runner)
  {
    for (;;)
    {
      Object source$Mnline;
      












      Object localObject4;
      












      Object list;
      











      Object pair;
      











      try
      {
        Object localObject2;
        











        Object localObject1 = testRunnerAuxValue((test-runner)(localObject2 = gnu.mapping.Promise.force(runner, test-runner.class))); } catch (ClassCastException localClassCastException1) { Object localObject3; Object p; Object kind; Object log; Object results; Object source$Mnfile; Object test$Mnname; throw new gnu.mapping.WrongType(
        




























          localClassCastException1, "test-runner-aux-value", 0, kind);
      }
      try
      {
        p = kawa.lib.lists.assq(Lit1, testResultAlist((test-runner)(localObject3 = gnu.mapping.Promise.force(runner, test-runner.class)))); if (!gnu.expr.KawaConvert.isTrue(p)) {} } catch (ClassCastException localClassCastException2) { throw new gnu.mapping.WrongType(localClassCastException2, "test-result-alist", 0, pair);
      }
      try
      {
        tmpTernaryOp = kawa.lib.lists.cdr((gnu.lists.Pair)(localObject3 = gnu.mapping.Promise.force(p, gnu.lists.Pair.class)));kind = Boolean.FALSE;
        



        if (!gnu.expr.KawaConvert.isTrue(kawa.lib.lists.memq(kind, Lit8))) {}
      }
      catch (ClassCastException localClassCastException3)
      {
        throw new gnu.mapping.WrongType(
        


          localClassCastException3, "cdr", 1, pair);
      }
      try { results = testResultAlist((test-runner)(localObject3 = gnu.mapping.Promise.force(runner, test-runner.class)));
        source$Mnfile = kawa.lib.lists.assq(Lit4, results);
        source$Mnline = kawa.lib.lists.assq(Lit5, results);
        test$Mnname = kawa.lib.lists.assq(Lit7, results);
        if (gnu.expr.KawaConvert.isTrue(source$Mnfile) ? gnu.expr.KawaConvert.isTrue(source$Mnfile) : gnu.expr.KawaConvert.isTrue(source$Mnline))
        {
          if (!gnu.expr.KawaConvert.isTrue(source$Mnfile)) {}
        }
      }
      catch (ClassCastException localClassCastException4)
      {
        throw new gnu.mapping.WrongType(localClassCastException4, "test-result-alist", 0, pair);
      }
      

      try
      {
        kawa.lib.ports.display(kawa.lib.lists.cdr((gnu.lists.Pair)(localObject4 = gnu.mapping.Promise.force(source$Mnfile, gnu.lists.Pair.class))));
        kawa.lib.ports.display(":");
        if (!gnu.expr.KawaConvert.isTrue(source$Mnline)) {}
      }
      catch (ClassCastException localClassCastException5)
      {
        throw new gnu.mapping.WrongType(localClassCastException5, "cdr", 1, localObject4);
      }
      try { kawa.lib.ports.display(kawa.lib.lists.cdr((gnu.lists.Pair)(localObject4 = gnu.mapping.Promise.force(source$Mnline, gnu.lists.Pair.class))));
        kawa.lib.ports.display(": ");
        kawa.lib.ports.display(kind == Lit9 ? "XPASS" : "FAIL");
        if (gnu.expr.KawaConvert.isTrue(test$Mnname))
        {
          kawa.lib.ports.display(" ");
        }
      }
      catch (ClassCastException localClassCastException6)
      {
        throw new gnu.mapping.WrongType(localClassCastException6, "cdr", 1, localObject4);
      }
      

      try
      {
        kawa.lib.ports.display(kawa.lib.lists.cdr((gnu.lists.Pair)(localObject4 = gnu.mapping.Promise.force(test$Mnname, gnu.lists.Pair.class))));
        kawa.lib.ports.newline();
        if (kawa.lib.ports.isOutputPort(log))
        {
          kawa.lib.ports.display("Test end:", log);
          kawa.lib.ports.newline(log);
        }
      }
      catch (ClassCastException localClassCastException7)
      {
        throw new gnu.mapping.WrongType(localClassCastException7, "cdr", 1, localObject4);
      }
      

      try
      {
        list = testResultAlist((test-runner)(results = gnu.mapping.Promise.force(runner, test-runner.class)));
        if (!kawa.lib.lists.isPair(list)) {}
      }
      catch (ClassCastException localClassCastException8)
      {
        throw new gnu.mapping.WrongType(localClassCastException8, "test-result-alist", 0, list);
      }
      try { pair = kawa.lib.lists.car((gnu.lists.Pair)(source$Mnline = gnu.mapping.Promise.force(list, gnu.lists.Pair.class))); } catch (ClassCastException localClassCastException9) { throw new gnu.mapping.WrongType(localClassCastException9, "car", 1, source$Mnline);
      }
      try { if (!gnu.expr.KawaConvert.isTrue(kawa.lib.lists.memq(kawa.lib.lists.car((gnu.lists.Pair)(source$Mnline = gnu.mapping.Promise.force(pair, gnu.lists.Pair.class))), Lit10)))
        {
          $PcTestWriteResult1(pair, log);
        }
      }
      catch (ClassCastException localClassCastException10)
      {
        throw new gnu.mapping.WrongType(localClassCastException10, "car", 1, source$Mnline);
      }
      try {
        tmpTernaryOp = kawa.lib.lists.cdr((gnu.lists.Pair)(source$Mnline = gnu.mapping.Promise.force(list, gnu.lists.Pair.class))); } catch (ClassCastException localClassCastException11) { throw new gnu.mapping.WrongType(localClassCastException11, "cdr", 1, source$Mnline); } } tmpTernaryOp = gnu.mapping.Values.empty;return gnu.mapping.Values.empty;
  }
  
  public Object apply3(ModuleMethod paramModuleMethod, Object paramObject1, Object paramObject2, Object paramObject3)
  {
    switch (selector) {case 50:  return lambda1(paramObject1, paramObject2, paramObject3) ? Boolean.TRUE : Boolean.FALSE;
    


    case 51: 
      return lambda2(paramObject1, paramObject2, paramObject3) ? Boolean.TRUE : Boolean.FALSE;
    case 52:  return lambda3(paramObject1, paramObject2, paramObject3) ? Boolean.TRUE : Boolean.FALSE;
    






































































































    case 59: 
      return testOnGroupBeginSimple(paramObject1, paramObject2, paramObject3) ? Boolean.TRUE : Boolean.FALSE;
    













































    case 61: 
      testOnBadCountSimple(paramObject1, paramObject2, paramObject3);return gnu.mapping.Values.empty;
    



    case 62: 
      return testOnBadEndNameSimple(paramObject1, paramObject2, paramObject3);
    





























































































































































    case 67: 
      testResultSet$Ex(paramObject1, paramObject2, paramObject3);return gnu.mapping.Values.empty; } return super.apply3(paramModuleMethod, paramObject1, paramObject2, paramObject3);
  }
  

  public static void testResultClear(Object runner)
  {
    try
    {
      testResultAlist$Ex((test-runner)(localObject = gnu.mapping.Promise.force(runner, test-runner.class)), gnu.lists.LList.Empty);return; } catch (ClassCastException localClassCastException) { Object localObject; throw new gnu.mapping.WrongType(localClassCastException, "test-result-alist!", 0, localObject);
    }
  }
  





























































































































































































































































































































































































































































  public int matchN(ModuleMethod paramModuleMethod, Object[] paramArrayOfObject, gnu.mapping.CallContext paramCallContext)
  {
    switch (selector) {case 87:  values = paramArrayOfObject;proc = paramModuleMethod;pc = 5;return 0;
    case 86: 
      values = paramArrayOfObject;proc = paramModuleMethod;pc = 5;return 0;
    case 84: 
      values = paramArrayOfObject;proc = paramModuleMethod;pc = 5;return 0;
    case 71: 
      values = paramArrayOfObject;proc = paramModuleMethod;pc = 5;return 0;
    case 70: 
      values = paramArrayOfObject;proc = paramModuleMethod;pc = 5;return 0; } return super.matchN(paramModuleMethod, paramArrayOfObject, paramCallContext);
  }
  
  public Object apply0(ModuleMethod paramModuleMethod)
  {
    switch (selector) {case 53:  return testRunnerNull();
    













    case 54: 
      return testRunnerSimple();
    






























    case 55: 
      return testRunnerGet();
    








    case 56: 
      return testRunnerCreate();
    




































































































































































































































































































    case 72: 
      return $PcTestReportResult(); } return super.apply0(paramModuleMethod);
  }
  




























































  static Object $PcTestSyntaxFile(Object form) { return kawa.lib.std_syntax.syntaxSource(form); }
  
  static gnu.lists.Pair $PcTestSourceLine2(Object form) { Object line = kawa.lib.std_syntax.syntaxLine(form);
    Object file = $PcTestSyntaxFile(form);
    Object line$Mnpair = gnu.expr.KawaConvert.isTrue(line) ? gnu.lists.LList.list1(kawa.lib.lists.cons(Lit5, line)) : gnu.lists.LList.Empty;
    
    return kawa.lib.lists.cons(kawa.lib.lists.cons(Lit6, kawa.lib.std_syntax.syntaxObject$To$Datum(form)), gnu.expr.KawaConvert.isTrue(file) ? kawa.lib.lists.cons(kawa.lib.lists.cons(Lit4, file), line$Mnpair) : line$Mnpair);
  }
  

  public class test-runner
  {
    public Object pass$Mncount;
    
    public Object fail$Mncount;
    
    public Object xpass$Mncount;
    
    public Object xfail$Mncount;
    
    public Object skip$Mncount;
    
    public Object skip$Mnlist;
    
    public Object fail$Mnlist;
    
    public Object run$Mnlist;
    public Object skip$Mnsave;
    public Object fail$Mnsave;
    public Object group$Mnstack;
    public Object on$Mntest$Mnbegin;
    public Object on$Mntest$Mnend;
    public Object on$Mngroup$Mnbegin;
    public Object on$Mngroup$Mnend;
    public Object on$Mnfinal;
    public Object on$Mnbad$Mncount;
    public Object on$Mnbad$Mnend$Mnname;
    public Object total$Mncount;
    public Object count$Mnlist;
    public Object result$Mnalist;
    public Object aux$Mnvalue;
    
    public test-runner() {}
  }
  
  public class frame
    extends gnu.expr.ModuleBody
  {
    Object error;
    final ModuleMethod lambda$Fn4;
    
    public Object apply2(ModuleMethod paramModuleMethod, Object paramObject1, Object paramObject2)
    {
      if (selector == 1) return lambda5(paramObject1, paramObject2) ? Boolean.TRUE : Boolean.FALSE; return super.apply2(paramModuleMethod, paramObject1, paramObject2); } public void apply(gnu.mapping.CallContext paramCallContext) { ModuleMethod.applyError(); } public int match2(ModuleMethod paramModuleMethod, Object paramObject1, Object paramObject2, gnu.mapping.CallContext paramCallContext) { if (selector == 1) { value1 = paramObject1;value2 = paramObject2;proc = paramModuleMethod;pc = 2;return 0; } return super.match2(paramModuleMethod, paramObject1, paramObject2, paramCallContext);
    }
    
    /* Error */
    boolean lambda5(Object value, Object expected)
    {
      // Byte code:
      //   0: aload_1
      //   1: ldc 2
      //   3: invokestatic 8	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      //   6: dup
      //   7: astore 4
      //   9: checkcast 2	java/lang/Number
      //   12: invokestatic 24	kawa/lib/numbers:realPart	(Ljava/lang/Number;)Ljava/lang/Number;
      //   15: astore_3
      //   16: aload_1
      //   17: ldc 2
      //   19: invokestatic 8	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      //   22: dup
      //   23: astore 5
      //   25: checkcast 2	java/lang/Number
      //   28: invokestatic 29	kawa/lib/numbers:imagPart	(Ljava/lang/Number;)Ljava/lang/Number;
      //   31: astore 4
      //   33: aload_2
      //   34: ldc 2
      //   36: invokestatic 8	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      //   39: dup
      //   40: astore 6
      //   42: checkcast 2	java/lang/Number
      //   45: invokestatic 24	kawa/lib/numbers:realPart	(Ljava/lang/Number;)Ljava/lang/Number;
      //   48: astore 5
      //   50: aload_2
      //   51: ldc 2
      //   53: invokestatic 8	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      //   56: dup
      //   57: astore 7
      //   59: checkcast 2	java/lang/Number
      //   62: invokestatic 29	kawa/lib/numbers:imagPart	(Ljava/lang/Number;)Ljava/lang/Number;
      //   65: astore 6
      //   67: aload_3
      //   68: iconst_m1
      //   69: aload 5
      //   71: aload_0
      //   72: getfield 35	gnu/kawa/slib/testing$frame:error	Ljava/lang/Object;
      //   75: invokestatic 41	gnu/kawa/functions/AddOp:apply2	(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      //   78: invokestatic 47	gnu/kawa/functions/NumberCompare:$Gr$Eq	(Ljava/lang/Object;Ljava/lang/Object;)Z
      //   81: ifeq +64 -> 145
      //   84: aload 4
      //   86: iconst_m1
      //   87: aload 6
      //   89: aload_0
      //   90: getfield 35	gnu/kawa/slib/testing$frame:error	Ljava/lang/Object;
      //   93: invokestatic 41	gnu/kawa/functions/AddOp:apply2	(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      //   96: invokestatic 47	gnu/kawa/functions/NumberCompare:$Gr$Eq	(Ljava/lang/Object;Ljava/lang/Object;)Z
      //   99: ifeq +42 -> 141
      //   102: aload_3
      //   103: iconst_1
      //   104: aload 5
      //   106: aload_0
      //   107: getfield 35	gnu/kawa/slib/testing$frame:error	Ljava/lang/Object;
      //   110: invokestatic 41	gnu/kawa/functions/AddOp:apply2	(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      //   113: invokestatic 50	gnu/kawa/functions/NumberCompare:$Ls$Eq	(Ljava/lang/Object;Ljava/lang/Object;)Z
      //   116: ifeq +21 -> 137
      //   119: aload 4
      //   121: iconst_1
      //   122: aload 6
      //   124: aload_0
      //   125: getfield 35	gnu/kawa/slib/testing$frame:error	Ljava/lang/Object;
      //   128: invokestatic 41	gnu/kawa/functions/AddOp:apply2	(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      //   131: invokestatic 50	gnu/kawa/functions/NumberCompare:$Ls$Eq	(Ljava/lang/Object;Ljava/lang/Object;)Z
      //   134: goto +12 -> 146
      //   137: iconst_0
      //   138: goto +8 -> 146
      //   141: iconst_0
      //   142: goto +4 -> 146
      //   145: iconst_0
      //   146: ireturn
      //   147: new 12	gnu/mapping/WrongType
      //   150: dup_x1
      //   151: swap
      //   152: ldc 14
      //   154: iconst_1
      //   155: aload 4
      //   157: invokespecial 18	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
      //   160: athrow
      //   161: new 12	gnu/mapping/WrongType
      //   164: dup_x1
      //   165: swap
      //   166: ldc 26
      //   168: iconst_1
      //   169: aload 5
      //   171: invokespecial 18	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
      //   174: athrow
      //   175: new 12	gnu/mapping/WrongType
      //   178: dup_x1
      //   179: swap
      //   180: ldc 14
      //   182: iconst_1
      //   183: aload 6
      //   185: invokespecial 18	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
      //   188: athrow
      //   189: new 12	gnu/mapping/WrongType
      //   192: dup_x1
      //   193: swap
      //   194: ldc 26
      //   196: iconst_1
      //   197: aload 7
      //   199: invokespecial 18	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
      //   202: athrow
      // Line number table:
      //   Java source line #667	-> byte code offset #0
      //   Java source line #668	-> byte code offset #0
      //   Java source line #669	-> byte code offset #16
      //   Java source line #670	-> byte code offset #33
      //   Java source line #671	-> byte code offset #50
      //   Java source line #672	-> byte code offset #67
      //   Java source line #673	-> byte code offset #84
      //   Java source line #674	-> byte code offset #102
      //   Java source line #675	-> byte code offset #119
      //   Java source line #668	-> byte code offset #147
      //   Java source line #669	-> byte code offset #161
      //   Java source line #670	-> byte code offset #175
      //   Java source line #671	-> byte code offset #189
      // Local variable table:
      //   start	length	slot	name	signature
      //   0	147	0	this	frame
      //   0	146	1	value	Object
      //   0	146	2	expected	Object
      //   15	1	3	localNumber1	Number
      //   67	36	3	rval	Number
      //   7	25	4	localObject1	Object
      //   67	89	4	ival	Number
      //   23	26	5	localObject2	Object
      //   67	103	5	rexp	Number
      //   40	1	6	localObject3	Object
      //   65	119	6	iexp	Number
      //   57	141	7	localObject4	Object
      //   147	1	12	localClassCastException1	ClassCastException
      //   161	1	13	localClassCastException2	ClassCastException
      //   175	1	14	localClassCastException3	ClassCastException
      //   189	1	15	localClassCastException4	ClassCastException
      // Exception table:
      //   from	to	target	type
      //   9	12	147	java/lang/ClassCastException
      //   25	28	161	java/lang/ClassCastException
      //   42	45	175	java/lang/ClassCastException
      //   59	62	189	java/lang/ClassCastException
    }
    
    public frame()
    {
      void tmp18_15 = new ModuleMethod(this, 1, null, 8194);
      tmp18_15.setProperty("source-location", "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm:667");
      lambda$Fn4 = tmp18_15;
    }
  }
  
  public static gnu.mapping.Procedure $PcTestApproximate$Eq(Object error)
  {
    frame $heapFrame = new frame();error = error;
    return lambda$Fn4;
  }
  






















  static Object lambda16(Object x)
  {
    Object localObject = kawa.lang.TemplateScope.make();gnu.lists.Pair localPair = gnu.lists.LList.list2(x, gnu.lists.LList.list2(Lit97.execute(null, (kawa.lang.TemplateScope)localObject), $PcTestSourceLine2(x)));localObject = kawa.lang.SyntaxPattern.allocVars(3, null);
    
    kawa.lang.TemplateScope localTemplateScope = kawa.lang.TemplateScope.make();
    

    localTemplateScope = kawa.lang.TemplateScope.make();return Lit100.match(localPair, (Object[])localObject, 0) ? Lit101.execute((Object[])localObject, localTemplateScope) : Lit98.match(localPair, (Object[])localObject, 0) ? Lit99.execute((Object[])localObject, localTemplateScope) : kawa.standard.syntax_case.error("syntax-case", localPair);
  }
  
  static Object lambda17(Object x) {
    Object localObject = kawa.lang.TemplateScope.make();gnu.lists.Pair localPair = gnu.lists.LList.list2(x, gnu.lists.LList.list2(Lit103.execute(null, (kawa.lang.TemplateScope)localObject), $PcTestSourceLine2(x)));localObject = kawa.lang.SyntaxPattern.allocVars(4, null);
    
    kawa.lang.TemplateScope localTemplateScope = kawa.lang.TemplateScope.make();
    




    localTemplateScope = kawa.lang.TemplateScope.make();return Lit106.match(localPair, (Object[])localObject, 0) ? Lit107.execute((Object[])localObject, localTemplateScope) : Lit104.match(localPair, (Object[])localObject, 0) ? Lit105.execute((Object[])localObject, localTemplateScope) : kawa.standard.syntax_case.error("syntax-case", localPair);
  }
  
  static Object $PcTestComp2(Object comp, Object x)
  {
    Object localObject = kawa.lang.TemplateScope.make();gnu.lists.Pair localPair = gnu.lists.LList.list3(x, gnu.lists.LList.list2(Lit15.execute(null, (kawa.lang.TemplateScope)localObject), $PcTestSourceLine2(x)), comp);localObject = kawa.lang.SyntaxPattern.allocVars(6, null);
    
    kawa.lang.TemplateScope localTemplateScope = kawa.lang.TemplateScope.make();
    




    localTemplateScope = kawa.lang.TemplateScope.make();return Lit18.match(localPair, (Object[])localObject, 0) ? Lit19.execute((Object[])localObject, localTemplateScope) : Lit16.match(localPair, (Object[])localObject, 0) ? Lit17.execute((Object[])localObject, localTemplateScope) : kawa.standard.syntax_case.error("syntax-case", localPair);
  }
  
  static Object lambda18(Object x)
  {
    kawa.lang.TemplateScope localTemplateScope = kawa.lang.TemplateScope.make();return $PcTestComp2(Lit109.execute(null, localTemplateScope), x); }
  
  static Object lambda19(Object x) { kawa.lang.TemplateScope localTemplateScope = kawa.lang.TemplateScope.make();return $PcTestComp2(Lit111.execute(null, localTemplateScope), x); }
  
  static Object lambda20(Object x) { kawa.lang.TemplateScope localTemplateScope = kawa.lang.TemplateScope.make();return $PcTestComp2(Lit113.execute(null, localTemplateScope), x);
  }
  
  static Object lambda21(Object x) { Object localObject = kawa.lang.TemplateScope.make();gnu.lists.Pair localPair = gnu.lists.LList.list2(x, gnu.lists.LList.list2(Lit115.execute(null, (kawa.lang.TemplateScope)localObject), $PcTestSourceLine2(x)));localObject = kawa.lang.SyntaxPattern.allocVars(6, null);
    
    kawa.lang.TemplateScope localTemplateScope = kawa.lang.TemplateScope.make();
    




    localTemplateScope = kawa.lang.TemplateScope.make();return Lit118.match(localPair, (Object[])localObject, 0) ? Lit119.execute((Object[])localObject, localTemplateScope) : Lit116.match(localPair, (Object[])localObject, 0) ? Lit117.execute((Object[])localObject, localTemplateScope) : kawa.standard.syntax_case.error("syntax-case", localPair);
  }
  
  public Object apply1(ModuleMethod paramModuleMethod, Object paramObject)
  {
    switch (selector) {case 12:  return isTestRunner(paramObject) ? Boolean.TRUE : Boolean.FALSE; }
    try {
      return testRunnerPassCount((test-runner)gnu.mapping.Promise.force(paramObject, test-runner.class));





















































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException1)
    {




















































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException1, "test-runner-pass-count", 1, paramObject);
    }
    try
    {
      return testRunnerFailCount((test-runner)gnu.mapping.Promise.force(paramObject, test-runner.class));




















































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException2)
    {




















































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException2, "test-runner-fail-count", 1, paramObject);
    }
    try
    {
      return testRunnerXpassCount((test-runner)gnu.mapping.Promise.force(paramObject, test-runner.class));




















































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException3)
    {



















































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException3, "test-runner-xpass-count", 1, paramObject);
    }
    try
    {
      return testRunnerXfailCount((test-runner)gnu.mapping.Promise.force(paramObject, test-runner.class));



















































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException4)
    {



















































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException4, "test-runner-xfail-count", 1, paramObject);
    }
    try
    {
      return testRunnerSkipCount((test-runner)gnu.mapping.Promise.force(paramObject, test-runner.class));



















































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException5)
    {


















































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException5, "test-runner-skip-count", 1, paramObject);
    }
    try
    {
      return $PcTestRunnerSkipList((test-runner)gnu.mapping.Promise.force(paramObject, test-runner.class));


















































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException6)
    {


















































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException6, "%test-runner-skip-list", 1, paramObject);
    }
    try
    {
      return $PcTestRunnerFailList((test-runner)gnu.mapping.Promise.force(paramObject, test-runner.class));


















































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException7)
    {

















































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException7, "%test-runner-fail-list", 1, paramObject);
    }
    try
    {
      return testRunnerGroupStack((test-runner)gnu.mapping.Promise.force(paramObject, test-runner.class));















































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException8)
    {















































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException8, "test-runner-group-stack", 1, paramObject);
    }
    try
    {
      return testRunnerOnTestBegin((test-runner)gnu.mapping.Promise.force(paramObject, test-runner.class));















































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException9)
    {














































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException9, "test-runner-on-test-begin", 1, paramObject);
    }
    try
    {
      return testRunnerOnTestEnd((test-runner)gnu.mapping.Promise.force(paramObject, test-runner.class));














































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException10)
    {














































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException10, "test-runner-on-test-end", 1, paramObject);
    }
    try
    {
      return testRunnerOnGroupBegin((test-runner)gnu.mapping.Promise.force(paramObject, test-runner.class));













































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException11)
    {













































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException11, "test-runner-on-group-begin", 1, paramObject);
    }
    try
    {
      return testRunnerOnGroupEnd((test-runner)gnu.mapping.Promise.force(paramObject, test-runner.class));












































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException12)
    {












































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException12, "test-runner-on-group-end", 1, paramObject);
    }
    try
    {
      return testRunnerOnFinal((test-runner)gnu.mapping.Promise.force(paramObject, test-runner.class));











































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException13)
    {











































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException13, "test-runner-on-final", 1, paramObject);
    }
    try
    {
      return testRunnerOnBadCount((test-runner)gnu.mapping.Promise.force(paramObject, test-runner.class));










































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException14)
    {










































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException14, "test-runner-on-bad-count", 1, paramObject);
    }
    try
    {
      return testRunnerOnBadEndName((test-runner)gnu.mapping.Promise.force(paramObject, test-runner.class));









































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException15)
    {









































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException15, "test-runner-on-bad-end-name", 1, paramObject);
    }
    try
    {
      return testResultAlist((test-runner)gnu.mapping.Promise.force(paramObject, test-runner.class));







































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException16)
    {






































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException16, "test-result-alist", 1, paramObject);
    }
    try
    {
      return testRunnerAuxValue((test-runner)gnu.mapping.Promise.force(paramObject, test-runner.class));





































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException17)
    {





































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException17, "test-runner-aux-value", 1, paramObject);
    }
    testRunnerReset(paramObject);return gnu.mapping.Values.empty;
    














    return testRunnerGroupPath(paramObject);
    

    return $PcTestNullCallback(paramObject) ? Boolean.TRUE : Boolean.FALSE;
    









































































    return $PcTestShouldExecute(paramObject);
    




































































    return testOnGroupEndSimple(paramObject) ? Boolean.TRUE : Boolean.FALSE;
    


















































    testOnFinalSimple(paramObject);return gnu.mapping.Values.empty;
    




































































    testOnTestBeginSimple(paramObject);return gnu.mapping.Values.empty;
    





















    return testOnTestEndSimple(paramObject);
    













































    testResultClear(paramObject);return gnu.mapping.Values.empty;
    











































































































    return $PcTestOnTestBegin(paramObject) ? Boolean.TRUE : Boolean.FALSE;
    









    return testRunnerTestName(paramObject);
    













    return $PcTestApproximate$Eq(paramObject);
    












































































































































































































































































































































    return $PcTestAsSpecifier(paramObject);
    





















    return testMatchName(paramObject);
    


    return testReadEvalString(paramObject);return lambda16(paramObject);return lambda17(paramObject);return lambda18(paramObject);return lambda19(paramObject);return lambda20(paramObject);return lambda21(paramObject);return lambda22(paramObject);return super.apply1(paramModuleMethod, paramObject); }
  static Object lambda22(Object x) { Object localObject = kawa.lang.TemplateScope.make();gnu.lists.Pair localPair = gnu.lists.LList.list2(x, gnu.lists.LList.list2(Lit123.execute(null, (kawa.lang.TemplateScope)localObject), $PcTestSourceLine2(x)));localObject = kawa.lang.SyntaxPattern.allocVars(5, null);
    
    kawa.lang.TemplateScope localTemplateScope = kawa.lang.TemplateScope.make();
    




    localTemplateScope = kawa.lang.TemplateScope.make();
    



    localTemplateScope = kawa.lang.TemplateScope.make();return Lit128.match(localPair, (Object[])localObject, 0) ? Lit129.execute((Object[])localObject, localTemplateScope) : Lit126.match(localPair, (Object[])localObject, 0) ? Lit127.execute((Object[])localObject, localTemplateScope) : Lit124.match(localPair, (Object[])localObject, 0) ? Lit125.execute((Object[])localObject, localTemplateScope) : kawa.standard.syntax_case.error("syntax-case", localPair);
  }
  


  public class frame0
    extends gnu.expr.ModuleBody
  {
    Object saved$Mnrunner;
    
    Object r;
    @gnu.expr.SourceName(name="saved-runner")
    Object saved$Mnrunner$1;
    gnu.lists.LList rest;
    Object first;
    final ModuleMethod lambda$Fn5 = new ModuleMethod(this, 2, null, 0);
    final ModuleMethod lambda$Fn6 = new ModuleMethod(this, 3, null, 0);
    final ModuleMethod lambda$Fn7;
    final ModuleMethod lambda$Fn8;
    final ModuleMethod lambda$Fn9;
    final ModuleMethod lambda$Fn10;
    
    Object lambda6() { return testing.test$Mnrunner$Mncurrent.apply1(first); } Object lambda7() { return kawa.standard.Scheme.apply.apply2(testing.test$Mnapply, rest); }
    












    Object lambda9() { return testing.test$Mnrunner$Mncurrent.apply1(r); } Object lambda10() { return kawa.standard.Scheme.apply.apply3(testing.test$Mnapply, first, rest); }
    








    Object lambda8() { return testing.test$Mnrunner$Mncurrent.apply1(saved$Mnrunner$1); } Object lambda11() { return testing.test$Mnrunner$Mncurrent.apply1(saved$Mnrunner); } public int match0(ModuleMethod paramModuleMethod, gnu.mapping.CallContext paramCallContext) { switch (selector) {case 7:  proc = paramModuleMethod;pc = 0;return 0; case 6:  proc = paramModuleMethod;pc = 0;return 0; case 5:  proc = paramModuleMethod;pc = 0;return 0; case 4:  proc = paramModuleMethod;pc = 0;return 0; case 3:  proc = paramModuleMethod;pc = 0;return 0; case 2:  proc = paramModuleMethod;pc = 0;return 0; } return super.match0(paramModuleMethod, paramCallContext); } public Object apply0(ModuleMethod paramModuleMethod) { switch (selector) {case 2:  return lambda6(); case 3:  return lambda7(); case 4:  return lambda8(); case 5:  return lambda9(); case 6:  return lambda10(); case 7:  return lambda11(); } return super.apply0(paramModuleMethod);
    }
    
    public frame0()
    {
      void tmp46_43 = new ModuleMethod(this, 4, null, 0);
      tmp46_43.setProperty("source-location", "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm:950");
      lambda$Fn7 = tmp46_43;
      lambda$Fn8 = new ModuleMethod(this, 5, null, 0);
      lambda$Fn9 = new ModuleMethod(this, 6, null, 0);
      void tmp101_98 = new ModuleMethod(this, 7, null, 0);
      tmp101_98.setProperty("source-location", "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm:950");
      lambda$Fn10 = tmp101_98;
    }
    
    public void apply(gnu.mapping.CallContext paramCallContext)
    {
      ModuleMethod.applyError();
    }
  }
  
  public Object apply2(ModuleMethod paramModuleMethod, Object paramObject1, Object paramObject2)
  {
    switch (selector) {} try { testRunnerPassCount$Ex((test-runner)gnu.mapping.Promise.force(paramObject1, test-runner.class), paramObject2);return gnu.mapping.Values.empty;





















































































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException1)
    {




















































































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException1, "test-runner-pass-count!", 1, paramObject1);
    }
    try
    {
      testRunnerFailCount$Ex((test-runner)gnu.mapping.Promise.force(paramObject1, test-runner.class), paramObject2);return gnu.mapping.Values.empty;




















































































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException2)
    {




















































































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException2, "test-runner-fail-count!", 1, paramObject1);
    }
    try
    {
      testRunnerXpassCount$Ex((test-runner)gnu.mapping.Promise.force(paramObject1, test-runner.class), paramObject2);return gnu.mapping.Values.empty;




















































































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException3)
    {



















































































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException3, "test-runner-xpass-count!", 1, paramObject1);
    }
    try
    {
      testRunnerXfailCount$Ex((test-runner)gnu.mapping.Promise.force(paramObject1, test-runner.class), paramObject2);return gnu.mapping.Values.empty;



















































































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException4)
    {



















































































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException4, "test-runner-xfail-count!", 1, paramObject1);
    }
    try
    {
      testRunnerSkipCount$Ex((test-runner)gnu.mapping.Promise.force(paramObject1, test-runner.class), paramObject2);return gnu.mapping.Values.empty;



















































































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException5)
    {


















































































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException5, "test-runner-skip-count!", 1, paramObject1);
    }
    try
    {
      $PcTestRunnerSkipList$Ex((test-runner)gnu.mapping.Promise.force(paramObject1, test-runner.class), paramObject2);return gnu.mapping.Values.empty;


















































































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException6)
    {


















































































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException6, "%test-runner-skip-list!", 1, paramObject1);
    }
    try
    {
      $PcTestRunnerFailList$Ex((test-runner)gnu.mapping.Promise.force(paramObject1, test-runner.class), paramObject2);return gnu.mapping.Values.empty;


















































































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException7)
    {

















































































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException7, "%test-runner-fail-list!", 1, paramObject1);
    }
    try
    {
      testRunnerGroupStack$Ex((test-runner)gnu.mapping.Promise.force(paramObject1, test-runner.class), paramObject2);return gnu.mapping.Values.empty;















































































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException8)
    {















































































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException8, "test-runner-group-stack!", 1, paramObject1);
    }
    try
    {
      testRunnerOnTestBegin$Ex((test-runner)gnu.mapping.Promise.force(paramObject1, test-runner.class), paramObject2);return gnu.mapping.Values.empty;















































































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException9)
    {














































































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException9, "test-runner-on-test-begin!", 1, paramObject1);
    }
    try
    {
      testRunnerOnTestEnd$Ex((test-runner)gnu.mapping.Promise.force(paramObject1, test-runner.class), paramObject2);return gnu.mapping.Values.empty;














































































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException10)
    {














































































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException10, "test-runner-on-test-end!", 1, paramObject1);
    }
    try
    {
      testRunnerOnGroupBegin$Ex((test-runner)gnu.mapping.Promise.force(paramObject1, test-runner.class), paramObject2);return gnu.mapping.Values.empty;













































































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException11)
    {













































































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException11, "test-runner-on-group-begin!", 1, paramObject1);
    }
    try
    {
      testRunnerOnGroupEnd$Ex((test-runner)gnu.mapping.Promise.force(paramObject1, test-runner.class), paramObject2);return gnu.mapping.Values.empty;












































































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException12)
    {












































































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException12, "test-runner-on-group-end!", 1, paramObject1);
    }
    try
    {
      testRunnerOnFinal$Ex((test-runner)gnu.mapping.Promise.force(paramObject1, test-runner.class), paramObject2);return gnu.mapping.Values.empty;











































































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException13)
    {











































































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException13, "test-runner-on-final!", 1, paramObject1);
    }
    try
    {
      testRunnerOnBadCount$Ex((test-runner)gnu.mapping.Promise.force(paramObject1, test-runner.class), paramObject2);return gnu.mapping.Values.empty;










































































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException14)
    {










































































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException14, "test-runner-on-bad-count!", 1, paramObject1);
    }
    try
    {
      testRunnerOnBadEndName$Ex((test-runner)gnu.mapping.Promise.force(paramObject1, test-runner.class), paramObject2);return gnu.mapping.Values.empty;









































































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException15)
    {









































































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException15, "test-runner-on-bad-end-name!", 1, paramObject1);
    }
    try
    {
      testResultAlist$Ex((test-runner)gnu.mapping.Promise.force(paramObject1, test-runner.class), paramObject2);return gnu.mapping.Values.empty;







































































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException16)
    {






































































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException16, "test-result-alist!", 1, paramObject1);
    }
    try
    {
      testRunnerAuxValue$Ex((test-runner)gnu.mapping.Promise.force(paramObject1, test-runner.class), paramObject2);return gnu.mapping.Values.empty;





































































































































































































































































































































































































    }
    catch (ClassCastException localClassCastException17)
    {





































































































































































































































































































































































































      throw new gnu.mapping.WrongType(localClassCastException17, "test-runner-aux-value!", 1, paramObject1);
    }
    $PcTestBegin(paramObject1, paramObject2);return gnu.mapping.Values.empty;
    























































































































    return $PcTestEnd(paramObject1, paramObject2);
    





























































































































    testResultRemove(paramObject1, paramObject2);return gnu.mapping.Values.empty;
    













































































































    $PcTestOnTestEnd(paramObject1, paramObject2);return gnu.mapping.Values.empty;
    



















































































































































































































































































































    return $PcTestMatchNth(paramObject1, paramObject2);return super.apply2(paramModuleMethod, paramObject1, paramObject2); } public static gnu.mapping.Procedure $PcTestMatchNth(Object n, Object count) { frame1 $heapFrame = new frame1();n = n;count = count;
    i = Lit0;
    return lambda$Fn11; } public class frame1 extends gnu.expr.ModuleBody { public Object apply1(ModuleMethod paramModuleMethod, Object paramObject) { if (selector == 8) return lambda12(paramObject) ? Boolean.TRUE : Boolean.FALSE; return super.apply1(paramModuleMethod, paramObject); } public void apply(gnu.mapping.CallContext paramCallContext) { ModuleMethod.applyError(); } public int match1(ModuleMethod paramModuleMethod, Object paramObject, gnu.mapping.CallContext paramCallContext) { if (selector == 8) { value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0; } return super.match1(paramModuleMethod, paramObject, paramCallContext); }
    boolean lambda12(Object runner) { i = gnu.math.IntNum.add(i, 1);
      return gnu.kawa.functions.NumberCompare.$Gr$Eq(i, n) ? gnu.kawa.functions.NumberCompare.$Ls(i, gnu.kawa.functions.AddOp.apply2(1, n, count)) : false; }
    
    Object count;
    Object n;
    gnu.math.IntNum i;
    final ModuleMethod lambda$Fn11;
    public frame1() { void tmp19_16 = new ModuleMethod(this, 8, null, 4097);
      tmp19_16.setProperty("source-location", "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm:956");
      lambda$Fn11 = tmp19_16; } }
  
  public class frame2 extends gnu.expr.ModuleBody { gnu.lists.LList pred$Mnlist;
    
    public Object apply1(ModuleMethod paramModuleMethod, Object paramObject) { if (selector == 9) return lambda13(paramObject); return super.apply1(paramModuleMethod, paramObject); } public void apply(gnu.mapping.CallContext paramCallContext) { ModuleMethod.applyError(); } public int match1(ModuleMethod paramModuleMethod, Object paramObject, gnu.mapping.CallContext paramCallContext) { if (selector == 9) { value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0; } return super.match1(paramModuleMethod, paramObject, paramCallContext);
    }
    
    final ModuleMethod lambda$Fn12;
    /* Error */
    Object lambda13(Object runner)
    {
      // Byte code:
      //   0: iconst_1
      //   1: istore_2
      //   2: aload_0
      //   3: getfield 6	gnu/kawa/slib/testing$frame2:pred$Mnlist	Lgnu/lists/LList;
      //   6: astore_3
      //   7: aload_3
      //   8: invokestatic 12	kawa/lib/lists:isNull	(Ljava/lang/Object;)Z
      //   11: ifeq +19 -> 30
      //   14: iload_2
      //   15: ifeq +9 -> 24
      //   18: getstatic 18	java/lang/Boolean:TRUE	Ljava/lang/Boolean;
      //   21: goto +57 -> 78
      //   24: getstatic 21	java/lang/Boolean:FALSE	Ljava/lang/Boolean;
      //   27: goto +51 -> 78
      //   30: getstatic 27	kawa/standard/Scheme:applyToArgs	Lgnu/kawa/functions/ApplyToArgs;
      //   33: aload_3
      //   34: ldc 29
      //   36: invokestatic 35	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      //   39: dup
      //   40: astore 4
      //   42: checkcast 29	gnu/lists/Pair
      //   45: invokestatic 48	kawa/lib/lists:car	(Lgnu/lists/Pair;)Ljava/lang/Object;
      //   48: aload_1
      //   49: invokevirtual 54	gnu/mapping/Procedure:apply2	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      //   52: invokestatic 59	gnu/expr/KawaConvert:isTrue	(Ljava/lang/Object;)Z
      //   55: ifne +5 -> 60
      //   58: iconst_0
      //   59: istore_2
      //   60: aload_3
      //   61: ldc 29
      //   63: invokestatic 35	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      //   66: dup
      //   67: astore 4
      //   69: checkcast 29	gnu/lists/Pair
      //   72: invokestatic 63	kawa/lib/lists:cdr	(Lgnu/lists/Pair;)Ljava/lang/Object;
      //   75: goto -69 -> 6
      //   78: areturn
      //   79: new 39	gnu/mapping/WrongType
      //   82: dup_x1
      //   83: swap
      //   84: ldc 41
      //   86: iconst_1
      //   87: aload 4
      //   89: invokespecial 45	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
      //   92: athrow
      //   93: new 39	gnu/mapping/WrongType
      //   96: dup_x1
      //   97: swap
      //   98: ldc 61
      //   100: iconst_1
      //   101: aload 4
      //   103: invokespecial 45	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
      //   106: athrow
      // Line number table:
      //   Java source line #968	-> byte code offset #0
      //   Java source line #969	-> byte code offset #0
      //   Java source line #970	-> byte code offset #2
      //   Java source line #971	-> byte code offset #7
      //   Java source line #974	-> byte code offset #30
      //   Java source line #975	-> byte code offset #58
      //   Java source line #976	-> byte code offset #60
      //   Java source line #974	-> byte code offset #79
      //   Java source line #976	-> byte code offset #93
      // Local variable table:
      //   start	length	slot	name	signature
      //   0	79	0	this	frame2
      //   0	78	1	runner	Object
      //   2	76	2	result	boolean
      //   7	71	3	l	Object
      // Exception table:
      //   from	to	target	type
      //   42	45	79	java/lang/ClassCastException
      //   69	72	93	java/lang/ClassCastException
    }
    
    public frame2()
    {
      void tmp19_16 = new ModuleMethod(this, 9, null, 4097);
      tmp19_16.setProperty("source-location", "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm:968");
      lambda$Fn12 = tmp19_16;
    }
  }
  
  public static gnu.mapping.Procedure $PcTestMatchAll$V(Object[] argsArray)
  {
    ;
    frame2 $heapFrame = new frame2(); gnu.lists.LList localLList1; pred$Mnlist = (localLList1 = gnu.lists.LList.makeList(argsArray, 0));
    return lambda$Fn12;
  }
  
  public Object applyN(ModuleMethod paramModuleMethod, Object[] paramArrayOfObject)
  {
    switch (selector) {case 70:  return testResultKind$V(paramArrayOfObject);
    

    case 71: 
      return isTestPassed$V(paramArrayOfObject);
    






















































































































































































































































































































































































    case 84: 
      int i = paramArrayOfObject.length - 1; do { i--; } while (i >= 0); return testApply$V(paramArrayOfObject[0], new Object[] { paramArrayOfObject[(i + 1)] });
    








































    case 86: 
      return $PcTestMatchAll$V(paramArrayOfObject);
    













    case 87: 
      return $PcTestMatchAny$V(paramArrayOfObject); } return super.applyN(paramModuleMethod, paramArrayOfObject); }
  public class frame3 extends gnu.expr.ModuleBody { public Object apply1(ModuleMethod paramModuleMethod, Object paramObject) { if (selector == 10) return lambda14(paramObject); return super.apply1(paramModuleMethod, paramObject); } public void apply(gnu.mapping.CallContext paramCallContext) { ModuleMethod.applyError(); } public int match1(ModuleMethod paramModuleMethod, Object paramObject, gnu.mapping.CallContext paramCallContext) { if (selector == 10) { value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0; } return super.match1(paramModuleMethod, paramObject, paramCallContext);
    }
    
    gnu.lists.LList pred$Mnlist;
    final ModuleMethod lambda$Fn13;
    /* Error */
    Object lambda14(Object runner)
    {
      // Byte code:
      //   0: iconst_0
      //   1: istore_2
      //   2: aload_0
      //   3: getfield 6	gnu/kawa/slib/testing$frame3:pred$Mnlist	Lgnu/lists/LList;
      //   6: astore_3
      //   7: aload_3
      //   8: invokestatic 12	kawa/lib/lists:isNull	(Ljava/lang/Object;)Z
      //   11: ifeq +19 -> 30
      //   14: iload_2
      //   15: ifeq +9 -> 24
      //   18: getstatic 18	java/lang/Boolean:TRUE	Ljava/lang/Boolean;
      //   21: goto +57 -> 78
      //   24: getstatic 21	java/lang/Boolean:FALSE	Ljava/lang/Boolean;
      //   27: goto +51 -> 78
      //   30: getstatic 27	kawa/standard/Scheme:applyToArgs	Lgnu/kawa/functions/ApplyToArgs;
      //   33: aload_3
      //   34: ldc 29
      //   36: invokestatic 35	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      //   39: dup
      //   40: astore 4
      //   42: checkcast 29	gnu/lists/Pair
      //   45: invokestatic 48	kawa/lib/lists:car	(Lgnu/lists/Pair;)Ljava/lang/Object;
      //   48: aload_1
      //   49: invokevirtual 54	gnu/mapping/Procedure:apply2	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      //   52: invokestatic 59	gnu/expr/KawaConvert:isTrue	(Ljava/lang/Object;)Z
      //   55: ifeq +5 -> 60
      //   58: iconst_1
      //   59: istore_2
      //   60: aload_3
      //   61: ldc 29
      //   63: invokestatic 35	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      //   66: dup
      //   67: astore 4
      //   69: checkcast 29	gnu/lists/Pair
      //   72: invokestatic 63	kawa/lib/lists:cdr	(Lgnu/lists/Pair;)Ljava/lang/Object;
      //   75: goto -69 -> 6
      //   78: areturn
      //   79: new 39	gnu/mapping/WrongType
      //   82: dup_x1
      //   83: swap
      //   84: ldc 41
      //   86: iconst_1
      //   87: aload 4
      //   89: invokespecial 45	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
      //   92: athrow
      //   93: new 39	gnu/mapping/WrongType
      //   96: dup_x1
      //   97: swap
      //   98: ldc 61
      //   100: iconst_1
      //   101: aload 4
      //   103: invokespecial 45	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
      //   106: athrow
      // Line number table:
      //   Java source line #984	-> byte code offset #0
      //   Java source line #985	-> byte code offset #0
      //   Java source line #986	-> byte code offset #2
      //   Java source line #987	-> byte code offset #7
      //   Java source line #990	-> byte code offset #30
      //   Java source line #991	-> byte code offset #58
      //   Java source line #992	-> byte code offset #60
      //   Java source line #990	-> byte code offset #79
      //   Java source line #992	-> byte code offset #93
      // Local variable table:
      //   start	length	slot	name	signature
      //   0	79	0	this	frame3
      //   0	78	1	runner	Object
      //   2	76	2	result	boolean
      //   7	71	3	l	Object
      // Exception table:
      //   from	to	target	type
      //   42	45	79	java/lang/ClassCastException
      //   69	72	93	java/lang/ClassCastException
    }
    
    public frame3()
    {
      void tmp19_16 = new ModuleMethod(this, 10, null, 4097);
      tmp19_16.setProperty("source-location", "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm:984");
      lambda$Fn13 = tmp19_16;
    }
  }
  
  public static gnu.mapping.Procedure $PcTestMatchAny$V(Object[] argsArray)
  {
    ;
    frame3 $heapFrame = new frame3(); gnu.lists.LList localLList1; pred$Mnlist = (localLList1 = gnu.lists.LList.makeList(argsArray, 0));
    return lambda$Fn13;
  }
  
















  public static Object $PcTestAsSpecifier(Object specifier)
  {
    throw (kawa.lib.strings.isString(specifier) ? testMatchName(specifier) : kawa.lib.numbers.isInteger(specifier) ? $PcTestMatchNth(Lit13, specifier) : kawa.lib.misc.isProcedure(specifier) ? specifier : gnu.expr.Special.reachedUnexpected);return kawa.lib.exceptions.error(new Object[] { "not a valid test specifier" });
  }
  













  public static gnu.mapping.Procedure testMatchName(Object name)
  {
    frame4 $heapFrame = new frame4();name = name;
    return lambda$Fn14; } public class frame4 extends gnu.expr.ModuleBody { public Object apply1(ModuleMethod paramModuleMethod, Object paramObject) { if (selector == 11) return lambda15(paramObject); return super.apply1(paramModuleMethod, paramObject); } public void apply(gnu.mapping.CallContext paramCallContext) { ModuleMethod.applyError(); } public int match1(ModuleMethod paramModuleMethod, Object paramObject, gnu.mapping.CallContext paramCallContext) { if (selector == 11) { value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0; } return super.match1(paramModuleMethod, paramObject, paramCallContext); } Object name;
    Object lambda15(Object runner) { return kawa.standard.Scheme.isEqual.apply2(name, testing.testRunnerTestName(runner)); }
    
    final ModuleMethod lambda$Fn14; public frame4() { void tmp19_16 = new ModuleMethod(this, 11, null, 4097);
      tmp19_16.setProperty("source-location", "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/testing.scm:1024");
      lambda$Fn14 = tmp19_16; } }
  public static Object testReadEvalString(Object string) { try { Object localObject1; gnu.kawa.io.CharArrayInPort port = kawa.lib.ports.openInputString((CharSequence)(localObject1 = gnu.mapping.Promise.force(string, CharSequence.class)));
      form = kawa.lib.ports.read(port);
      
      gnu.mapping.CallContext $ctx;
      
      int i = $ctx.startFromContext(); try { kawa.lib.scheme.eval.eval$X(form, $ctx = gnu.mapping.CallContext.getInstance()); } finally { $ctx.cleanupFromContext(i);throw finally;
      }
      throw (kawa.lib.ports.readChar(port) == -1 ? $ctx.getFromContext(i) : gnu.expr.Special.reachedUnexpected);return kawa.lib.exceptions.error(new Object[] { "(not at eof)" });
    }
    catch (ClassCastException localClassCastException)
    {
      Object form;
      throw new gnu.mapping.WrongType(
      





        localClassCastException, "open-input-string", 1, form);
    }
  }
  































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































  static test-runner $PcTestRunnerAlloc()
  {
    return new test-runner();
  }
  
  /* Error */
  public static void testRunnerReset(Object runner)
  {
    // Byte code:
    //   0: aload_0
    //   1: ldc 13
    //   3: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   6: dup
    //   7: astore_1
    //   8: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   11: getstatic 87	gnu/lists/LList:Empty	Lgnu/lists/EmptyList;
    //   14: invokestatic 93	gnu/kawa/slib/testing:testResultAlist$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   17: aload_0
    //   18: ldc 13
    //   20: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   23: dup
    //   24: astore_1
    //   25: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   28: getstatic 99	gnu/kawa/slib/testing:Lit0	Lgnu/math/IntNum;
    //   31: invokestatic 102	gnu/kawa/slib/testing:testRunnerPassCount$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   34: aload_0
    //   35: ldc 13
    //   37: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   40: dup
    //   41: astore_1
    //   42: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   45: getstatic 99	gnu/kawa/slib/testing:Lit0	Lgnu/math/IntNum;
    //   48: invokestatic 107	gnu/kawa/slib/testing:testRunnerFailCount$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   51: aload_0
    //   52: ldc 13
    //   54: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   57: dup
    //   58: astore_1
    //   59: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   62: getstatic 99	gnu/kawa/slib/testing:Lit0	Lgnu/math/IntNum;
    //   65: invokestatic 112	gnu/kawa/slib/testing:testRunnerXpassCount$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   68: aload_0
    //   69: ldc 13
    //   71: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   74: dup
    //   75: astore_1
    //   76: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   79: getstatic 99	gnu/kawa/slib/testing:Lit0	Lgnu/math/IntNum;
    //   82: invokestatic 117	gnu/kawa/slib/testing:testRunnerXfailCount$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   85: aload_0
    //   86: ldc 13
    //   88: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   91: dup
    //   92: astore_1
    //   93: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   96: getstatic 99	gnu/kawa/slib/testing:Lit0	Lgnu/math/IntNum;
    //   99: invokestatic 122	gnu/kawa/slib/testing:testRunnerSkipCount$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   102: aload_0
    //   103: ldc 13
    //   105: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   108: dup
    //   109: astore_1
    //   110: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   113: getstatic 99	gnu/kawa/slib/testing:Lit0	Lgnu/math/IntNum;
    //   116: invokestatic 127	gnu/kawa/slib/testing:$PcTestRunnerTotalCount$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   119: aload_0
    //   120: ldc 13
    //   122: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   125: dup
    //   126: astore_1
    //   127: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   130: getstatic 87	gnu/lists/LList:Empty	Lgnu/lists/EmptyList;
    //   133: invokestatic 132	gnu/kawa/slib/testing:$PcTestRunnerCountList$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   136: aload_0
    //   137: ldc 13
    //   139: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   142: dup
    //   143: astore_1
    //   144: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   147: getstatic 140	java/lang/Boolean:TRUE	Ljava/lang/Boolean;
    //   150: invokestatic 143	gnu/kawa/slib/testing:$PcTestRunnerRunList$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   153: aload_0
    //   154: ldc 13
    //   156: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   159: dup
    //   160: astore_1
    //   161: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   164: getstatic 87	gnu/lists/LList:Empty	Lgnu/lists/EmptyList;
    //   167: invokestatic 148	gnu/kawa/slib/testing:$PcTestRunnerSkipList$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   170: aload_0
    //   171: ldc 13
    //   173: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   176: dup
    //   177: astore_1
    //   178: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   181: getstatic 87	gnu/lists/LList:Empty	Lgnu/lists/EmptyList;
    //   184: invokestatic 153	gnu/kawa/slib/testing:$PcTestRunnerFailList$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   187: aload_0
    //   188: ldc 13
    //   190: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   193: dup
    //   194: astore_1
    //   195: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   198: getstatic 87	gnu/lists/LList:Empty	Lgnu/lists/EmptyList;
    //   201: invokestatic 158	gnu/kawa/slib/testing:$PcTestRunnerSkipSave$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   204: aload_0
    //   205: ldc 13
    //   207: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   210: dup
    //   211: astore_1
    //   212: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   215: getstatic 87	gnu/lists/LList:Empty	Lgnu/lists/EmptyList;
    //   218: invokestatic 163	gnu/kawa/slib/testing:$PcTestRunnerFailSave$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   221: aload_0
    //   222: ldc 13
    //   224: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   227: dup
    //   228: astore_1
    //   229: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   232: getstatic 87	gnu/lists/LList:Empty	Lgnu/lists/EmptyList;
    //   235: invokestatic 168	gnu/kawa/slib/testing:testRunnerGroupStack$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   238: return
    //   239: new 75	gnu/mapping/WrongType
    //   242: dup_x1
    //   243: swap
    //   244: ldc 77
    //   246: iconst_0
    //   247: aload_1
    //   248: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   251: athrow
    //   252: new 75	gnu/mapping/WrongType
    //   255: dup_x1
    //   256: swap
    //   257: ldc 95
    //   259: iconst_0
    //   260: aload_1
    //   261: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   264: athrow
    //   265: new 75	gnu/mapping/WrongType
    //   268: dup_x1
    //   269: swap
    //   270: ldc 104
    //   272: iconst_0
    //   273: aload_1
    //   274: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   277: athrow
    //   278: new 75	gnu/mapping/WrongType
    //   281: dup_x1
    //   282: swap
    //   283: ldc 109
    //   285: iconst_0
    //   286: aload_1
    //   287: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   290: athrow
    //   291: new 75	gnu/mapping/WrongType
    //   294: dup_x1
    //   295: swap
    //   296: ldc 114
    //   298: iconst_0
    //   299: aload_1
    //   300: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   303: athrow
    //   304: new 75	gnu/mapping/WrongType
    //   307: dup_x1
    //   308: swap
    //   309: ldc 119
    //   311: iconst_0
    //   312: aload_1
    //   313: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   316: athrow
    //   317: new 75	gnu/mapping/WrongType
    //   320: dup_x1
    //   321: swap
    //   322: ldc 124
    //   324: iconst_0
    //   325: aload_1
    //   326: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   329: athrow
    //   330: new 75	gnu/mapping/WrongType
    //   333: dup_x1
    //   334: swap
    //   335: ldc -127
    //   337: iconst_0
    //   338: aload_1
    //   339: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   342: athrow
    //   343: new 75	gnu/mapping/WrongType
    //   346: dup_x1
    //   347: swap
    //   348: ldc -122
    //   350: iconst_0
    //   351: aload_1
    //   352: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   355: athrow
    //   356: new 75	gnu/mapping/WrongType
    //   359: dup_x1
    //   360: swap
    //   361: ldc -111
    //   363: iconst_0
    //   364: aload_1
    //   365: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   368: athrow
    //   369: new 75	gnu/mapping/WrongType
    //   372: dup_x1
    //   373: swap
    //   374: ldc -106
    //   376: iconst_0
    //   377: aload_1
    //   378: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   381: athrow
    //   382: new 75	gnu/mapping/WrongType
    //   385: dup_x1
    //   386: swap
    //   387: ldc -101
    //   389: iconst_0
    //   390: aload_1
    //   391: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   394: athrow
    //   395: new 75	gnu/mapping/WrongType
    //   398: dup_x1
    //   399: swap
    //   400: ldc -96
    //   402: iconst_0
    //   403: aload_1
    //   404: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   407: athrow
    //   408: new 75	gnu/mapping/WrongType
    //   411: dup_x1
    //   412: swap
    //   413: ldc -91
    //   415: iconst_0
    //   416: aload_1
    //   417: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   420: athrow
    // Line number table:
    //   Java source line #175	-> byte code offset #0
    //   Java source line #176	-> byte code offset #0
    //   Java source line #177	-> byte code offset #17
    //   Java source line #178	-> byte code offset #34
    //   Java source line #179	-> byte code offset #51
    //   Java source line #180	-> byte code offset #68
    //   Java source line #181	-> byte code offset #85
    //   Java source line #182	-> byte code offset #102
    //   Java source line #183	-> byte code offset #119
    //   Java source line #184	-> byte code offset #136
    //   Java source line #185	-> byte code offset #153
    //   Java source line #186	-> byte code offset #170
    //   Java source line #187	-> byte code offset #187
    //   Java source line #188	-> byte code offset #204
    //   Java source line #189	-> byte code offset #221
    //   Java source line #176	-> byte code offset #239
    //   Java source line #177	-> byte code offset #252
    //   Java source line #178	-> byte code offset #265
    //   Java source line #179	-> byte code offset #278
    //   Java source line #180	-> byte code offset #291
    //   Java source line #181	-> byte code offset #304
    //   Java source line #182	-> byte code offset #317
    //   Java source line #183	-> byte code offset #330
    //   Java source line #184	-> byte code offset #343
    //   Java source line #185	-> byte code offset #356
    //   Java source line #186	-> byte code offset #369
    //   Java source line #187	-> byte code offset #382
    //   Java source line #188	-> byte code offset #395
    //   Java source line #189	-> byte code offset #408
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	238	0	runner	Object
    //   7	410	1	localObject	Object
    //   239	1	2	localClassCastException1	ClassCastException
    //   252	1	3	localClassCastException2	ClassCastException
    //   265	1	4	localClassCastException3	ClassCastException
    //   278	1	5	localClassCastException4	ClassCastException
    //   291	1	6	localClassCastException5	ClassCastException
    //   304	1	7	localClassCastException6	ClassCastException
    //   317	1	8	localClassCastException7	ClassCastException
    //   330	1	9	localClassCastException8	ClassCastException
    //   343	1	10	localClassCastException9	ClassCastException
    //   356	1	11	localClassCastException10	ClassCastException
    //   369	1	12	localClassCastException11	ClassCastException
    //   382	1	13	localClassCastException12	ClassCastException
    //   395	1	14	localClassCastException13	ClassCastException
    //   408	1	15	localClassCastException14	ClassCastException
    // Exception table:
    //   from	to	target	type
    //   8	11	239	java/lang/ClassCastException
    //   25	28	252	java/lang/ClassCastException
    //   42	45	265	java/lang/ClassCastException
    //   59	62	278	java/lang/ClassCastException
    //   76	79	291	java/lang/ClassCastException
    //   93	96	304	java/lang/ClassCastException
    //   110	113	317	java/lang/ClassCastException
    //   127	130	330	java/lang/ClassCastException
    //   144	147	343	java/lang/ClassCastException
    //   161	164	356	java/lang/ClassCastException
    //   178	181	369	java/lang/ClassCastException
    //   195	198	382	java/lang/ClassCastException
    //   212	215	395	java/lang/ClassCastException
    //   229	232	408	java/lang/ClassCastException
  }
  
  /* Error */
  public static gnu.lists.LList testRunnerGroupPath(Object runner)
  {
    // Byte code:
    //   0: aload_0
    //   1: ldc 13
    //   3: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   6: dup
    //   7: astore_1
    //   8: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   11: invokestatic 174	gnu/kawa/slib/testing:testRunnerGroupStack	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   14: ldc 83
    //   16: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   19: dup
    //   20: astore_1
    //   21: checkcast 83	gnu/lists/LList
    //   24: invokestatic 181	kawa/lib/lists:reverse	(Lgnu/lists/LList;)Lgnu/lists/LList;
    //   27: areturn
    //   28: new 75	gnu/mapping/WrongType
    //   31: dup_x1
    //   32: swap
    //   33: ldc -86
    //   35: iconst_0
    //   36: aload_1
    //   37: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   40: athrow
    //   41: new 75	gnu/mapping/WrongType
    //   44: dup_x1
    //   45: swap
    //   46: ldc -80
    //   48: iconst_1
    //   49: aload_1
    //   50: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   53: athrow
    // Line number table:
    //   Java source line #191	-> byte code offset #0
    //   Java source line #192	-> byte code offset #0
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	27	0	runner	Object
    //   7	43	1	localObject	Object
    //   28	1	2	localClassCastException1	ClassCastException
    //   41	1	3	localClassCastException2	ClassCastException
    // Exception table:
    //   from	to	target	type
    //   8	11	28	java/lang/ClassCastException
    //   21	24	41	java/lang/ClassCastException
  }
  
  /* Error */
  public static Object $PcTestShouldExecute(Object runner)
  {
    // Byte code:
    //   0: aload_0
    //   1: ldc 13
    //   3: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   6: dup
    //   7: astore_2
    //   8: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   11: invokestatic 312	gnu/kawa/slib/testing:$PcTestRunnerRunList	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   14: astore_1
    //   15: aload_1
    //   16: getstatic 140	java/lang/Boolean:TRUE	Ljava/lang/Boolean;
    //   19: invokestatic 318	gnu/kawa/functions/IsEqv:apply	(Ljava/lang/Object;Ljava/lang/Object;)Z
    //   22: istore_3
    //   23: iload_3
    //   24: ifeq +10 -> 34
    //   27: iload_3
    //   28: ifeq +21 -> 49
    //   31: goto +14 -> 45
    //   34: aload_1
    //   35: aload_0
    //   36: invokestatic 322	gnu/kawa/slib/testing:$PcTestAnySpecifierMatches	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   39: invokestatic 279	gnu/expr/KawaConvert:isTrue	(Ljava/lang/Object;)Z
    //   42: ifeq +7 -> 49
    //   45: iconst_0
    //   46: goto +4 -> 50
    //   49: iconst_1
    //   50: istore_2
    //   51: iload_2
    //   52: ifeq +10 -> 62
    //   55: iload_2
    //   56: ifeq +46 -> 102
    //   59: goto +27 -> 86
    //   62: aload_0
    //   63: ldc 13
    //   65: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   68: dup
    //   69: astore_3
    //   70: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   73: invokestatic 327	gnu/kawa/slib/testing:$PcTestRunnerSkipList	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   76: aload_0
    //   77: invokestatic 322	gnu/kawa/slib/testing:$PcTestAnySpecifierMatches	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   80: invokestatic 279	gnu/expr/KawaConvert:isTrue	(Ljava/lang/Object;)Z
    //   83: ifeq +19 -> 102
    //   86: aload_0
    //   87: getstatic 331	gnu/kawa/slib/testing:Lit1	Lgnu/mapping/SimpleSymbol;
    //   90: getstatic 334	gnu/kawa/slib/testing:Lit2	Lgnu/mapping/SimpleSymbol;
    //   93: invokestatic 338	gnu/kawa/slib/testing:testResultSet$Ex	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
    //   96: getstatic 251	java/lang/Boolean:FALSE	Ljava/lang/Boolean;
    //   99: goto +46 -> 145
    //   102: aload_0
    //   103: ldc 13
    //   105: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   108: dup
    //   109: astore_3
    //   110: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   113: invokestatic 343	gnu/kawa/slib/testing:$PcTestRunnerFailList	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   116: aload_0
    //   117: invokestatic 322	gnu/kawa/slib/testing:$PcTestAnySpecifierMatches	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   120: invokestatic 279	gnu/expr/KawaConvert:isTrue	(Ljava/lang/Object;)Z
    //   123: ifeq +19 -> 142
    //   126: aload_0
    //   127: getstatic 331	gnu/kawa/slib/testing:Lit1	Lgnu/mapping/SimpleSymbol;
    //   130: getstatic 346	gnu/kawa/slib/testing:Lit3	Lgnu/mapping/SimpleSymbol;
    //   133: invokestatic 338	gnu/kawa/slib/testing:testResultSet$Ex	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
    //   136: getstatic 346	gnu/kawa/slib/testing:Lit3	Lgnu/mapping/SimpleSymbol;
    //   139: goto +6 -> 145
    //   142: getstatic 140	java/lang/Boolean:TRUE	Ljava/lang/Boolean;
    //   145: areturn
    //   146: new 75	gnu/mapping/WrongType
    //   149: dup_x1
    //   150: swap
    //   151: ldc_w 309
    //   154: iconst_0
    //   155: aload_2
    //   156: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   159: athrow
    //   160: new 75	gnu/mapping/WrongType
    //   163: dup_x1
    //   164: swap
    //   165: ldc_w 324
    //   168: iconst_0
    //   169: aload_3
    //   170: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   173: athrow
    //   174: new 75	gnu/mapping/WrongType
    //   177: dup_x1
    //   178: swap
    //   179: ldc_w 340
    //   182: iconst_0
    //   183: aload_3
    //   184: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   187: athrow
    // Line number table:
    //   Java source line #269	-> byte code offset #0
    //   Java source line #270	-> byte code offset #0
    //   Java source line #271	-> byte code offset #15
    //   Java source line #272	-> byte code offset #15
    //   Java source line #273	-> byte code offset #34
    //   Java source line #271	-> byte code offset #51
    //   Java source line #274	-> byte code offset #62
    //   Java source line #275	-> byte code offset #62
    //   Java source line #276	-> byte code offset #76
    //   Java source line #277	-> byte code offset #86
    //   Java source line #280	-> byte code offset #102
    //   Java source line #281	-> byte code offset #116
    //   Java source line #282	-> byte code offset #126
    //   Java source line #270	-> byte code offset #146
    //   Java source line #275	-> byte code offset #160
    //   Java source line #280	-> byte code offset #174
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	145	0	runner	Object
    //   14	21	1	run	Object
    //   7	1	2	localObject1	Object
    //   50	106	2	x	boolean
    //   22	162	3	x	boolean
    //   146	1	5	localClassCastException1	ClassCastException
    //   160	1	6	localClassCastException2	ClassCastException
    //   174	1	7	localClassCastException3	ClassCastException
    // Exception table:
    //   from	to	target	type
    //   8	11	146	java/lang/ClassCastException
    //   70	73	160	java/lang/ClassCastException
    //   110	113	174	java/lang/ClassCastException
  }
  
  /* Error */
  static Object $PcTestAnySpecifierMatches(Object list, Object runner)
  {
    // Byte code:
    //   0: iconst_0
    //   1: istore_2
    //   2: aload_0
    //   3: astore_3
    //   4: aload_3
    //   5: invokestatic 385	kawa/lib/lists:isNull	(Ljava/lang/Object;)Z
    //   8: ifeq +19 -> 27
    //   11: iload_2
    //   12: ifeq +9 -> 21
    //   15: getstatic 140	java/lang/Boolean:TRUE	Ljava/lang/Boolean;
    //   18: goto +56 -> 74
    //   21: getstatic 251	java/lang/Boolean:FALSE	Ljava/lang/Boolean;
    //   24: goto +50 -> 74
    //   27: aload_3
    //   28: ldc_w 447
    //   31: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   34: dup
    //   35: astore 4
    //   37: checkcast 447	gnu/lists/Pair
    //   40: invokestatic 452	kawa/lib/lists:car	(Lgnu/lists/Pair;)Ljava/lang/Object;
    //   43: aload_1
    //   44: invokestatic 832	gnu/kawa/slib/testing:$PcTestSpecifierMatches	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   47: invokestatic 279	gnu/expr/KawaConvert:isTrue	(Ljava/lang/Object;)Z
    //   50: ifeq +5 -> 55
    //   53: iconst_1
    //   54: istore_2
    //   55: aload_3
    //   56: ldc_w 447
    //   59: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   62: dup
    //   63: astore 4
    //   65: checkcast 447	gnu/lists/Pair
    //   68: invokestatic 518	kawa/lib/lists:cdr	(Lgnu/lists/Pair;)Ljava/lang/Object;
    //   71: goto -68 -> 3
    //   74: areturn
    //   75: new 75	gnu/mapping/WrongType
    //   78: dup_x1
    //   79: swap
    //   80: ldc_w 449
    //   83: iconst_1
    //   84: aload 4
    //   86: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   89: athrow
    //   90: new 75	gnu/mapping/WrongType
    //   93: dup_x1
    //   94: swap
    //   95: ldc_w 516
    //   98: iconst_1
    //   99: aload 4
    //   101: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   104: athrow
    // Line number table:
    //   Java source line #259	-> byte code offset #0
    //   Java source line #260	-> byte code offset #0
    //   Java source line #261	-> byte code offset #2
    //   Java source line #262	-> byte code offset #4
    //   Java source line #264	-> byte code offset #27
    //   Java source line #265	-> byte code offset #53
    //   Java source line #266	-> byte code offset #55
    //   Java source line #264	-> byte code offset #75
    //   Java source line #266	-> byte code offset #90
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	74	0	list	Object
    //   0	74	1	runner	Object
    //   2	72	2	result	boolean
    //   4	70	3	l	Object
    // Exception table:
    //   from	to	target	type
    //   37	40	75	java/lang/ClassCastException
    //   65	68	90	java/lang/ClassCastException
  }
  
  /* Error */
  public static void testResultSet$Ex(Object runner, Object pname, Object value)
  {
    // Byte code:
    //   0: aload_0
    //   1: ldc 13
    //   3: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   6: dup
    //   7: astore 4
    //   9: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   12: invokestatic 534	gnu/kawa/slib/testing:testResultAlist	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   15: astore_3
    //   16: aload_1
    //   17: aload_3
    //   18: invokestatic 540	kawa/lib/lists:assq	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   21: astore 4
    //   23: aload 4
    //   25: invokestatic 279	gnu/expr/KawaConvert:isTrue	(Ljava/lang/Object;)Z
    //   28: ifeq +24 -> 52
    //   31: aload 4
    //   33: ldc_w 447
    //   36: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   39: dup
    //   40: astore 5
    //   42: checkcast 447	gnu/lists/Pair
    //   45: aload_2
    //   46: invokestatic 588	kawa/lib/lists:setCdr$Ex	(Lgnu/lists/Pair;Ljava/lang/Object;)V
    //   49: goto +27 -> 76
    //   52: aload_0
    //   53: ldc 13
    //   55: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   58: dup
    //   59: astore 5
    //   61: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   64: aload_1
    //   65: aload_2
    //   66: invokestatic 367	kawa/lib/lists:cons	(Ljava/lang/Object;Ljava/lang/Object;)Lgnu/lists/Pair;
    //   69: aload_3
    //   70: invokestatic 367	kawa/lib/lists:cons	(Ljava/lang/Object;Ljava/lang/Object;)Lgnu/lists/Pair;
    //   73: invokestatic 93	gnu/kawa/slib/testing:testResultAlist$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   76: return
    //   77: new 75	gnu/mapping/WrongType
    //   80: dup_x1
    //   81: swap
    //   82: ldc_w 531
    //   85: iconst_0
    //   86: aload 4
    //   88: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   91: athrow
    //   92: new 75	gnu/mapping/WrongType
    //   95: dup_x1
    //   96: swap
    //   97: ldc_w 584
    //   100: iconst_1
    //   101: aload 5
    //   103: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   106: athrow
    //   107: new 75	gnu/mapping/WrongType
    //   110: dup_x1
    //   111: swap
    //   112: ldc 77
    //   114: iconst_0
    //   115: aload 5
    //   117: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   120: athrow
    // Line number table:
    //   Java source line #524	-> byte code offset #0
    //   Java source line #525	-> byte code offset #0
    //   Java source line #526	-> byte code offset #16
    //   Java source line #527	-> byte code offset #23
    //   Java source line #528	-> byte code offset #31
    //   Java source line #529	-> byte code offset #52
    //   Java source line #525	-> byte code offset #77
    //   Java source line #528	-> byte code offset #92
    //   Java source line #529	-> byte code offset #107
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	76	0	runner	Object
    //   0	76	1	pname	Object
    //   0	76	2	value	Object
    //   15	55	3	alist	Object
    //   7	1	4	localObject1	Object
    //   21	66	4	p	Object
    //   40	76	5	localObject2	Object
    //   77	1	7	localClassCastException1	ClassCastException
    //   92	1	8	localClassCastException2	ClassCastException
    //   107	1	9	localClassCastException3	ClassCastException
    // Exception table:
    //   from	to	target	type
    //   9	12	77	java/lang/ClassCastException
    //   42	45	92	java/lang/ClassCastException
    //   61	64	107	java/lang/ClassCastException
  }
  
  /* Error */
  public static void $PcTestBegin(Object suite$Mnname, Object count)
  {
    // Byte code:
    //   0: getstatic 261	gnu/kawa/slib/testing:test$Mnrunner$Mncurrent	Lgnu/mapping/LocationProc;
    //   3: invokevirtual 273	gnu/mapping/LocationProc:getValue	()Ljava/lang/Object;
    //   6: invokestatic 279	gnu/expr/KawaConvert:isTrue	(Ljava/lang/Object;)Z
    //   9: ifne +13 -> 22
    //   12: getstatic 261	gnu/kawa/slib/testing:test$Mnrunner$Mncurrent	Lgnu/mapping/LocationProc;
    //   15: invokestatic 349	gnu/kawa/slib/testing:testRunnerCreate	()Ljava/lang/Object;
    //   18: invokevirtual 307	gnu/mapping/Procedure:apply1	(Ljava/lang/Object;)Ljava/lang/Object;
    //   21: pop
    //   22: getstatic 261	gnu/kawa/slib/testing:test$Mnrunner$Mncurrent	Lgnu/mapping/LocationProc;
    //   25: invokevirtual 273	gnu/mapping/LocationProc:getValue	()Ljava/lang/Object;
    //   28: astore_2
    //   29: getstatic 301	kawa/standard/Scheme:applyToArgs	Lgnu/kawa/functions/ApplyToArgs;
    //   32: aload_2
    //   33: ldc 13
    //   35: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   38: dup
    //   39: astore_3
    //   40: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   43: invokestatic 354	gnu/kawa/slib/testing:testRunnerOnGroupBegin	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   46: aload_2
    //   47: aload_0
    //   48: aload_1
    //   49: invokevirtual 358	gnu/mapping/Procedure:apply4	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   52: pop
    //   53: aload_2
    //   54: ldc 13
    //   56: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   59: dup
    //   60: astore_3
    //   61: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   64: aload_2
    //   65: ldc 13
    //   67: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   70: dup
    //   71: astore_3
    //   72: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   75: invokestatic 327	gnu/kawa/slib/testing:$PcTestRunnerSkipList	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   78: aload_2
    //   79: ldc 13
    //   81: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   84: dup
    //   85: astore_3
    //   86: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   89: invokestatic 363	gnu/kawa/slib/testing:$PcTestRunnerSkipSave	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   92: invokestatic 367	kawa/lib/lists:cons	(Ljava/lang/Object;Ljava/lang/Object;)Lgnu/lists/Pair;
    //   95: invokestatic 158	gnu/kawa/slib/testing:$PcTestRunnerSkipSave$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   98: aload_2
    //   99: ldc 13
    //   101: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   104: dup
    //   105: astore_3
    //   106: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   109: aload_2
    //   110: ldc 13
    //   112: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   115: dup
    //   116: astore_3
    //   117: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   120: invokestatic 343	gnu/kawa/slib/testing:$PcTestRunnerFailList	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   123: aload_2
    //   124: ldc 13
    //   126: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   129: dup
    //   130: astore_3
    //   131: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   134: invokestatic 372	gnu/kawa/slib/testing:$PcTestRunnerFailSave	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   137: invokestatic 367	kawa/lib/lists:cons	(Ljava/lang/Object;Ljava/lang/Object;)Lgnu/lists/Pair;
    //   140: invokestatic 163	gnu/kawa/slib/testing:$PcTestRunnerFailSave$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   143: aload_2
    //   144: ldc 13
    //   146: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   149: dup
    //   150: astore_3
    //   151: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   154: aload_2
    //   155: ldc 13
    //   157: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   160: dup
    //   161: astore_3
    //   162: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   165: invokestatic 377	gnu/kawa/slib/testing:$PcTestRunnerTotalCount	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   168: aload_1
    //   169: invokestatic 367	kawa/lib/lists:cons	(Ljava/lang/Object;Ljava/lang/Object;)Lgnu/lists/Pair;
    //   172: aload_2
    //   173: ldc 13
    //   175: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   178: dup
    //   179: astore_3
    //   180: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   183: invokestatic 382	gnu/kawa/slib/testing:$PcTestRunnerCountList	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   186: invokestatic 367	kawa/lib/lists:cons	(Ljava/lang/Object;Ljava/lang/Object;)Lgnu/lists/Pair;
    //   189: invokestatic 132	gnu/kawa/slib/testing:$PcTestRunnerCountList$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   192: aload_2
    //   193: ldc 13
    //   195: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   198: dup
    //   199: astore_3
    //   200: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   203: aload_0
    //   204: aload_2
    //   205: ldc 13
    //   207: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   210: dup
    //   211: astore_3
    //   212: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   215: invokestatic 174	gnu/kawa/slib/testing:testRunnerGroupStack	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   218: invokestatic 367	kawa/lib/lists:cons	(Ljava/lang/Object;Ljava/lang/Object;)Lgnu/lists/Pair;
    //   221: invokestatic 168	gnu/kawa/slib/testing:testRunnerGroupStack$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   224: return
    //   225: new 75	gnu/mapping/WrongType
    //   228: dup_x1
    //   229: swap
    //   230: ldc_w 351
    //   233: iconst_0
    //   234: aload_3
    //   235: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   238: athrow
    //   239: new 75	gnu/mapping/WrongType
    //   242: dup_x1
    //   243: swap
    //   244: ldc -101
    //   246: iconst_0
    //   247: aload_3
    //   248: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   251: athrow
    //   252: new 75	gnu/mapping/WrongType
    //   255: dup_x1
    //   256: swap
    //   257: ldc_w 324
    //   260: iconst_0
    //   261: aload_3
    //   262: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   265: athrow
    //   266: new 75	gnu/mapping/WrongType
    //   269: dup_x1
    //   270: swap
    //   271: ldc_w 360
    //   274: iconst_0
    //   275: aload_3
    //   276: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   279: athrow
    //   280: new 75	gnu/mapping/WrongType
    //   283: dup_x1
    //   284: swap
    //   285: ldc -96
    //   287: iconst_0
    //   288: aload_3
    //   289: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   292: athrow
    //   293: new 75	gnu/mapping/WrongType
    //   296: dup_x1
    //   297: swap
    //   298: ldc_w 340
    //   301: iconst_0
    //   302: aload_3
    //   303: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   306: athrow
    //   307: new 75	gnu/mapping/WrongType
    //   310: dup_x1
    //   311: swap
    //   312: ldc_w 369
    //   315: iconst_0
    //   316: aload_3
    //   317: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   320: athrow
    //   321: new 75	gnu/mapping/WrongType
    //   324: dup_x1
    //   325: swap
    //   326: ldc -127
    //   328: iconst_0
    //   329: aload_3
    //   330: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   333: athrow
    //   334: new 75	gnu/mapping/WrongType
    //   337: dup_x1
    //   338: swap
    //   339: ldc_w 374
    //   342: iconst_0
    //   343: aload_3
    //   344: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   347: athrow
    //   348: new 75	gnu/mapping/WrongType
    //   351: dup_x1
    //   352: swap
    //   353: ldc_w 379
    //   356: iconst_0
    //   357: aload_3
    //   358: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   361: athrow
    //   362: new 75	gnu/mapping/WrongType
    //   365: dup_x1
    //   366: swap
    //   367: ldc -91
    //   369: iconst_0
    //   370: aload_3
    //   371: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   374: athrow
    //   375: new 75	gnu/mapping/WrongType
    //   378: dup_x1
    //   379: swap
    //   380: ldc -86
    //   382: iconst_0
    //   383: aload_3
    //   384: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   387: athrow
    // Line number table:
    //   Java source line #286	-> byte code offset #0
    //   Java source line #287	-> byte code offset #0
    //   Java source line #288	-> byte code offset #12
    //   Java source line #289	-> byte code offset #22
    //   Java source line #290	-> byte code offset #29
    //   Java source line #291	-> byte code offset #53
    //   Java source line #292	-> byte code offset #64
    //   Java source line #293	-> byte code offset #78
    //   Java source line #294	-> byte code offset #98
    //   Java source line #295	-> byte code offset #109
    //   Java source line #296	-> byte code offset #123
    //   Java source line #297	-> byte code offset #143
    //   Java source line #298	-> byte code offset #154
    //   Java source line #299	-> byte code offset #168
    //   Java source line #300	-> byte code offset #172
    //   Java source line #301	-> byte code offset #192
    //   Java source line #302	-> byte code offset #204
    //   Java source line #290	-> byte code offset #225
    //   Java source line #291	-> byte code offset #239
    //   Java source line #292	-> byte code offset #252
    //   Java source line #293	-> byte code offset #266
    //   Java source line #294	-> byte code offset #280
    //   Java source line #295	-> byte code offset #293
    //   Java source line #296	-> byte code offset #307
    //   Java source line #297	-> byte code offset #321
    //   Java source line #298	-> byte code offset #334
    //   Java source line #300	-> byte code offset #348
    //   Java source line #301	-> byte code offset #362
    //   Java source line #302	-> byte code offset #375
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	224	0	suite$Mnname	Object
    //   0	224	1	count	Object
    //   28	177	2	runner	Object
    //   39	345	3	localObject1	Object
    //   225	1	4	localClassCastException1	ClassCastException
    //   239	1	5	localClassCastException2	ClassCastException
    //   252	1	6	localClassCastException3	ClassCastException
    //   266	1	7	localClassCastException4	ClassCastException
    //   280	1	8	localClassCastException5	ClassCastException
    //   293	1	9	localClassCastException6	ClassCastException
    //   307	1	10	localClassCastException7	ClassCastException
    //   321	1	11	localClassCastException8	ClassCastException
    //   334	1	12	localClassCastException9	ClassCastException
    //   348	1	13	localClassCastException10	ClassCastException
    //   362	1	14	localClassCastException11	ClassCastException
    //   375	1	15	localClassCastException12	ClassCastException
    // Exception table:
    //   from	to	target	type
    //   40	43	225	java/lang/ClassCastException
    //   61	64	239	java/lang/ClassCastException
    //   72	75	252	java/lang/ClassCastException
    //   86	89	266	java/lang/ClassCastException
    //   106	109	280	java/lang/ClassCastException
    //   117	120	293	java/lang/ClassCastException
    //   131	134	307	java/lang/ClassCastException
    //   151	154	321	java/lang/ClassCastException
    //   162	165	334	java/lang/ClassCastException
    //   180	183	348	java/lang/ClassCastException
    //   200	203	362	java/lang/ClassCastException
    //   212	215	375	java/lang/ClassCastException
  }
  
  /* Error */
  public static boolean testOnGroupBeginSimple(Object runner, Object suite$Mnname, Object count)
  {
    // Byte code:
    //   0: aload_0
    //   1: ldc 13
    //   3: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   6: dup
    //   7: astore_3
    //   8: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   11: invokestatic 174	gnu/kawa/slib/testing:testRunnerGroupStack	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   14: invokestatic 385	kawa/lib/lists:isNull	(Ljava/lang/Object;)Z
    //   17: ifeq +119 -> 136
    //   20: ldc_w 387
    //   23: invokestatic 392	kawa/lib/ports:display	(Ljava/lang/Object;)V
    //   26: aload_1
    //   27: invokestatic 392	kawa/lib/ports:display	(Ljava/lang/Object;)V
    //   30: getstatic 140	java/lang/Boolean:TRUE	Ljava/lang/Boolean;
    //   33: invokestatic 397	kawa/lib/strings:isString	(Ljava/lang/Object;)Z
    //   36: ifeq +9 -> 45
    //   39: getstatic 140	java/lang/Boolean:TRUE	Ljava/lang/Boolean;
    //   42: goto +20 -> 62
    //   45: iconst_2
    //   46: anewarray 281	java/lang/Object
    //   49: dup
    //   50: iconst_0
    //   51: aload_1
    //   52: aastore
    //   53: dup
    //   54: iconst_1
    //   55: ldc_w 399
    //   58: aastore
    //   59: invokestatic 403	kawa/lib/strings:stringAppend	([Ljava/lang/Object;)Lgnu/lists/FString;
    //   62: astore_3
    //   63: aload_3
    //   64: ldc_w 405
    //   67: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   70: dup
    //   71: astore 5
    //   73: invokestatic 409	gnu/kawa/io/Path:valueOf	(Ljava/lang/Object;)Lgnu/kawa/io/Path;
    //   76: invokestatic 415	kawa/lib/ports:openOutputFile	(Lgnu/kawa/io/Path;)Lgnu/kawa/io/OutPort;
    //   79: astore 4
    //   81: ldc_w 387
    //   84: aload 4
    //   86: invokestatic 418	kawa/lib/ports:display	(Ljava/lang/Object;Ljava/lang/Object;)V
    //   89: aload_1
    //   90: aload 4
    //   92: invokestatic 418	kawa/lib/ports:display	(Ljava/lang/Object;Ljava/lang/Object;)V
    //   95: aload 4
    //   97: invokestatic 421	kawa/lib/ports:newline	(Ljava/lang/Object;)V
    //   100: aload_0
    //   101: ldc 13
    //   103: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   106: dup
    //   107: astore 5
    //   109: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   112: aload 4
    //   114: invokestatic 426	gnu/kawa/slib/testing:testRunnerAuxValue$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   117: ldc_w 428
    //   120: invokestatic 392	kawa/lib/ports:display	(Ljava/lang/Object;)V
    //   123: aload_3
    //   124: invokestatic 392	kawa/lib/ports:display	(Ljava/lang/Object;)V
    //   127: ldc_w 430
    //   130: invokestatic 392	kawa/lib/ports:display	(Ljava/lang/Object;)V
    //   133: invokestatic 433	kawa/lib/ports:newline	()V
    //   136: aload_0
    //   137: ldc 13
    //   139: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   142: dup
    //   143: astore 4
    //   145: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   148: invokestatic 438	gnu/kawa/slib/testing:testRunnerAuxValue	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   151: astore_3
    //   152: aload_3
    //   153: invokestatic 441	kawa/lib/ports:isOutputPort	(Ljava/lang/Object;)Z
    //   156: ifeq +19 -> 175
    //   159: ldc_w 443
    //   162: aload_3
    //   163: invokestatic 418	kawa/lib/ports:display	(Ljava/lang/Object;Ljava/lang/Object;)V
    //   166: aload_1
    //   167: aload_3
    //   168: invokestatic 418	kawa/lib/ports:display	(Ljava/lang/Object;Ljava/lang/Object;)V
    //   171: aload_3
    //   172: invokestatic 421	kawa/lib/ports:newline	(Ljava/lang/Object;)V
    //   175: iconst_0
    //   176: ireturn
    //   177: new 75	gnu/mapping/WrongType
    //   180: dup_x1
    //   181: swap
    //   182: ldc -86
    //   184: iconst_0
    //   185: aload_3
    //   186: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   189: athrow
    //   190: new 75	gnu/mapping/WrongType
    //   193: dup_x1
    //   194: swap
    //   195: ldc_w 411
    //   198: iconst_1
    //   199: aload 5
    //   201: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   204: athrow
    //   205: new 75	gnu/mapping/WrongType
    //   208: dup_x1
    //   209: swap
    //   210: ldc_w 423
    //   213: iconst_0
    //   214: aload 5
    //   216: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   219: athrow
    //   220: new 75	gnu/mapping/WrongType
    //   223: dup_x1
    //   224: swap
    //   225: ldc_w 435
    //   228: iconst_0
    //   229: aload 4
    //   231: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   234: athrow
    // Line number table:
    //   Java source line #310	-> byte code offset #0
    //   Java source line #311	-> byte code offset #0
    //   Java source line #313	-> byte code offset #20
    //   Java source line #314	-> byte code offset #26
    //   Java source line #316	-> byte code offset #30
    //   Java source line #317	-> byte code offset #30
    //   Java source line #318	-> byte code offset #45
    //   Java source line #316	-> byte code offset #63
    //   Java source line #322	-> byte code offset #63
    //   Java source line #323	-> byte code offset #81
    //   Java source line #324	-> byte code offset #89
    //   Java source line #325	-> byte code offset #95
    //   Java source line #326	-> byte code offset #100
    //   Java source line #327	-> byte code offset #117
    //   Java source line #328	-> byte code offset #123
    //   Java source line #329	-> byte code offset #127
    //   Java source line #330	-> byte code offset #133
    //   Java source line #331	-> byte code offset #136
    //   Java source line #332	-> byte code offset #152
    //   Java source line #334	-> byte code offset #159
    //   Java source line #335	-> byte code offset #166
    //   Java source line #336	-> byte code offset #171
    //   Java source line #311	-> byte code offset #177
    //   Java source line #322	-> byte code offset #190
    //   Java source line #326	-> byte code offset #205
    //   Java source line #331	-> byte code offset #220
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	176	0	runner	Object
    //   0	176	1	suite$Mnname	Object
    //   0	176	2	count	Object
    //   7	1	3	localObject1	Object
    //   62	62	3	log$Mnfile$Mnname	Object
    //   151	35	3	log	Object
    //   79	151	4	log$Mnfile	gnu.kawa.io.OutPort
    //   71	144	5	localObject2	Object
    //   177	1	8	localClassCastException1	ClassCastException
    //   190	1	9	localClassCastException2	ClassCastException
    //   205	1	10	localClassCastException3	ClassCastException
    //   220	1	11	localClassCastException4	ClassCastException
    // Exception table:
    //   from	to	target	type
    //   8	11	177	java/lang/ClassCastException
    //   73	76	190	java/lang/ClassCastException
    //   109	112	205	java/lang/ClassCastException
    //   145	148	220	java/lang/ClassCastException
  }
  
  /* Error */
  public static boolean testOnGroupEndSimple(Object runner)
  {
    // Byte code:
    //   0: aload_0
    //   1: ldc 13
    //   3: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   6: dup
    //   7: astore_2
    //   8: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   11: invokestatic 438	gnu/kawa/slib/testing:testRunnerAuxValue	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   14: astore_1
    //   15: aload_1
    //   16: invokestatic 441	kawa/lib/ports:isOutputPort	(Ljava/lang/Object;)Z
    //   19: ifeq +46 -> 65
    //   22: ldc_w 445
    //   25: aload_1
    //   26: invokestatic 418	kawa/lib/ports:display	(Ljava/lang/Object;Ljava/lang/Object;)V
    //   29: aload_0
    //   30: ldc 13
    //   32: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   35: dup
    //   36: astore_2
    //   37: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   40: invokestatic 174	gnu/kawa/slib/testing:testRunnerGroupStack	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   43: ldc_w 447
    //   46: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   49: dup
    //   50: astore_2
    //   51: checkcast 447	gnu/lists/Pair
    //   54: invokestatic 452	kawa/lib/lists:car	(Lgnu/lists/Pair;)Ljava/lang/Object;
    //   57: aload_1
    //   58: invokestatic 418	kawa/lib/ports:display	(Ljava/lang/Object;Ljava/lang/Object;)V
    //   61: aload_1
    //   62: invokestatic 421	kawa/lib/ports:newline	(Ljava/lang/Object;)V
    //   65: iconst_0
    //   66: ireturn
    //   67: new 75	gnu/mapping/WrongType
    //   70: dup_x1
    //   71: swap
    //   72: ldc_w 435
    //   75: iconst_0
    //   76: aload_2
    //   77: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   80: athrow
    //   81: new 75	gnu/mapping/WrongType
    //   84: dup_x1
    //   85: swap
    //   86: ldc -86
    //   88: iconst_0
    //   89: aload_2
    //   90: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   93: athrow
    //   94: new 75	gnu/mapping/WrongType
    //   97: dup_x1
    //   98: swap
    //   99: ldc_w 449
    //   102: iconst_1
    //   103: aload_2
    //   104: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   107: athrow
    // Line number table:
    //   Java source line #339	-> byte code offset #0
    //   Java source line #340	-> byte code offset #0
    //   Java source line #341	-> byte code offset #15
    //   Java source line #343	-> byte code offset #22
    //   Java source line #344	-> byte code offset #29
    //   Java source line #345	-> byte code offset #61
    //   Java source line #340	-> byte code offset #67
    //   Java source line #344	-> byte code offset #81
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	66	0	runner	Object
    //   14	48	1	log	Object
    //   7	97	2	localObject1	Object
    //   67	1	3	localClassCastException1	ClassCastException
    //   81	1	4	localClassCastException2	ClassCastException
    //   94	1	5	localClassCastException3	ClassCastException
    // Exception table:
    //   from	to	target	type
    //   8	11	67	java/lang/ClassCastException
    //   37	40	81	java/lang/ClassCastException
    //   51	54	94	java/lang/ClassCastException
  }
  
  /* Error */
  static Object $PcTestFormatLine(Object runner)
  {
    // Byte code:
    //   0: aload_0
    //   1: ldc 13
    //   3: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   6: dup
    //   7: astore_2
    //   8: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   11: invokestatic 534	gnu/kawa/slib/testing:testResultAlist	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   14: astore_1
    //   15: getstatic 537	gnu/kawa/slib/testing:Lit4	Lgnu/mapping/SimpleSymbol;
    //   18: aload_1
    //   19: invokestatic 540	kawa/lib/lists:assq	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   22: astore_2
    //   23: getstatic 543	gnu/kawa/slib/testing:Lit5	Lgnu/mapping/SimpleSymbol;
    //   26: aload_1
    //   27: invokestatic 540	kawa/lib/lists:assq	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   30: astore_3
    //   31: aload_2
    //   32: invokestatic 279	gnu/expr/KawaConvert:isTrue	(Ljava/lang/Object;)Z
    //   35: ifeq +22 -> 57
    //   38: aload_2
    //   39: ldc_w 447
    //   42: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   45: dup
    //   46: astore 5
    //   48: checkcast 447	gnu/lists/Pair
    //   51: invokestatic 518	kawa/lib/lists:cdr	(Lgnu/lists/Pair;)Ljava/lang/Object;
    //   54: goto +6 -> 60
    //   57: ldc_w 655
    //   60: astore 4
    //   62: aload_3
    //   63: invokestatic 279	gnu/expr/KawaConvert:isTrue	(Ljava/lang/Object;)Z
    //   66: ifeq +64 -> 130
    //   69: iconst_4
    //   70: anewarray 281	java/lang/Object
    //   73: dup
    //   74: iconst_0
    //   75: aload 4
    //   77: aastore
    //   78: dup
    //   79: iconst_1
    //   80: ldc_w 563
    //   83: aastore
    //   84: dup
    //   85: iconst_2
    //   86: aload_3
    //   87: ldc_w 447
    //   90: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   93: dup
    //   94: astore 5
    //   96: checkcast 447	gnu/lists/Pair
    //   99: invokestatic 518	kawa/lib/lists:cdr	(Lgnu/lists/Pair;)Ljava/lang/Object;
    //   102: ldc_w 858
    //   105: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   108: dup
    //   109: astore 5
    //   111: checkcast 858	java/lang/Number
    //   114: invokestatic 864	kawa/lib/numbers:number$To$String	(Ljava/lang/Number;)Ljava/lang/CharSequence;
    //   117: aastore
    //   118: dup
    //   119: iconst_3
    //   120: ldc_w 565
    //   123: aastore
    //   124: invokestatic 403	kawa/lib/strings:stringAppend	([Ljava/lang/Object;)Lgnu/lists/FString;
    //   127: goto +6 -> 133
    //   130: ldc_w 655
    //   133: areturn
    //   134: new 75	gnu/mapping/WrongType
    //   137: dup_x1
    //   138: swap
    //   139: ldc_w 531
    //   142: iconst_0
    //   143: aload_2
    //   144: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   147: athrow
    //   148: new 75	gnu/mapping/WrongType
    //   151: dup_x1
    //   152: swap
    //   153: ldc_w 516
    //   156: iconst_1
    //   157: aload 5
    //   159: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   162: athrow
    //   163: new 75	gnu/mapping/WrongType
    //   166: dup_x1
    //   167: swap
    //   168: ldc_w 516
    //   171: iconst_1
    //   172: aload 5
    //   174: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   177: athrow
    //   178: new 75	gnu/mapping/WrongType
    //   181: dup_x1
    //   182: swap
    //   183: ldc_w 860
    //   186: iconst_1
    //   187: aload 5
    //   189: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   192: athrow
    // Line number table:
    //   Java source line #397	-> byte code offset #0
    //   Java source line #398	-> byte code offset #0
    //   Java source line #399	-> byte code offset #15
    //   Java source line #398	-> byte code offset #23
    //   Java source line #400	-> byte code offset #23
    //   Java source line #398	-> byte code offset #31
    //   Java source line #401	-> byte code offset #31
    //   Java source line #402	-> byte code offset #62
    //   Java source line #403	-> byte code offset #69
    //   Java source line #404	-> byte code offset #86
    //   Java source line #402	-> byte code offset #130
    //   Java source line #398	-> byte code offset #134
    //   Java source line #401	-> byte code offset #148
    //   Java source line #404	-> byte code offset #163
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	133	0	runner	Object
    //   14	13	1	line$Mninfo	Object
    //   7	1	2	localObject1	Object
    //   22	122	2	source$Mnfile	Object
    //   30	57	3	source$Mnline	Object
    //   60	16	4	file	Object
    //   46	142	5	localObject2	Object
    //   134	1	7	localClassCastException1	ClassCastException
    //   148	1	8	localClassCastException2	ClassCastException
    //   163	1	9	localClassCastException3	ClassCastException
    //   178	1	10	localClassCastException4	ClassCastException
    // Exception table:
    //   from	to	target	type
    //   8	11	134	java/lang/ClassCastException
    //   48	51	148	java/lang/ClassCastException
    //   96	99	163	java/lang/ClassCastException
    //   111	114	178	java/lang/ClassCastException
  }
  
  /* Error */
  static void $PcTestFinalReportSimple(Object runner, Object port)
  {
    // Byte code:
    //   0: aload_0
    //   1: ldc 13
    //   3: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   6: dup
    //   7: astore_2
    //   8: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   11: invokestatic 635	gnu/kawa/slib/testing:testRunnerPassCount	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   14: ldc_w 845
    //   17: aload_1
    //   18: invokestatic 848	gnu/kawa/slib/testing:$PcTestFinalReport1	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
    //   21: aload_0
    //   22: ldc 13
    //   24: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   27: dup
    //   28: astore_2
    //   29: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   32: invokestatic 627	gnu/kawa/slib/testing:testRunnerXfailCount	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   35: ldc_w 850
    //   38: aload_1
    //   39: invokestatic 848	gnu/kawa/slib/testing:$PcTestFinalReport1	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
    //   42: aload_0
    //   43: ldc 13
    //   45: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   48: dup
    //   49: astore_2
    //   50: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   53: invokestatic 622	gnu/kawa/slib/testing:testRunnerXpassCount	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   56: ldc_w 852
    //   59: aload_1
    //   60: invokestatic 848	gnu/kawa/slib/testing:$PcTestFinalReport1	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
    //   63: aload_0
    //   64: ldc 13
    //   66: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   69: dup
    //   70: astore_2
    //   71: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   74: invokestatic 617	gnu/kawa/slib/testing:testRunnerFailCount	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   77: ldc_w 854
    //   80: aload_1
    //   81: invokestatic 848	gnu/kawa/slib/testing:$PcTestFinalReport1	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
    //   84: aload_0
    //   85: ldc 13
    //   87: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   90: dup
    //   91: astore_2
    //   92: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   95: invokestatic 640	gnu/kawa/slib/testing:testRunnerSkipCount	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   98: ldc_w 856
    //   101: aload_1
    //   102: invokestatic 848	gnu/kawa/slib/testing:$PcTestFinalReport1	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
    //   105: return
    //   106: new 75	gnu/mapping/WrongType
    //   109: dup_x1
    //   110: swap
    //   111: ldc_w 632
    //   114: iconst_0
    //   115: aload_2
    //   116: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   119: athrow
    //   120: new 75	gnu/mapping/WrongType
    //   123: dup_x1
    //   124: swap
    //   125: ldc_w 624
    //   128: iconst_0
    //   129: aload_2
    //   130: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   133: athrow
    //   134: new 75	gnu/mapping/WrongType
    //   137: dup_x1
    //   138: swap
    //   139: ldc_w 619
    //   142: iconst_0
    //   143: aload_2
    //   144: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   147: athrow
    //   148: new 75	gnu/mapping/WrongType
    //   151: dup_x1
    //   152: swap
    //   153: ldc_w 614
    //   156: iconst_0
    //   157: aload_2
    //   158: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   161: athrow
    //   162: new 75	gnu/mapping/WrongType
    //   165: dup_x1
    //   166: swap
    //   167: ldc_w 637
    //   170: iconst_0
    //   171: aload_2
    //   172: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   175: athrow
    // Line number table:
    //   Java source line #379	-> byte code offset #0
    //   Java source line #380	-> byte code offset #0
    //   Java source line #381	-> byte code offset #14
    //   Java source line #382	-> byte code offset #21
    //   Java source line #383	-> byte code offset #35
    //   Java source line #384	-> byte code offset #42
    //   Java source line #385	-> byte code offset #56
    //   Java source line #386	-> byte code offset #63
    //   Java source line #387	-> byte code offset #77
    //   Java source line #388	-> byte code offset #84
    //   Java source line #389	-> byte code offset #98
    //   Java source line #380	-> byte code offset #106
    //   Java source line #382	-> byte code offset #120
    //   Java source line #384	-> byte code offset #134
    //   Java source line #386	-> byte code offset #148
    //   Java source line #388	-> byte code offset #162
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	105	0	runner	Object
    //   0	105	1	port	Object
    //   7	165	2	localObject	Object
    //   106	1	3	localClassCastException1	ClassCastException
    //   120	1	4	localClassCastException2	ClassCastException
    //   134	1	5	localClassCastException3	ClassCastException
    //   148	1	6	localClassCastException4	ClassCastException
    //   162	1	7	localClassCastException5	ClassCastException
    // Exception table:
    //   from	to	target	type
    //   8	11	106	java/lang/ClassCastException
    //   29	32	120	java/lang/ClassCastException
    //   50	53	134	java/lang/ClassCastException
    //   71	74	148	java/lang/ClassCastException
    //   92	95	162	java/lang/ClassCastException
  }
  
  /* Error */
  public static Object $PcTestEnd(Object suite$Mnname, Object line$Mninfo)
  {
    // Byte code:
    //   0: invokestatic 474	gnu/kawa/slib/testing:testRunnerGet	()Ljava/lang/Object;
    //   3: astore_2
    //   4: aload_2
    //   5: ldc 13
    //   7: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   10: dup
    //   11: astore 4
    //   13: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   16: invokestatic 174	gnu/kawa/slib/testing:testRunnerGroupStack	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   19: astore_3
    //   20: aload_2
    //   21: invokestatic 464	gnu/kawa/slib/testing:$PcTestFormatLine	(Ljava/lang/Object;)Ljava/lang/Object;
    //   24: astore 4
    //   26: aload_2
    //   27: ldc 13
    //   29: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   32: dup
    //   33: astore 5
    //   35: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   38: aload_1
    //   39: invokestatic 93	gnu/kawa/slib/testing:testResultAlist$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   42: aload_3
    //   43: invokestatic 385	kawa/lib/lists:isNull	(Ljava/lang/Object;)Z
    //   46: ifeq +39 -> 85
    //   49: iconst_2
    //   50: anewarray 281	java/lang/Object
    //   53: dup
    //   54: iconst_0
    //   55: aload 4
    //   57: aastore
    //   58: dup
    //   59: iconst_1
    //   60: ldc_w 476
    //   63: aastore
    //   64: invokestatic 403	kawa/lib/strings:stringAppend	([Ljava/lang/Object;)Lgnu/lists/FString;
    //   67: astore 5
    //   69: iconst_1
    //   70: anewarray 281	java/lang/Object
    //   73: dup
    //   74: iconst_0
    //   75: aload 5
    //   77: aastore
    //   78: invokestatic 289	kawa/lib/exceptions:error	([Ljava/lang/Object;)Lgnu/bytecode/Type$NeverReturns;
    //   81: getstatic 295	gnu/expr/Special:reachedUnexpected	Ljava/lang/RuntimeException;
    //   84: athrow
    //   85: aload_0
    //   86: invokestatic 279	gnu/expr/KawaConvert:isTrue	(Ljava/lang/Object;)Z
    //   89: ifeq +75 -> 164
    //   92: getstatic 480	kawa/standard/Scheme:isEqual	Lgnu/kawa/functions/IsEqual;
    //   95: aload_0
    //   96: aload_3
    //   97: ldc_w 447
    //   100: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   103: dup
    //   104: astore 5
    //   106: checkcast 447	gnu/lists/Pair
    //   109: invokestatic 452	kawa/lib/lists:car	(Lgnu/lists/Pair;)Ljava/lang/Object;
    //   112: invokevirtual 483	gnu/mapping/Procedure:apply2	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   115: invokestatic 279	gnu/expr/KawaConvert:isTrue	(Ljava/lang/Object;)Z
    //   118: ifne +46 -> 164
    //   121: getstatic 301	kawa/standard/Scheme:applyToArgs	Lgnu/kawa/functions/ApplyToArgs;
    //   124: aload_2
    //   125: ldc 13
    //   127: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   130: dup
    //   131: astore 5
    //   133: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   136: invokestatic 488	gnu/kawa/slib/testing:testRunnerOnBadEndName	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   139: aload_2
    //   140: aload_0
    //   141: aload_3
    //   142: ldc_w 447
    //   145: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   148: dup
    //   149: astore 5
    //   151: checkcast 447	gnu/lists/Pair
    //   154: invokestatic 452	kawa/lib/lists:car	(Lgnu/lists/Pair;)Ljava/lang/Object;
    //   157: invokevirtual 358	gnu/mapping/Procedure:apply4	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   160: pop
    //   161: goto +3 -> 164
    //   164: aload_2
    //   165: ldc 13
    //   167: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   170: dup
    //   171: astore 6
    //   173: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   176: invokestatic 382	gnu/kawa/slib/testing:$PcTestRunnerCountList	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   179: astore 5
    //   181: aload 5
    //   183: invokestatic 491	kawa/lib/lists:cdar	(Ljava/lang/Object;)Ljava/lang/Object;
    //   186: astore 6
    //   188: aload 5
    //   190: invokestatic 494	kawa/lib/lists:caar	(Ljava/lang/Object;)Ljava/lang/Object;
    //   193: astore 7
    //   195: iconst_m1
    //   196: aload_2
    //   197: ldc 13
    //   199: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   202: dup
    //   203: astore 9
    //   205: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   208: invokestatic 377	gnu/kawa/slib/testing:$PcTestRunnerTotalCount	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   211: aload 7
    //   213: invokestatic 499	gnu/kawa/functions/AddOp:apply2	(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   216: astore 8
    //   218: aload 6
    //   220: invokestatic 279	gnu/expr/KawaConvert:isTrue	(Ljava/lang/Object;)Z
    //   223: ifeq +43 -> 266
    //   226: aload 6
    //   228: aload 8
    //   230: invokestatic 504	gnu/kawa/functions/NumberCompare:$Eq	(Ljava/lang/Object;Ljava/lang/Object;)Z
    //   233: ifne +33 -> 266
    //   236: getstatic 301	kawa/standard/Scheme:applyToArgs	Lgnu/kawa/functions/ApplyToArgs;
    //   239: aload_2
    //   240: ldc 13
    //   242: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   245: dup
    //   246: astore 9
    //   248: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   251: invokestatic 509	gnu/kawa/slib/testing:testRunnerOnBadCount	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   254: aload_2
    //   255: aload 8
    //   257: aload 6
    //   259: invokevirtual 358	gnu/mapping/Procedure:apply4	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   262: pop
    //   263: goto +3 -> 266
    //   266: getstatic 301	kawa/standard/Scheme:applyToArgs	Lgnu/kawa/functions/ApplyToArgs;
    //   269: aload_2
    //   270: ldc 13
    //   272: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   275: dup
    //   276: astore 9
    //   278: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   281: invokestatic 514	gnu/kawa/slib/testing:testRunnerOnGroupEnd	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   284: aload_2
    //   285: invokevirtual 483	gnu/mapping/Procedure:apply2	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   288: pop
    //   289: aload_2
    //   290: ldc 13
    //   292: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   295: dup
    //   296: astore 9
    //   298: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   301: aload_2
    //   302: ldc 13
    //   304: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   307: dup
    //   308: astore 9
    //   310: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   313: invokestatic 174	gnu/kawa/slib/testing:testRunnerGroupStack	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   316: ldc_w 447
    //   319: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   322: dup
    //   323: astore 9
    //   325: checkcast 447	gnu/lists/Pair
    //   328: invokestatic 518	kawa/lib/lists:cdr	(Lgnu/lists/Pair;)Ljava/lang/Object;
    //   331: invokestatic 168	gnu/kawa/slib/testing:testRunnerGroupStack$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   334: aload_2
    //   335: ldc 13
    //   337: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   340: dup
    //   341: astore 9
    //   343: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   346: aload_2
    //   347: ldc 13
    //   349: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   352: dup
    //   353: astore 9
    //   355: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   358: invokestatic 363	gnu/kawa/slib/testing:$PcTestRunnerSkipSave	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   361: ldc_w 447
    //   364: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   367: dup
    //   368: astore 9
    //   370: checkcast 447	gnu/lists/Pair
    //   373: invokestatic 452	kawa/lib/lists:car	(Lgnu/lists/Pair;)Ljava/lang/Object;
    //   376: invokestatic 148	gnu/kawa/slib/testing:$PcTestRunnerSkipList$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   379: aload_2
    //   380: ldc 13
    //   382: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   385: dup
    //   386: astore 9
    //   388: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   391: aload_2
    //   392: ldc 13
    //   394: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   397: dup
    //   398: astore 9
    //   400: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   403: invokestatic 363	gnu/kawa/slib/testing:$PcTestRunnerSkipSave	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   406: ldc_w 447
    //   409: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   412: dup
    //   413: astore 9
    //   415: checkcast 447	gnu/lists/Pair
    //   418: invokestatic 518	kawa/lib/lists:cdr	(Lgnu/lists/Pair;)Ljava/lang/Object;
    //   421: invokestatic 158	gnu/kawa/slib/testing:$PcTestRunnerSkipSave$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   424: aload_2
    //   425: ldc 13
    //   427: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   430: dup
    //   431: astore 9
    //   433: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   436: aload_2
    //   437: ldc 13
    //   439: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   442: dup
    //   443: astore 9
    //   445: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   448: invokestatic 372	gnu/kawa/slib/testing:$PcTestRunnerFailSave	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   451: ldc_w 447
    //   454: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   457: dup
    //   458: astore 9
    //   460: checkcast 447	gnu/lists/Pair
    //   463: invokestatic 452	kawa/lib/lists:car	(Lgnu/lists/Pair;)Ljava/lang/Object;
    //   466: invokestatic 153	gnu/kawa/slib/testing:$PcTestRunnerFailList$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   469: aload_2
    //   470: ldc 13
    //   472: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   475: dup
    //   476: astore 9
    //   478: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   481: aload_2
    //   482: ldc 13
    //   484: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   487: dup
    //   488: astore 9
    //   490: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   493: invokestatic 372	gnu/kawa/slib/testing:$PcTestRunnerFailSave	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   496: ldc_w 447
    //   499: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   502: dup
    //   503: astore 9
    //   505: checkcast 447	gnu/lists/Pair
    //   508: invokestatic 518	kawa/lib/lists:cdr	(Lgnu/lists/Pair;)Ljava/lang/Object;
    //   511: invokestatic 163	gnu/kawa/slib/testing:$PcTestRunnerFailSave$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   514: aload_2
    //   515: ldc 13
    //   517: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   520: dup
    //   521: astore 9
    //   523: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   526: aload 5
    //   528: ldc_w 447
    //   531: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   534: dup
    //   535: astore 9
    //   537: checkcast 447	gnu/lists/Pair
    //   540: invokestatic 518	kawa/lib/lists:cdr	(Lgnu/lists/Pair;)Ljava/lang/Object;
    //   543: invokestatic 132	gnu/kawa/slib/testing:$PcTestRunnerCountList$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   546: aload_2
    //   547: ldc 13
    //   549: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   552: dup
    //   553: astore 9
    //   555: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   558: invokestatic 174	gnu/kawa/slib/testing:testRunnerGroupStack	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   561: invokestatic 385	kawa/lib/lists:isNull	(Ljava/lang/Object;)Z
    //   564: ifeq +28 -> 592
    //   567: getstatic 301	kawa/standard/Scheme:applyToArgs	Lgnu/kawa/functions/ApplyToArgs;
    //   570: aload_2
    //   571: ldc 13
    //   573: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   576: dup
    //   577: astore 9
    //   579: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   582: invokestatic 523	gnu/kawa/slib/testing:testRunnerOnFinal	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   585: aload_2
    //   586: invokevirtual 483	gnu/mapping/Procedure:apply2	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   589: goto +6 -> 595
    //   592: getstatic 529	gnu/mapping/Values:empty	Lgnu/mapping/Values;
    //   595: areturn
    //   596: new 75	gnu/mapping/WrongType
    //   599: dup_x1
    //   600: swap
    //   601: ldc -86
    //   603: iconst_0
    //   604: aload 4
    //   606: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   609: athrow
    //   610: new 75	gnu/mapping/WrongType
    //   613: dup_x1
    //   614: swap
    //   615: ldc 77
    //   617: iconst_0
    //   618: aload 5
    //   620: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   623: athrow
    //   624: new 75	gnu/mapping/WrongType
    //   627: dup_x1
    //   628: swap
    //   629: ldc_w 449
    //   632: iconst_1
    //   633: aload 5
    //   635: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   638: athrow
    //   639: new 75	gnu/mapping/WrongType
    //   642: dup_x1
    //   643: swap
    //   644: ldc_w 485
    //   647: iconst_0
    //   648: aload 5
    //   650: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   653: athrow
    //   654: new 75	gnu/mapping/WrongType
    //   657: dup_x1
    //   658: swap
    //   659: ldc_w 449
    //   662: iconst_1
    //   663: aload 5
    //   665: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   668: athrow
    //   669: new 75	gnu/mapping/WrongType
    //   672: dup_x1
    //   673: swap
    //   674: ldc_w 379
    //   677: iconst_0
    //   678: aload 6
    //   680: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   683: athrow
    //   684: new 75	gnu/mapping/WrongType
    //   687: dup_x1
    //   688: swap
    //   689: ldc_w 374
    //   692: iconst_0
    //   693: aload 9
    //   695: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   698: athrow
    //   699: new 75	gnu/mapping/WrongType
    //   702: dup_x1
    //   703: swap
    //   704: ldc_w 506
    //   707: iconst_0
    //   708: aload 9
    //   710: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   713: athrow
    //   714: new 75	gnu/mapping/WrongType
    //   717: dup_x1
    //   718: swap
    //   719: ldc_w 511
    //   722: iconst_0
    //   723: aload 9
    //   725: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   728: athrow
    //   729: new 75	gnu/mapping/WrongType
    //   732: dup_x1
    //   733: swap
    //   734: ldc -91
    //   736: iconst_0
    //   737: aload 9
    //   739: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   742: athrow
    //   743: new 75	gnu/mapping/WrongType
    //   746: dup_x1
    //   747: swap
    //   748: ldc -86
    //   750: iconst_0
    //   751: aload 9
    //   753: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   756: athrow
    //   757: new 75	gnu/mapping/WrongType
    //   760: dup_x1
    //   761: swap
    //   762: ldc_w 516
    //   765: iconst_1
    //   766: aload 9
    //   768: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   771: athrow
    //   772: new 75	gnu/mapping/WrongType
    //   775: dup_x1
    //   776: swap
    //   777: ldc -111
    //   779: iconst_0
    //   780: aload 9
    //   782: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   785: athrow
    //   786: new 75	gnu/mapping/WrongType
    //   789: dup_x1
    //   790: swap
    //   791: ldc_w 360
    //   794: iconst_0
    //   795: aload 9
    //   797: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   800: athrow
    //   801: new 75	gnu/mapping/WrongType
    //   804: dup_x1
    //   805: swap
    //   806: ldc_w 449
    //   809: iconst_1
    //   810: aload 9
    //   812: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   815: athrow
    //   816: new 75	gnu/mapping/WrongType
    //   819: dup_x1
    //   820: swap
    //   821: ldc -101
    //   823: iconst_0
    //   824: aload 9
    //   826: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   829: athrow
    //   830: new 75	gnu/mapping/WrongType
    //   833: dup_x1
    //   834: swap
    //   835: ldc_w 360
    //   838: iconst_0
    //   839: aload 9
    //   841: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   844: athrow
    //   845: new 75	gnu/mapping/WrongType
    //   848: dup_x1
    //   849: swap
    //   850: ldc_w 516
    //   853: iconst_1
    //   854: aload 9
    //   856: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   859: athrow
    //   860: new 75	gnu/mapping/WrongType
    //   863: dup_x1
    //   864: swap
    //   865: ldc -106
    //   867: iconst_0
    //   868: aload 9
    //   870: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   873: athrow
    //   874: new 75	gnu/mapping/WrongType
    //   877: dup_x1
    //   878: swap
    //   879: ldc_w 369
    //   882: iconst_0
    //   883: aload 9
    //   885: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   888: athrow
    //   889: new 75	gnu/mapping/WrongType
    //   892: dup_x1
    //   893: swap
    //   894: ldc_w 449
    //   897: iconst_1
    //   898: aload 9
    //   900: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   903: athrow
    //   904: new 75	gnu/mapping/WrongType
    //   907: dup_x1
    //   908: swap
    //   909: ldc -96
    //   911: iconst_0
    //   912: aload 9
    //   914: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   917: athrow
    //   918: new 75	gnu/mapping/WrongType
    //   921: dup_x1
    //   922: swap
    //   923: ldc_w 369
    //   926: iconst_0
    //   927: aload 9
    //   929: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   932: athrow
    //   933: new 75	gnu/mapping/WrongType
    //   936: dup_x1
    //   937: swap
    //   938: ldc_w 516
    //   941: iconst_1
    //   942: aload 9
    //   944: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   947: athrow
    //   948: new 75	gnu/mapping/WrongType
    //   951: dup_x1
    //   952: swap
    //   953: ldc -127
    //   955: iconst_0
    //   956: aload 9
    //   958: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   961: athrow
    //   962: new 75	gnu/mapping/WrongType
    //   965: dup_x1
    //   966: swap
    //   967: ldc_w 516
    //   970: iconst_1
    //   971: aload 9
    //   973: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   976: athrow
    //   977: new 75	gnu/mapping/WrongType
    //   980: dup_x1
    //   981: swap
    //   982: ldc -86
    //   984: iconst_0
    //   985: aload 9
    //   987: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   990: athrow
    //   991: new 75	gnu/mapping/WrongType
    //   994: dup_x1
    //   995: swap
    //   996: ldc_w 520
    //   999: iconst_0
    //   1000: aload 9
    //   1002: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   1005: athrow
    // Line number table:
    //   Java source line #407	-> byte code offset #0
    //   Java source line #408	-> byte code offset #0
    //   Java source line #409	-> byte code offset #4
    //   Java source line #408	-> byte code offset #20
    //   Java source line #410	-> byte code offset #20
    //   Java source line #411	-> byte code offset #26
    //   Java source line #412	-> byte code offset #42
    //   Java source line #413	-> byte code offset #49
    //   Java source line #415	-> byte code offset #69
    //   Java source line #417	-> byte code offset #85
    //   Java source line #418	-> byte code offset #121
    //   Java source line #419	-> byte code offset #164
    //   Java source line #420	-> byte code offset #181
    //   Java source line #419	-> byte code offset #188
    //   Java source line #421	-> byte code offset #188
    //   Java source line #419	-> byte code offset #195
    //   Java source line #422	-> byte code offset #195
    //   Java source line #423	-> byte code offset #218
    //   Java source line #424	-> byte code offset #226
    //   Java source line #425	-> byte code offset #236
    //   Java source line #426	-> byte code offset #266
    //   Java source line #427	-> byte code offset #289
    //   Java source line #428	-> byte code offset #334
    //   Java source line #429	-> byte code offset #379
    //   Java source line #430	-> byte code offset #424
    //   Java source line #431	-> byte code offset #469
    //   Java source line #432	-> byte code offset #514
    //   Java source line #433	-> byte code offset #546
    //   Java source line #434	-> byte code offset #567
    //   Java source line #409	-> byte code offset #596
    //   Java source line #411	-> byte code offset #610
    //   Java source line #417	-> byte code offset #624
    //   Java source line #418	-> byte code offset #639
    //   Java source line #419	-> byte code offset #669
    //   Java source line #422	-> byte code offset #684
    //   Java source line #425	-> byte code offset #699
    //   Java source line #426	-> byte code offset #714
    //   Java source line #427	-> byte code offset #729
    //   Java source line #428	-> byte code offset #772
    //   Java source line #429	-> byte code offset #816
    //   Java source line #430	-> byte code offset #860
    //   Java source line #431	-> byte code offset #904
    //   Java source line #432	-> byte code offset #948
    //   Java source line #433	-> byte code offset #977
    //   Java source line #434	-> byte code offset #991
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	595	0	suite$Mnname	Object
    //   0	595	1	line$Mninfo	Object
    //   3	583	2	r	Object
    //   19	123	3	groups	Object
    //   11	1	4	localObject1	Object
    //   24	581	4	line	Object
    //   33	1	5	localObject2	Object
    //   67	83	5	msg	Object
    //   179	485	5	count$Mnlist	Object
    //   171	1	6	localObject3	Object
    //   186	493	6	expected$Mncount	Object
    //   193	19	7	saved$Mncount	Object
    //   216	40	8	group$Mncount	Object
    //   203	798	9	localObject4	Object
    //   596	1	14	localClassCastException1	ClassCastException
    //   610	1	15	localClassCastException2	ClassCastException
    //   624	1	16	localClassCastException3	ClassCastException
    //   639	1	17	localClassCastException4	ClassCastException
    //   654	1	18	localClassCastException5	ClassCastException
    //   669	1	19	localClassCastException6	ClassCastException
    //   684	1	20	localClassCastException7	ClassCastException
    //   699	1	21	localClassCastException8	ClassCastException
    //   714	1	22	localClassCastException9	ClassCastException
    //   729	1	23	localClassCastException10	ClassCastException
    //   743	1	24	localClassCastException11	ClassCastException
    //   757	1	25	localClassCastException12	ClassCastException
    //   772	1	26	localClassCastException13	ClassCastException
    //   786	1	27	localClassCastException14	ClassCastException
    //   801	1	28	localClassCastException15	ClassCastException
    //   816	1	29	localClassCastException16	ClassCastException
    //   830	1	30	localClassCastException17	ClassCastException
    //   845	1	31	localClassCastException18	ClassCastException
    //   860	1	32	localClassCastException19	ClassCastException
    //   874	1	33	localClassCastException20	ClassCastException
    //   889	1	34	localClassCastException21	ClassCastException
    //   904	1	35	localClassCastException22	ClassCastException
    //   918	1	36	localClassCastException23	ClassCastException
    //   933	1	37	localClassCastException24	ClassCastException
    //   948	1	38	localClassCastException25	ClassCastException
    //   962	1	39	localClassCastException26	ClassCastException
    //   977	1	40	localClassCastException27	ClassCastException
    //   991	1	41	localClassCastException28	ClassCastException
    // Exception table:
    //   from	to	target	type
    //   13	16	596	java/lang/ClassCastException
    //   35	38	610	java/lang/ClassCastException
    //   106	109	624	java/lang/ClassCastException
    //   133	136	639	java/lang/ClassCastException
    //   151	154	654	java/lang/ClassCastException
    //   173	176	669	java/lang/ClassCastException
    //   205	208	684	java/lang/ClassCastException
    //   248	251	699	java/lang/ClassCastException
    //   278	281	714	java/lang/ClassCastException
    //   298	301	729	java/lang/ClassCastException
    //   310	313	743	java/lang/ClassCastException
    //   325	328	757	java/lang/ClassCastException
    //   343	346	772	java/lang/ClassCastException
    //   355	358	786	java/lang/ClassCastException
    //   370	373	801	java/lang/ClassCastException
    //   388	391	816	java/lang/ClassCastException
    //   400	403	830	java/lang/ClassCastException
    //   415	418	845	java/lang/ClassCastException
    //   433	436	860	java/lang/ClassCastException
    //   445	448	874	java/lang/ClassCastException
    //   460	463	889	java/lang/ClassCastException
    //   478	481	904	java/lang/ClassCastException
    //   490	493	918	java/lang/ClassCastException
    //   505	508	933	java/lang/ClassCastException
    //   523	526	948	java/lang/ClassCastException
    //   537	540	962	java/lang/ClassCastException
    //   555	558	977	java/lang/ClassCastException
    //   579	582	991	java/lang/ClassCastException
  }
  
  /* Error */
  static void testOnTestBeginSimple(Object runner)
  {
    // Byte code:
    //   0: aload_0
    //   1: ldc 13
    //   3: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   6: dup
    //   7: astore_2
    //   8: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   11: invokestatic 438	gnu/kawa/slib/testing:testRunnerAuxValue	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   14: astore_1
    //   15: aload_1
    //   16: invokestatic 441	kawa/lib/ports:isOutputPort	(Ljava/lang/Object;)Z
    //   19: ifeq +121 -> 140
    //   22: aload_0
    //   23: ldc 13
    //   25: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   28: dup
    //   29: astore_3
    //   30: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   33: invokestatic 534	gnu/kawa/slib/testing:testResultAlist	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   36: astore_2
    //   37: getstatic 537	gnu/kawa/slib/testing:Lit4	Lgnu/mapping/SimpleSymbol;
    //   40: aload_2
    //   41: invokestatic 540	kawa/lib/lists:assq	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   44: astore_3
    //   45: getstatic 543	gnu/kawa/slib/testing:Lit5	Lgnu/mapping/SimpleSymbol;
    //   48: aload_2
    //   49: invokestatic 540	kawa/lib/lists:assq	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   52: astore 4
    //   54: getstatic 546	gnu/kawa/slib/testing:Lit6	Lgnu/mapping/SimpleSymbol;
    //   57: aload_2
    //   58: invokestatic 540	kawa/lib/lists:assq	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   61: astore 5
    //   63: getstatic 549	gnu/kawa/slib/testing:Lit7	Lgnu/mapping/SimpleSymbol;
    //   66: aload_2
    //   67: invokestatic 540	kawa/lib/lists:assq	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   70: astore 6
    //   72: ldc_w 551
    //   75: aload_1
    //   76: invokestatic 418	kawa/lib/ports:display	(Ljava/lang/Object;Ljava/lang/Object;)V
    //   79: aload_1
    //   80: invokestatic 421	kawa/lib/ports:newline	(Ljava/lang/Object;)V
    //   83: aload 6
    //   85: invokestatic 279	gnu/expr/KawaConvert:isTrue	(Ljava/lang/Object;)Z
    //   88: ifeq +9 -> 97
    //   91: aload 6
    //   93: aload_1
    //   94: invokestatic 554	gnu/kawa/slib/testing:$PcTestWriteResult1	(Ljava/lang/Object;Ljava/lang/Object;)V
    //   97: aload_3
    //   98: invokestatic 279	gnu/expr/KawaConvert:isTrue	(Ljava/lang/Object;)Z
    //   101: ifeq +8 -> 109
    //   104: aload_3
    //   105: aload_1
    //   106: invokestatic 554	gnu/kawa/slib/testing:$PcTestWriteResult1	(Ljava/lang/Object;Ljava/lang/Object;)V
    //   109: aload 4
    //   111: invokestatic 279	gnu/expr/KawaConvert:isTrue	(Ljava/lang/Object;)Z
    //   114: ifeq +9 -> 123
    //   117: aload 4
    //   119: aload_1
    //   120: invokestatic 554	gnu/kawa/slib/testing:$PcTestWriteResult1	(Ljava/lang/Object;Ljava/lang/Object;)V
    //   123: aload 5
    //   125: invokestatic 279	gnu/expr/KawaConvert:isTrue	(Ljava/lang/Object;)Z
    //   128: ifeq +12 -> 140
    //   131: aload 5
    //   133: aload_1
    //   134: invokestatic 554	gnu/kawa/slib/testing:$PcTestWriteResult1	(Ljava/lang/Object;Ljava/lang/Object;)V
    //   137: goto +3 -> 140
    //   140: return
    //   141: new 75	gnu/mapping/WrongType
    //   144: dup_x1
    //   145: swap
    //   146: ldc_w 435
    //   149: iconst_0
    //   150: aload_2
    //   151: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   154: athrow
    //   155: new 75	gnu/mapping/WrongType
    //   158: dup_x1
    //   159: swap
    //   160: ldc_w 531
    //   163: iconst_0
    //   164: aload_3
    //   165: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   168: athrow
    // Line number table:
    //   Java source line #461	-> byte code offset #0
    //   Java source line #462	-> byte code offset #0
    //   Java source line #463	-> byte code offset #15
    //   Java source line #464	-> byte code offset #22
    //   Java source line #465	-> byte code offset #37
    //   Java source line #464	-> byte code offset #45
    //   Java source line #466	-> byte code offset #45
    //   Java source line #464	-> byte code offset #54
    //   Java source line #467	-> byte code offset #54
    //   Java source line #464	-> byte code offset #63
    //   Java source line #468	-> byte code offset #63
    //   Java source line #469	-> byte code offset #72
    //   Java source line #470	-> byte code offset #79
    //   Java source line #471	-> byte code offset #83
    //   Java source line #472	-> byte code offset #97
    //   Java source line #473	-> byte code offset #109
    //   Java source line #474	-> byte code offset #123
    //   Java source line #462	-> byte code offset #141
    //   Java source line #464	-> byte code offset #155
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	140	0	runner	Object
    //   14	120	1	log	Object
    //   7	1	2	localObject1	Object
    //   36	115	2	results	Object
    //   29	1	3	localObject2	Object
    //   44	121	3	source$Mnfile	Object
    //   52	66	4	source$Mnline	Object
    //   61	71	5	source$Mnform	Object
    //   70	22	6	test$Mnname	Object
    //   141	1	9	localClassCastException1	ClassCastException
    //   155	1	10	localClassCastException2	ClassCastException
    // Exception table:
    //   from	to	target	type
    //   8	11	141	java/lang/ClassCastException
    //   30	33	155	java/lang/ClassCastException
  }
  
  /* Error */
  static void $PcTestWriteResult1(Object pair, Object port)
  {
    // Byte code:
    //   0: ldc_w 866
    //   3: aload_1
    //   4: invokestatic 418	kawa/lib/ports:display	(Ljava/lang/Object;Ljava/lang/Object;)V
    //   7: aload_0
    //   8: ldc_w 447
    //   11: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   14: dup
    //   15: astore_2
    //   16: checkcast 447	gnu/lists/Pair
    //   19: invokestatic 452	kawa/lib/lists:car	(Lgnu/lists/Pair;)Ljava/lang/Object;
    //   22: aload_1
    //   23: invokestatic 418	kawa/lib/ports:display	(Ljava/lang/Object;Ljava/lang/Object;)V
    //   26: ldc_w 565
    //   29: aload_1
    //   30: invokestatic 418	kawa/lib/ports:display	(Ljava/lang/Object;Ljava/lang/Object;)V
    //   33: aload_0
    //   34: ldc_w 447
    //   37: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   40: dup
    //   41: astore_2
    //   42: checkcast 447	gnu/lists/Pair
    //   45: invokestatic 518	kawa/lib/lists:cdr	(Lgnu/lists/Pair;)Ljava/lang/Object;
    //   48: aload_1
    //   49: ldc_w 457
    //   52: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   55: dup
    //   56: astore_2
    //   57: checkcast 457	gnu/kawa/io/OutPort
    //   60: invokestatic 871	kawa/lib/ports:write	(Ljava/lang/Object;Lgnu/kawa/io/OutPort;)V
    //   63: aload_1
    //   64: invokestatic 421	kawa/lib/ports:newline	(Ljava/lang/Object;)V
    //   67: return
    //   68: new 75	gnu/mapping/WrongType
    //   71: dup_x1
    //   72: swap
    //   73: ldc_w 449
    //   76: iconst_1
    //   77: aload_2
    //   78: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   81: athrow
    //   82: new 75	gnu/mapping/WrongType
    //   85: dup_x1
    //   86: swap
    //   87: ldc_w 516
    //   90: iconst_1
    //   91: aload_2
    //   92: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   95: athrow
    //   96: new 75	gnu/mapping/WrongType
    //   99: dup_x1
    //   100: swap
    //   101: ldc_w 868
    //   104: iconst_2
    //   105: aload_2
    //   106: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   109: athrow
    // Line number table:
    //   Java source line #517	-> byte code offset #0
    //   Java source line #518	-> byte code offset #0
    //   Java source line #519	-> byte code offset #7
    //   Java source line #520	-> byte code offset #26
    //   Java source line #521	-> byte code offset #33
    //   Java source line #522	-> byte code offset #63
    //   Java source line #519	-> byte code offset #68
    //   Java source line #521	-> byte code offset #82
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	67	0	pair	Object
    //   0	67	1	port	Object
    //   15	91	2	localObject	Object
    //   68	1	3	localClassCastException1	ClassCastException
    //   82	1	4	localClassCastException2	ClassCastException
    //   96	1	5	localClassCastException3	ClassCastException
    // Exception table:
    //   from	to	target	type
    //   16	19	68	java/lang/ClassCastException
    //   42	45	82	java/lang/ClassCastException
    //   57	60	96	java/lang/ClassCastException
  }
  
  /* Error */
  public static void testResultRemove(Object runner, Object pname)
  {
    // Byte code:
    //   0: aload_0
    //   1: ldc 13
    //   3: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   6: dup
    //   7: astore_3
    //   8: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   11: invokestatic 534	gnu/kawa/slib/testing:testResultAlist	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   14: astore_2
    //   15: aload_1
    //   16: aload_2
    //   17: invokestatic 540	kawa/lib/lists:assq	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   20: astore_3
    //   21: aload_3
    //   22: invokestatic 279	gnu/expr/KawaConvert:isTrue	(Ljava/lang/Object;)Z
    //   25: ifeq +23 -> 48
    //   28: aload_0
    //   29: ldc 13
    //   31: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   34: dup
    //   35: astore 4
    //   37: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   40: aload_3
    //   41: aload_2
    //   42: invokestatic 591	gnu/kawa/slib/testing:lambda4loop	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   45: invokestatic 93	gnu/kawa/slib/testing:testResultAlist$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   48: return
    //   49: new 75	gnu/mapping/WrongType
    //   52: dup_x1
    //   53: swap
    //   54: ldc_w 531
    //   57: iconst_0
    //   58: aload_3
    //   59: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   62: athrow
    //   63: new 75	gnu/mapping/WrongType
    //   66: dup_x1
    //   67: swap
    //   68: ldc 77
    //   70: iconst_0
    //   71: aload 4
    //   73: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   76: athrow
    // Line number table:
    //   Java source line #534	-> byte code offset #0
    //   Java source line #535	-> byte code offset #0
    //   Java source line #536	-> byte code offset #15
    //   Java source line #537	-> byte code offset #21
    //   Java source line #538	-> byte code offset #28
    //   Java source line #539	-> byte code offset #40
    //   Java source line #535	-> byte code offset #49
    //   Java source line #538	-> byte code offset #63
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	48	0	runner	Object
    //   0	48	1	pname	Object
    //   14	28	2	alist	Object
    //   7	1	3	localObject1	Object
    //   20	39	3	p	Object
    //   35	37	4	localObject2	Object
    //   49	1	6	localClassCastException1	ClassCastException
    //   63	1	7	localClassCastException2	ClassCastException
    // Exception table:
    //   from	to	target	type
    //   8	11	49	java/lang/ClassCastException
    //   37	40	63	java/lang/ClassCastException
  }
  
  /* Error */
  public static Object lambda4loop(Object p, Object r)
  {
    // Byte code:
    //   0: aload_1
    //   1: aload_0
    //   2: if_acmpne +21 -> 23
    //   5: aload_1
    //   6: ldc_w 447
    //   9: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   12: dup
    //   13: astore_2
    //   14: checkcast 447	gnu/lists/Pair
    //   17: invokestatic 518	kawa/lib/lists:cdr	(Lgnu/lists/Pair;)Ljava/lang/Object;
    //   20: goto +40 -> 60
    //   23: aload_1
    //   24: ldc_w 447
    //   27: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   30: dup
    //   31: astore_2
    //   32: checkcast 447	gnu/lists/Pair
    //   35: invokestatic 452	kawa/lib/lists:car	(Lgnu/lists/Pair;)Ljava/lang/Object;
    //   38: aload_0
    //   39: aload_1
    //   40: ldc_w 447
    //   43: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   46: dup
    //   47: astore_2
    //   48: checkcast 447	gnu/lists/Pair
    //   51: invokestatic 518	kawa/lib/lists:cdr	(Lgnu/lists/Pair;)Ljava/lang/Object;
    //   54: invokestatic 591	gnu/kawa/slib/testing:lambda4loop	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   57: invokestatic 367	kawa/lib/lists:cons	(Ljava/lang/Object;Ljava/lang/Object;)Lgnu/lists/Pair;
    //   60: areturn
    //   61: new 75	gnu/mapping/WrongType
    //   64: dup_x1
    //   65: swap
    //   66: ldc_w 516
    //   69: iconst_1
    //   70: aload_2
    //   71: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   74: athrow
    //   75: new 75	gnu/mapping/WrongType
    //   78: dup_x1
    //   79: swap
    //   80: ldc_w 449
    //   83: iconst_1
    //   84: aload_2
    //   85: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   88: athrow
    //   89: new 75	gnu/mapping/WrongType
    //   92: dup_x1
    //   93: swap
    //   94: ldc_w 516
    //   97: iconst_1
    //   98: aload_2
    //   99: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   102: athrow
    // Line number table:
    //   Java source line #540	-> byte code offset #0
    //   Java source line #541	-> byte code offset #23
    //   Java source line #540	-> byte code offset #61
    //   Java source line #541	-> byte code offset #75
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	60	0	p	Object
    //   0	60	1	r	Object
    //   13	86	2	localObject	Object
    //   61	1	3	localClassCastException1	ClassCastException
    //   75	1	4	localClassCastException2	ClassCastException
    //   89	1	5	localClassCastException3	ClassCastException
    // Exception table:
    //   from	to	target	type
    //   14	17	61	java/lang/ClassCastException
    //   32	35	75	java/lang/ClassCastException
    //   48	51	89	java/lang/ClassCastException
  }
  
  /* Error */
  public static Object testResultKind$V(Object[] argsArray)
  {
    // Byte code:
    //   0: aload_0
    //   1: iconst_0
    //   2: invokestatic 595	gnu/lists/LList:makeList	([Ljava/lang/Object;I)Lgnu/lists/LList;
    //   5: dup
    //   6: astore_2
    //   7: astore_1
    //   8: aload_1
    //   9: invokestatic 579	kawa/lib/lists:isPair	(Ljava/lang/Object;)Z
    //   12: ifeq +15 -> 27
    //   15: aload_1
    //   16: dup
    //   17: astore_3
    //   18: checkcast 447	gnu/lists/Pair
    //   21: invokestatic 452	kawa/lib/lists:car	(Lgnu/lists/Pair;)Ljava/lang/Object;
    //   24: goto +9 -> 33
    //   27: getstatic 261	gnu/kawa/slib/testing:test$Mnrunner$Mncurrent	Lgnu/mapping/LocationProc;
    //   30: invokevirtual 273	gnu/mapping/LocationProc:getValue	()Ljava/lang/Object;
    //   33: astore_2
    //   34: getstatic 331	gnu/kawa/slib/testing:Lit1	Lgnu/mapping/SimpleSymbol;
    //   37: aload_2
    //   38: ldc 13
    //   40: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   43: dup
    //   44: astore 4
    //   46: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   49: invokestatic 534	gnu/kawa/slib/testing:testResultAlist	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   52: invokestatic 540	kawa/lib/lists:assq	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   55: astore_3
    //   56: aload_3
    //   57: invokestatic 279	gnu/expr/KawaConvert:isTrue	(Ljava/lang/Object;)Z
    //   60: ifeq +22 -> 82
    //   63: aload_3
    //   64: ldc_w 447
    //   67: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   70: dup
    //   71: astore 4
    //   73: checkcast 447	gnu/lists/Pair
    //   76: invokestatic 518	kawa/lib/lists:cdr	(Lgnu/lists/Pair;)Ljava/lang/Object;
    //   79: goto +6 -> 85
    //   82: getstatic 251	java/lang/Boolean:FALSE	Ljava/lang/Boolean;
    //   85: areturn
    //   86: new 75	gnu/mapping/WrongType
    //   89: dup_x1
    //   90: swap
    //   91: ldc_w 449
    //   94: iconst_1
    //   95: aload_3
    //   96: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   99: athrow
    //   100: new 75	gnu/mapping/WrongType
    //   103: dup_x1
    //   104: swap
    //   105: ldc_w 531
    //   108: iconst_0
    //   109: aload 4
    //   111: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   114: athrow
    //   115: new 75	gnu/mapping/WrongType
    //   118: dup_x1
    //   119: swap
    //   120: ldc_w 516
    //   123: iconst_1
    //   124: aload 4
    //   126: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   129: athrow
    // Line number table:
    //   Java source line #543	-> byte code offset #0
    //   Java source line #544	-> byte code offset #8
    //   Java source line #545	-> byte code offset #34
    //   Java source line #482	-> byte code offset #63
    //   Java source line #544	-> byte code offset #86
    //   Java source line #545	-> byte code offset #100
    //   Java source line #482	-> byte code offset #115
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	85	0	argsArray	Object[]
    //   0	16	1	rest	gnu.lists.LList
    //   6	1	2	localLList1	gnu.lists.LList
    //   33	5	2	runner	Object
    //   17	1	3	localLList2	gnu.lists.LList
    //   55	41	3	p	Object
    //   44	81	4	localObject1	Object
    //   86	1	7	localClassCastException1	ClassCastException
    //   100	1	8	localClassCastException2	ClassCastException
    //   115	1	9	localClassCastException3	ClassCastException
    // Exception table:
    //   from	to	target	type
    //   18	21	86	java/lang/ClassCastException
    //   46	49	100	java/lang/ClassCastException
    //   73	76	115	java/lang/ClassCastException
  }
  
  /* Error */
  public static Object isTestPassed$V(Object[] argsArray)
  {
    // Byte code:
    //   0: aload_0
    //   1: iconst_0
    //   2: invokestatic 595	gnu/lists/LList:makeList	([Ljava/lang/Object;I)Lgnu/lists/LList;
    //   5: dup
    //   6: astore_2
    //   7: astore_1
    //   8: aload_1
    //   9: invokestatic 579	kawa/lib/lists:isPair	(Ljava/lang/Object;)Z
    //   12: ifeq +15 -> 27
    //   15: aload_1
    //   16: dup
    //   17: astore_3
    //   18: checkcast 447	gnu/lists/Pair
    //   21: invokestatic 452	kawa/lib/lists:car	(Lgnu/lists/Pair;)Ljava/lang/Object;
    //   24: goto +6 -> 30
    //   27: invokestatic 474	gnu/kawa/slib/testing:testRunnerGet	()Ljava/lang/Object;
    //   30: astore_2
    //   31: getstatic 331	gnu/kawa/slib/testing:Lit1	Lgnu/mapping/SimpleSymbol;
    //   34: aload_2
    //   35: ldc 13
    //   37: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   40: dup
    //   41: astore 4
    //   43: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   46: invokestatic 534	gnu/kawa/slib/testing:testResultAlist	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   49: invokestatic 540	kawa/lib/lists:assq	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   52: astore_3
    //   53: aload_3
    //   54: invokestatic 279	gnu/expr/KawaConvert:isTrue	(Ljava/lang/Object;)Z
    //   57: ifeq +22 -> 79
    //   60: aload_3
    //   61: ldc_w 447
    //   64: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   67: dup
    //   68: astore 4
    //   70: checkcast 447	gnu/lists/Pair
    //   73: invokestatic 518	kawa/lib/lists:cdr	(Lgnu/lists/Pair;)Ljava/lang/Object;
    //   76: goto +6 -> 82
    //   79: getstatic 251	java/lang/Boolean:FALSE	Ljava/lang/Boolean;
    //   82: getstatic 598	gnu/kawa/slib/testing:Lit11	Lgnu/lists/PairWithPosition;
    //   85: invokestatic 561	kawa/lib/lists:memq	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   88: areturn
    //   89: new 75	gnu/mapping/WrongType
    //   92: dup_x1
    //   93: swap
    //   94: ldc_w 449
    //   97: iconst_1
    //   98: aload_3
    //   99: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   102: athrow
    //   103: new 75	gnu/mapping/WrongType
    //   106: dup_x1
    //   107: swap
    //   108: ldc_w 531
    //   111: iconst_0
    //   112: aload 4
    //   114: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   117: athrow
    //   118: new 75	gnu/mapping/WrongType
    //   121: dup_x1
    //   122: swap
    //   123: ldc_w 516
    //   126: iconst_1
    //   127: aload 4
    //   129: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   132: athrow
    // Line number table:
    //   Java source line #547	-> byte code offset #0
    //   Java source line #548	-> byte code offset #8
    //   Java source line #549	-> byte code offset #31
    //   Java source line #482	-> byte code offset #60
    //   Java source line #548	-> byte code offset #89
    //   Java source line #549	-> byte code offset #103
    //   Java source line #482	-> byte code offset #118
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	88	0	argsArray	Object[]
    //   0	16	1	rest	gnu.lists.LList
    //   6	1	2	localLList1	gnu.lists.LList
    //   30	5	2	runner	Object
    //   17	1	3	localLList2	gnu.lists.LList
    //   52	47	3	p	Object
    //   41	87	4	localObject1	Object
    //   89	1	7	localClassCastException1	ClassCastException
    //   103	1	8	localClassCastException2	ClassCastException
    //   118	1	9	localClassCastException3	ClassCastException
    // Exception table:
    //   from	to	target	type
    //   18	21	89	java/lang/ClassCastException
    //   43	46	103	java/lang/ClassCastException
    //   70	73	118	java/lang/ClassCastException
  }
  
  /* Error */
  public static Object $PcTestReportResult()
  {
    // Byte code:
    //   0: invokestatic 474	gnu/kawa/slib/testing:testRunnerGet	()Ljava/lang/Object;
    //   3: astore_0
    //   4: iconst_1
    //   5: anewarray 281	java/lang/Object
    //   8: dup
    //   9: iconst_0
    //   10: aload_0
    //   11: aastore
    //   12: invokestatic 602	gnu/kawa/slib/testing:testResultKind$V	([Ljava/lang/Object;)Ljava/lang/Object;
    //   15: astore_1
    //   16: aload_1
    //   17: invokevirtual 606	java/lang/Object:hashCode	()I
    //   20: lookupswitch	default:+236->256, 3135262:+44->64, 3433489:+188->208, 113957782:+140->160, 114256009:+92->112
    //   64: aload_1
    //   65: getstatic 609	gnu/kawa/slib/testing:Lit12	Lgnu/mapping/SimpleSymbol;
    //   68: invokestatic 318	gnu/kawa/functions/IsEqv:apply	(Ljava/lang/Object;Ljava/lang/Object;)Z
    //   71: ifeq +185 -> 256
    //   74: aload_0
    //   75: ldc 13
    //   77: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   80: dup
    //   81: astore_2
    //   82: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   85: iconst_1
    //   86: getstatic 612	gnu/kawa/slib/testing:Lit13	Lgnu/math/IntNum;
    //   89: aload_0
    //   90: ldc 13
    //   92: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   95: dup
    //   96: astore_2
    //   97: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   100: invokestatic 617	gnu/kawa/slib/testing:testRunnerFailCount	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   103: invokestatic 499	gnu/kawa/functions/AddOp:apply2	(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   106: invokestatic 107	gnu/kawa/slib/testing:testRunnerFailCount$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   109: goto +185 -> 294
    //   112: aload_1
    //   113: getstatic 568	gnu/kawa/slib/testing:Lit9	Lgnu/mapping/SimpleSymbol;
    //   116: invokestatic 318	gnu/kawa/functions/IsEqv:apply	(Ljava/lang/Object;Ljava/lang/Object;)Z
    //   119: ifeq +137 -> 256
    //   122: aload_0
    //   123: ldc 13
    //   125: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   128: dup
    //   129: astore_2
    //   130: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   133: iconst_1
    //   134: getstatic 612	gnu/kawa/slib/testing:Lit13	Lgnu/math/IntNum;
    //   137: aload_0
    //   138: ldc 13
    //   140: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   143: dup
    //   144: astore_2
    //   145: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   148: invokestatic 622	gnu/kawa/slib/testing:testRunnerXpassCount	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   151: invokestatic 499	gnu/kawa/functions/AddOp:apply2	(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   154: invokestatic 112	gnu/kawa/slib/testing:testRunnerXpassCount$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   157: goto +137 -> 294
    //   160: aload_1
    //   161: getstatic 346	gnu/kawa/slib/testing:Lit3	Lgnu/mapping/SimpleSymbol;
    //   164: invokestatic 318	gnu/kawa/functions/IsEqv:apply	(Ljava/lang/Object;Ljava/lang/Object;)Z
    //   167: ifeq +89 -> 256
    //   170: aload_0
    //   171: ldc 13
    //   173: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   176: dup
    //   177: astore_2
    //   178: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   181: iconst_1
    //   182: getstatic 612	gnu/kawa/slib/testing:Lit13	Lgnu/math/IntNum;
    //   185: aload_0
    //   186: ldc 13
    //   188: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   191: dup
    //   192: astore_2
    //   193: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   196: invokestatic 627	gnu/kawa/slib/testing:testRunnerXfailCount	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   199: invokestatic 499	gnu/kawa/functions/AddOp:apply2	(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   202: invokestatic 117	gnu/kawa/slib/testing:testRunnerXfailCount$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   205: goto +89 -> 294
    //   208: aload_1
    //   209: getstatic 630	gnu/kawa/slib/testing:Lit14	Lgnu/mapping/SimpleSymbol;
    //   212: invokestatic 318	gnu/kawa/functions/IsEqv:apply	(Ljava/lang/Object;Ljava/lang/Object;)Z
    //   215: ifeq +41 -> 256
    //   218: aload_0
    //   219: ldc 13
    //   221: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   224: dup
    //   225: astore_2
    //   226: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   229: iconst_1
    //   230: getstatic 612	gnu/kawa/slib/testing:Lit13	Lgnu/math/IntNum;
    //   233: aload_0
    //   234: ldc 13
    //   236: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   239: dup
    //   240: astore_2
    //   241: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   244: invokestatic 635	gnu/kawa/slib/testing:testRunnerPassCount	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   247: invokestatic 499	gnu/kawa/functions/AddOp:apply2	(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   250: invokestatic 102	gnu/kawa/slib/testing:testRunnerPassCount$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   253: goto +41 -> 294
    //   256: aload_0
    //   257: ldc 13
    //   259: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   262: dup
    //   263: astore_2
    //   264: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   267: iconst_1
    //   268: getstatic 612	gnu/kawa/slib/testing:Lit13	Lgnu/math/IntNum;
    //   271: aload_0
    //   272: ldc 13
    //   274: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   277: dup
    //   278: astore_2
    //   279: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   282: invokestatic 640	gnu/kawa/slib/testing:testRunnerSkipCount	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   285: invokestatic 499	gnu/kawa/functions/AddOp:apply2	(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   288: invokestatic 122	gnu/kawa/slib/testing:testRunnerSkipCount$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   291: goto +3 -> 294
    //   294: aload_0
    //   295: ldc 13
    //   297: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   300: dup
    //   301: astore_2
    //   302: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   305: iconst_1
    //   306: getstatic 612	gnu/kawa/slib/testing:Lit13	Lgnu/math/IntNum;
    //   309: aload_0
    //   310: ldc 13
    //   312: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   315: dup
    //   316: astore_2
    //   317: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   320: invokestatic 377	gnu/kawa/slib/testing:$PcTestRunnerTotalCount	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   323: invokestatic 499	gnu/kawa/functions/AddOp:apply2	(ILjava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   326: invokestatic 127	gnu/kawa/slib/testing:$PcTestRunnerTotalCount$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   329: getstatic 301	kawa/standard/Scheme:applyToArgs	Lgnu/kawa/functions/ApplyToArgs;
    //   332: aload_0
    //   333: ldc 13
    //   335: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   338: dup
    //   339: astore_2
    //   340: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   343: invokestatic 645	gnu/kawa/slib/testing:testRunnerOnTestEnd	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   346: aload_0
    //   347: invokevirtual 483	gnu/mapping/Procedure:apply2	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   350: areturn
    //   351: new 75	gnu/mapping/WrongType
    //   354: dup_x1
    //   355: swap
    //   356: ldc 104
    //   358: iconst_0
    //   359: aload_2
    //   360: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   363: athrow
    //   364: new 75	gnu/mapping/WrongType
    //   367: dup_x1
    //   368: swap
    //   369: ldc_w 614
    //   372: iconst_0
    //   373: aload_2
    //   374: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   377: athrow
    //   378: new 75	gnu/mapping/WrongType
    //   381: dup_x1
    //   382: swap
    //   383: ldc 109
    //   385: iconst_0
    //   386: aload_2
    //   387: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   390: athrow
    //   391: new 75	gnu/mapping/WrongType
    //   394: dup_x1
    //   395: swap
    //   396: ldc_w 619
    //   399: iconst_0
    //   400: aload_2
    //   401: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   404: athrow
    //   405: new 75	gnu/mapping/WrongType
    //   408: dup_x1
    //   409: swap
    //   410: ldc 114
    //   412: iconst_0
    //   413: aload_2
    //   414: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   417: athrow
    //   418: new 75	gnu/mapping/WrongType
    //   421: dup_x1
    //   422: swap
    //   423: ldc_w 624
    //   426: iconst_0
    //   427: aload_2
    //   428: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   431: athrow
    //   432: new 75	gnu/mapping/WrongType
    //   435: dup_x1
    //   436: swap
    //   437: ldc 95
    //   439: iconst_0
    //   440: aload_2
    //   441: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   444: athrow
    //   445: new 75	gnu/mapping/WrongType
    //   448: dup_x1
    //   449: swap
    //   450: ldc_w 632
    //   453: iconst_0
    //   454: aload_2
    //   455: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   458: athrow
    //   459: new 75	gnu/mapping/WrongType
    //   462: dup_x1
    //   463: swap
    //   464: ldc 119
    //   466: iconst_0
    //   467: aload_2
    //   468: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   471: athrow
    //   472: new 75	gnu/mapping/WrongType
    //   475: dup_x1
    //   476: swap
    //   477: ldc_w 637
    //   480: iconst_0
    //   481: aload_2
    //   482: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   485: athrow
    //   486: new 75	gnu/mapping/WrongType
    //   489: dup_x1
    //   490: swap
    //   491: ldc 124
    //   493: iconst_0
    //   494: aload_2
    //   495: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   498: athrow
    //   499: new 75	gnu/mapping/WrongType
    //   502: dup_x1
    //   503: swap
    //   504: ldc_w 374
    //   507: iconst_0
    //   508: aload_2
    //   509: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   512: athrow
    //   513: new 75	gnu/mapping/WrongType
    //   516: dup_x1
    //   517: swap
    //   518: ldc_w 642
    //   521: iconst_0
    //   522: aload_2
    //   523: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   526: athrow
    // Line number table:
    //   Java source line #551	-> byte code offset #0
    //   Java source line #552	-> byte code offset #0
    //   Java source line #553	-> byte code offset #4
    //   Java source line #554	-> byte code offset #16
    //   Java source line #558	-> byte code offset #74
    //   Java source line #560	-> byte code offset #122
    //   Java source line #562	-> byte code offset #170
    //   Java source line #556	-> byte code offset #218
    //   Java source line #564	-> byte code offset #256
    //   Java source line #565	-> byte code offset #294
    //   Java source line #566	-> byte code offset #329
    //   Java source line #558	-> byte code offset #351
    //   Java source line #560	-> byte code offset #378
    //   Java source line #562	-> byte code offset #405
    //   Java source line #556	-> byte code offset #432
    //   Java source line #564	-> byte code offset #459
    //   Java source line #565	-> byte code offset #486
    //   Java source line #566	-> byte code offset #513
    // Local variable table:
    //   start	length	slot	name	signature
    //   3	344	0	r	Object
    //   15	194	1	result$Mnkind	Object
    //   81	442	2	localObject1	Object
    //   351	1	3	localClassCastException1	ClassCastException
    //   364	1	4	localClassCastException2	ClassCastException
    //   378	1	5	localClassCastException3	ClassCastException
    //   391	1	6	localClassCastException4	ClassCastException
    //   405	1	7	localClassCastException5	ClassCastException
    //   418	1	8	localClassCastException6	ClassCastException
    //   432	1	9	localClassCastException7	ClassCastException
    //   445	1	10	localClassCastException8	ClassCastException
    //   459	1	11	localClassCastException9	ClassCastException
    //   472	1	12	localClassCastException10	ClassCastException
    //   486	1	13	localClassCastException11	ClassCastException
    //   499	1	14	localClassCastException12	ClassCastException
    //   513	1	15	localClassCastException13	ClassCastException
    // Exception table:
    //   from	to	target	type
    //   82	85	351	java/lang/ClassCastException
    //   97	100	364	java/lang/ClassCastException
    //   130	133	378	java/lang/ClassCastException
    //   145	148	391	java/lang/ClassCastException
    //   178	181	405	java/lang/ClassCastException
    //   193	196	418	java/lang/ClassCastException
    //   226	229	432	java/lang/ClassCastException
    //   241	244	445	java/lang/ClassCastException
    //   264	267	459	java/lang/ClassCastException
    //   279	282	472	java/lang/ClassCastException
    //   302	305	486	java/lang/ClassCastException
    //   317	320	499	java/lang/ClassCastException
    //   340	343	513	java/lang/ClassCastException
  }
  
  /* Error */
  public static boolean $PcTestOnTestBegin(Object r)
  {
    // Byte code:
    //   0: aload_0
    //   1: invokestatic 648	gnu/kawa/slib/testing:$PcTestShouldExecute	(Ljava/lang/Object;)Ljava/lang/Object;
    //   4: pop
    //   5: getstatic 301	kawa/standard/Scheme:applyToArgs	Lgnu/kawa/functions/ApplyToArgs;
    //   8: aload_0
    //   9: ldc 13
    //   11: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   14: dup
    //   15: astore_1
    //   16: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   19: invokestatic 653	gnu/kawa/slib/testing:testRunnerOnTestBegin	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   22: aload_0
    //   23: invokevirtual 483	gnu/mapping/Procedure:apply2	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   26: pop
    //   27: getstatic 334	gnu/kawa/slib/testing:Lit2	Lgnu/mapping/SimpleSymbol;
    //   30: getstatic 331	gnu/kawa/slib/testing:Lit1	Lgnu/mapping/SimpleSymbol;
    //   33: aload_0
    //   34: ldc 13
    //   36: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   39: dup
    //   40: astore_2
    //   41: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   44: invokestatic 534	gnu/kawa/slib/testing:testResultAlist	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   47: invokestatic 540	kawa/lib/lists:assq	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   50: astore_1
    //   51: aload_1
    //   52: invokestatic 279	gnu/expr/KawaConvert:isTrue	(Ljava/lang/Object;)Z
    //   55: ifeq +21 -> 76
    //   58: aload_1
    //   59: ldc_w 447
    //   62: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   65: dup
    //   66: astore_2
    //   67: checkcast 447	gnu/lists/Pair
    //   70: invokestatic 518	kawa/lib/lists:cdr	(Lgnu/lists/Pair;)Ljava/lang/Object;
    //   73: goto +6 -> 79
    //   76: getstatic 251	java/lang/Boolean:FALSE	Ljava/lang/Boolean;
    //   79: if_acmpne +7 -> 86
    //   82: iconst_0
    //   83: goto +4 -> 87
    //   86: iconst_1
    //   87: ireturn
    //   88: new 75	gnu/mapping/WrongType
    //   91: dup_x1
    //   92: swap
    //   93: ldc_w 650
    //   96: iconst_0
    //   97: aload_1
    //   98: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   101: athrow
    //   102: new 75	gnu/mapping/WrongType
    //   105: dup_x1
    //   106: swap
    //   107: ldc_w 531
    //   110: iconst_0
    //   111: aload_2
    //   112: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   115: athrow
    //   116: new 75	gnu/mapping/WrongType
    //   119: dup_x1
    //   120: swap
    //   121: ldc_w 516
    //   124: iconst_1
    //   125: aload_2
    //   126: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   129: athrow
    // Line number table:
    //   Java source line #640	-> byte code offset #0
    //   Java source line #641	-> byte code offset #0
    //   Java source line #642	-> byte code offset #5
    //   Java source line #643	-> byte code offset #27
    //   Java source line #482	-> byte code offset #58
    //   Java source line #642	-> byte code offset #88
    //   Java source line #643	-> byte code offset #102
    //   Java source line #482	-> byte code offset #116
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	87	0	r	Object
    //   15	1	1	localObject1	Object
    //   50	48	1	p	Object
    //   40	86	2	localObject2	Object
    //   88	1	4	localClassCastException1	ClassCastException
    //   102	1	5	localClassCastException2	ClassCastException
    //   116	1	6	localClassCastException3	ClassCastException
    // Exception table:
    //   from	to	target	type
    //   16	19	88	java/lang/ClassCastException
    //   41	44	102	java/lang/ClassCastException
    //   67	70	116	java/lang/ClassCastException
  }
  
  /* Error */
  public static void $PcTestOnTestEnd(Object r, Object result)
  {
    // Byte code:
    //   0: aload_0
    //   1: getstatic 331	gnu/kawa/slib/testing:Lit1	Lgnu/mapping/SimpleSymbol;
    //   4: getstatic 331	gnu/kawa/slib/testing:Lit1	Lgnu/mapping/SimpleSymbol;
    //   7: aload_0
    //   8: ldc 13
    //   10: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   13: dup
    //   14: astore_3
    //   15: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   18: invokestatic 534	gnu/kawa/slib/testing:testResultAlist	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   21: invokestatic 540	kawa/lib/lists:assq	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   24: astore_2
    //   25: aload_2
    //   26: invokestatic 279	gnu/expr/KawaConvert:isTrue	(Ljava/lang/Object;)Z
    //   29: ifeq +21 -> 50
    //   32: aload_2
    //   33: ldc_w 447
    //   36: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   39: dup
    //   40: astore_3
    //   41: checkcast 447	gnu/lists/Pair
    //   44: invokestatic 518	kawa/lib/lists:cdr	(Lgnu/lists/Pair;)Ljava/lang/Object;
    //   47: goto +6 -> 53
    //   50: getstatic 251	java/lang/Boolean:FALSE	Ljava/lang/Boolean;
    //   53: getstatic 346	gnu/kawa/slib/testing:Lit3	Lgnu/mapping/SimpleSymbol;
    //   56: if_acmpne +22 -> 78
    //   59: aload_1
    //   60: invokestatic 279	gnu/expr/KawaConvert:isTrue	(Ljava/lang/Object;)Z
    //   63: ifeq +9 -> 72
    //   66: getstatic 568	gnu/kawa/slib/testing:Lit9	Lgnu/mapping/SimpleSymbol;
    //   69: goto +25 -> 94
    //   72: getstatic 346	gnu/kawa/slib/testing:Lit3	Lgnu/mapping/SimpleSymbol;
    //   75: goto +19 -> 94
    //   78: aload_1
    //   79: invokestatic 279	gnu/expr/KawaConvert:isTrue	(Ljava/lang/Object;)Z
    //   82: ifeq +9 -> 91
    //   85: getstatic 630	gnu/kawa/slib/testing:Lit14	Lgnu/mapping/SimpleSymbol;
    //   88: goto +6 -> 94
    //   91: getstatic 609	gnu/kawa/slib/testing:Lit12	Lgnu/mapping/SimpleSymbol;
    //   94: invokestatic 338	gnu/kawa/slib/testing:testResultSet$Ex	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
    //   97: return
    //   98: new 75	gnu/mapping/WrongType
    //   101: dup_x1
    //   102: swap
    //   103: ldc_w 531
    //   106: iconst_0
    //   107: aload_3
    //   108: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   111: athrow
    //   112: new 75	gnu/mapping/WrongType
    //   115: dup_x1
    //   116: swap
    //   117: ldc_w 516
    //   120: iconst_1
    //   121: aload_3
    //   122: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   125: athrow
    // Line number table:
    //   Java source line #645	-> byte code offset #0
    //   Java source line #646	-> byte code offset #0
    //   Java source line #647	-> byte code offset #4
    //   Java source line #482	-> byte code offset #32
    //   Java source line #648	-> byte code offset #59
    //   Java source line #649	-> byte code offset #78
    //   Java source line #647	-> byte code offset #98
    //   Java source line #482	-> byte code offset #112
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	97	0	r	Object
    //   0	97	1	result	Object
    //   24	9	2	p	Object
    //   14	108	3	localObject1	Object
    //   98	1	4	localClassCastException1	ClassCastException
    //   112	1	5	localClassCastException2	ClassCastException
    // Exception table:
    //   from	to	target	type
    //   15	18	98	java/lang/ClassCastException
    //   41	44	112	java/lang/ClassCastException
  }
  
  /* Error */
  public static Object testRunnerTestName(Object runner)
  {
    // Byte code:
    //   0: getstatic 549	gnu/kawa/slib/testing:Lit7	Lgnu/mapping/SimpleSymbol;
    //   3: aload_0
    //   4: ldc 13
    //   6: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   9: dup
    //   10: astore_2
    //   11: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   14: invokestatic 534	gnu/kawa/slib/testing:testResultAlist	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   17: invokestatic 540	kawa/lib/lists:assq	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   20: astore_1
    //   21: aload_1
    //   22: invokestatic 279	gnu/expr/KawaConvert:isTrue	(Ljava/lang/Object;)Z
    //   25: ifeq +21 -> 46
    //   28: aload_1
    //   29: ldc_w 447
    //   32: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   35: dup
    //   36: astore_2
    //   37: checkcast 447	gnu/lists/Pair
    //   40: invokestatic 518	kawa/lib/lists:cdr	(Lgnu/lists/Pair;)Ljava/lang/Object;
    //   43: goto +6 -> 49
    //   46: ldc_w 655
    //   49: areturn
    //   50: new 75	gnu/mapping/WrongType
    //   53: dup_x1
    //   54: swap
    //   55: ldc_w 531
    //   58: iconst_0
    //   59: aload_2
    //   60: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   63: athrow
    //   64: new 75	gnu/mapping/WrongType
    //   67: dup_x1
    //   68: swap
    //   69: ldc_w 516
    //   72: iconst_1
    //   73: aload_2
    //   74: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   77: athrow
    // Line number table:
    //   Java source line #651	-> byte code offset #0
    //   Java source line #652	-> byte code offset #0
    //   Java source line #482	-> byte code offset #28
    //   Java source line #652	-> byte code offset #46
    //   Java source line #482	-> byte code offset #64
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	49	0	runner	Object
    //   20	9	1	p	Object
    //   10	64	2	localObject1	Object
    //   50	1	3	localClassCastException1	ClassCastException
    //   64	1	4	localClassCastException2	ClassCastException
    // Exception table:
    //   from	to	target	type
    //   11	14	50	java/lang/ClassCastException
    //   37	40	64	java/lang/ClassCastException
  }
  
  /* Error */
  public static Object testApply$V(Object first, Object[] argsArray)
  {
    // Byte code:
    //   0: new 666	gnu/kawa/slib/testing$frame0
    //   3: dup
    //   4: invokespecial 667	gnu/kawa/slib/testing$frame0:<init>	()V
    //   7: astore_3
    //   8: aload_3
    //   9: aload_0
    //   10: putfield 670	gnu/kawa/slib/testing$frame0:first	Ljava/lang/Object;
    //   13: aload_3
    //   14: aload_1
    //   15: iconst_0
    //   16: invokestatic 595	gnu/lists/LList:makeList	([Ljava/lang/Object;I)Lgnu/lists/LList;
    //   19: dup
    //   20: astore 4
    //   22: putfield 674	gnu/kawa/slib/testing$frame0:rest	Lgnu/lists/LList;
    //   25: aload_3
    //   26: getfield 670	gnu/kawa/slib/testing$frame0:first	Ljava/lang/Object;
    //   29: invokestatic 677	gnu/kawa/slib/testing:isTestRunner	(Ljava/lang/Object;)Z
    //   32: ifeq +32 -> 64
    //   35: getstatic 261	gnu/kawa/slib/testing:test$Mnrunner$Mncurrent	Lgnu/mapping/LocationProc;
    //   38: invokevirtual 273	gnu/mapping/LocationProc:getValue	()Ljava/lang/Object;
    //   41: aload_3
    //   42: swap
    //   43: putfield 680	gnu/kawa/slib/testing$frame0:saved$Mnrunner$1	Ljava/lang/Object;
    //   46: aload_3
    //   47: getfield 683	gnu/kawa/slib/testing$frame0:lambda$Fn5	Lgnu/expr/ModuleMethod;
    //   50: aload_3
    //   51: getfield 686	gnu/kawa/slib/testing$frame0:lambda$Fn6	Lgnu/expr/ModuleMethod;
    //   54: aload_3
    //   55: getfield 689	gnu/kawa/slib/testing$frame0:lambda$Fn7	Lgnu/expr/ModuleMethod;
    //   58: invokestatic 695	kawa/lib/misc:dynamicWind	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   61: goto +236 -> 297
    //   64: getstatic 261	gnu/kawa/slib/testing:test$Mnrunner$Mncurrent	Lgnu/mapping/LocationProc;
    //   67: invokevirtual 273	gnu/mapping/LocationProc:getValue	()Ljava/lang/Object;
    //   70: astore 4
    //   72: aload 4
    //   74: invokestatic 279	gnu/expr/KawaConvert:isTrue	(Ljava/lang/Object;)Z
    //   77: ifeq +157 -> 234
    //   80: aload 4
    //   82: ldc 13
    //   84: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   87: dup
    //   88: astore 6
    //   90: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   93: invokestatic 312	gnu/kawa/slib/testing:$PcTestRunnerRunList	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   96: astore 5
    //   98: aload_3
    //   99: getfield 674	gnu/kawa/slib/testing$frame0:rest	Lgnu/lists/LList;
    //   102: invokestatic 385	kawa/lib/lists:isNull	(Ljava/lang/Object;)Z
    //   105: ifeq +48 -> 153
    //   108: aload 4
    //   110: ldc 13
    //   112: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   115: dup
    //   116: astore 6
    //   118: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   121: aload 5
    //   123: ldc 83
    //   125: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   128: dup
    //   129: astore 6
    //   131: checkcast 83	gnu/lists/LList
    //   134: invokestatic 181	kawa/lib/lists:reverse	(Lgnu/lists/LList;)Lgnu/lists/LList;
    //   137: invokestatic 143	gnu/kawa/slib/testing:$PcTestRunnerRunList$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   140: getstatic 301	kawa/standard/Scheme:applyToArgs	Lgnu/kawa/functions/ApplyToArgs;
    //   143: aload_3
    //   144: getfield 670	gnu/kawa/slib/testing$frame0:first	Ljava/lang/Object;
    //   147: invokevirtual 307	gnu/mapping/Procedure:apply1	(Ljava/lang/Object;)Ljava/lang/Object;
    //   150: goto +147 -> 297
    //   153: aload 4
    //   155: ldc 13
    //   157: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   160: dup
    //   161: astore 6
    //   163: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   166: aload 5
    //   168: getstatic 140	java/lang/Boolean:TRUE	Ljava/lang/Boolean;
    //   171: if_acmpne +13 -> 184
    //   174: aload_3
    //   175: getfield 670	gnu/kawa/slib/testing$frame0:first	Ljava/lang/Object;
    //   178: invokestatic 699	gnu/lists/LList:list1	(Ljava/lang/Object;)Lgnu/lists/Pair;
    //   181: goto +12 -> 193
    //   184: aload_3
    //   185: getfield 670	gnu/kawa/slib/testing$frame0:first	Ljava/lang/Object;
    //   188: aload 5
    //   190: invokestatic 367	kawa/lib/lists:cons	(Ljava/lang/Object;Ljava/lang/Object;)Lgnu/lists/Pair;
    //   193: invokestatic 143	gnu/kawa/slib/testing:$PcTestRunnerRunList$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   196: getstatic 702	kawa/standard/Scheme:apply	Lgnu/kawa/functions/Apply;
    //   199: getstatic 705	gnu/kawa/slib/testing:test$Mnapply	Lgnu/expr/ModuleMethod;
    //   202: aload_3
    //   203: getfield 674	gnu/kawa/slib/testing$frame0:rest	Lgnu/lists/LList;
    //   206: invokevirtual 483	gnu/mapping/Procedure:apply2	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   209: pop
    //   210: aload 4
    //   212: ldc 13
    //   214: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   217: dup
    //   218: astore 6
    //   220: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   223: aload 5
    //   225: invokestatic 143	gnu/kawa/slib/testing:$PcTestRunnerRunList$Ex	(Lgnu/kawa/slib/testing$test-runner;Ljava/lang/Object;)V
    //   228: getstatic 529	gnu/mapping/Values:empty	Lgnu/mapping/Values;
    //   231: goto +66 -> 297
    //   234: invokestatic 349	gnu/kawa/slib/testing:testRunnerCreate	()Ljava/lang/Object;
    //   237: aload_3
    //   238: swap
    //   239: putfield 708	gnu/kawa/slib/testing$frame0:r	Ljava/lang/Object;
    //   242: getstatic 261	gnu/kawa/slib/testing:test$Mnrunner$Mncurrent	Lgnu/mapping/LocationProc;
    //   245: invokevirtual 273	gnu/mapping/LocationProc:getValue	()Ljava/lang/Object;
    //   248: aload_3
    //   249: swap
    //   250: putfield 711	gnu/kawa/slib/testing$frame0:saved$Mnrunner	Ljava/lang/Object;
    //   253: aload_3
    //   254: getfield 714	gnu/kawa/slib/testing$frame0:lambda$Fn8	Lgnu/expr/ModuleMethod;
    //   257: aload_3
    //   258: getfield 717	gnu/kawa/slib/testing$frame0:lambda$Fn9	Lgnu/expr/ModuleMethod;
    //   261: aload_3
    //   262: getfield 720	gnu/kawa/slib/testing$frame0:lambda$Fn10	Lgnu/expr/ModuleMethod;
    //   265: invokestatic 695	kawa/lib/misc:dynamicWind	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   268: pop
    //   269: getstatic 301	kawa/standard/Scheme:applyToArgs	Lgnu/kawa/functions/ApplyToArgs;
    //   272: aload_3
    //   273: getfield 708	gnu/kawa/slib/testing$frame0:r	Ljava/lang/Object;
    //   276: ldc 13
    //   278: invokestatic 71	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   281: dup
    //   282: astore 5
    //   284: checkcast 13	gnu/kawa/slib/testing$test-runner
    //   287: invokestatic 523	gnu/kawa/slib/testing:testRunnerOnFinal	(Lgnu/kawa/slib/testing$test-runner;)Ljava/lang/Object;
    //   290: aload_3
    //   291: getfield 708	gnu/kawa/slib/testing$frame0:r	Ljava/lang/Object;
    //   294: invokevirtual 483	gnu/mapping/Procedure:apply2	(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   297: areturn
    //   298: new 75	gnu/mapping/WrongType
    //   301: dup_x1
    //   302: swap
    //   303: ldc_w 309
    //   306: iconst_0
    //   307: aload 6
    //   309: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   312: athrow
    //   313: new 75	gnu/mapping/WrongType
    //   316: dup_x1
    //   317: swap
    //   318: ldc -122
    //   320: iconst_0
    //   321: aload 6
    //   323: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   326: athrow
    //   327: new 75	gnu/mapping/WrongType
    //   330: dup_x1
    //   331: swap
    //   332: ldc -80
    //   334: iconst_1
    //   335: aload 6
    //   337: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   340: athrow
    //   341: new 75	gnu/mapping/WrongType
    //   344: dup_x1
    //   345: swap
    //   346: ldc -122
    //   348: iconst_0
    //   349: aload 6
    //   351: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   354: athrow
    //   355: new 75	gnu/mapping/WrongType
    //   358: dup_x1
    //   359: swap
    //   360: ldc -122
    //   362: iconst_0
    //   363: aload 6
    //   365: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   368: athrow
    //   369: new 75	gnu/mapping/WrongType
    //   372: dup_x1
    //   373: swap
    //   374: ldc_w 520
    //   377: iconst_0
    //   378: aload 5
    //   380: invokespecial 81	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   383: athrow
    // Line number table:
    //   Java source line #924	-> byte code offset #0
    //   Java source line #925	-> byte code offset #25
    //   Java source line #926	-> byte code offset #35
    //   Java source line #946	-> byte code offset #35
    //   Java source line #926	-> byte code offset #46
    //   Java source line #950	-> byte code offset #54
    //   Java source line #927	-> byte code offset #64
    //   Java source line #928	-> byte code offset #72
    //   Java source line #929	-> byte code offset #80
    //   Java source line #930	-> byte code offset #98
    //   Java source line #931	-> byte code offset #108
    //   Java source line #932	-> byte code offset #140
    //   Java source line #934	-> byte code offset #153
    //   Java source line #935	-> byte code offset #153
    //   Java source line #936	-> byte code offset #166
    //   Java source line #937	-> byte code offset #196
    //   Java source line #938	-> byte code offset #210
    //   Java source line #939	-> byte code offset #234
    //   Java source line #940	-> byte code offset #242
    //   Java source line #946	-> byte code offset #242
    //   Java source line #940	-> byte code offset #253
    //   Java source line #950	-> byte code offset #261
    //   Java source line #941	-> byte code offset #269
    //   Java source line #929	-> byte code offset #298
    //   Java source line #931	-> byte code offset #313
    //   Java source line #935	-> byte code offset #341
    //   Java source line #938	-> byte code offset #355
    //   Java source line #941	-> byte code offset #369
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	297	0	first	Object
    //   0	297	1	argsArray	Object[]
    //   0	1	2	rest	gnu.lists.LList
    //   7	284	3	$heapFrame	frame0
    //   20	1	4	localLList1	gnu.lists.LList
    //   70	141	4	r	Object
    //   96	283	5	run$Mnlist	Object
    //   88	276	6	localObject1	Object
    //   298	1	8	localClassCastException1	ClassCastException
    //   313	1	9	localClassCastException2	ClassCastException
    //   327	1	10	localClassCastException3	ClassCastException
    //   341	1	11	localClassCastException4	ClassCastException
    //   355	1	12	localClassCastException5	ClassCastException
    //   369	1	13	localClassCastException6	ClassCastException
    // Exception table:
    //   from	to	target	type
    //   90	93	298	java/lang/ClassCastException
    //   118	121	313	java/lang/ClassCastException
    //   131	134	327	java/lang/ClassCastException
    //   163	166	341	java/lang/ClassCastException
    //   220	223	355	java/lang/ClassCastException
    //   284	287	369	java/lang/ClassCastException
  }
  
  public testing()
  {
    gnu.expr.ModuleInfo.register(this);
  }
  
  public void apply(gnu.mapping.CallContext paramCallContext)
  {
    ModuleMethod.applyError();
  }
}
