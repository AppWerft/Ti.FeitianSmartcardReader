package gnu.kawa.slib; import gnu.mapping.Symbol;

public class srfi34 extends gnu.expr.ModuleBody { public static final gnu.expr.ModuleMethod with$Mnexception$Mnhandler; public static final kawa.lang.Macro guard; public static final gnu.expr.ModuleMethod raise; public static final int $Pcprovide$Pcsrfi$Mn34 = 123; public static final Class $Prvt$$Lsraise$Mnobject$Mnexception$Gr; public static final kawa.lang.Macro $Prvt$guard$Mnaux; public static srfi34 $instance; static final gnu.mapping.SimpleSymbol Lit0; static final gnu.mapping.SimpleSymbol Lit1; static final gnu.mapping.SimpleSymbol Lit2; static final kawa.lang.SyntaxRules Lit3; static final gnu.mapping.SimpleSymbol Lit4; static final kawa.lang.SyntaxRules Lit5; private static void $runBody$() { ; gnu.lists.Consumer $result = getInstanceconsumer; }
  static final gnu.mapping.SimpleSymbol Lit6; static final gnu.mapping.SimpleSymbol Lit7; static final gnu.mapping.SimpleSymbol Lit8; static final Object[] Lit9; static final gnu.mapping.SimpleSymbol Lit10; static final gnu.mapping.SimpleSymbol Lit11; static final gnu.lists.PairWithPosition Lit12;
  static { Lit16 = Symbol.valueOf("<raise-object-exception>");Lit14 = Symbol.valueOf("begin");Lit13 = new Object[0];Lit12 = gnu.lists.PairWithPosition.make(srfi34.Lit8 = Symbol.valueOf("temp"), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/srfi34.scm", 274452);Lit11 = Symbol.valueOf("if");Lit10 = Symbol.valueOf("let"); gnu.mapping.SimpleSymbol tmp97_94 = Symbol.valueOf("=>");Lit7 = tmp97_94;(srfi34.Lit9 = new Object[1])[0] = tmp97_94;Lit6 = Symbol.valueOf("else"); Object[] tmp118_115 = new Object[2]; Object[] tmp119_118 = tmp118_115;tmp119_118[0] = Lit6;tmp119_118[1] = Lit7; kawa.lang.SyntaxRule[] tmp135_132 = new kawa.lang.SyntaxRule[7]; kawa.lang.SyntaxRule[] tmp136_135 = tmp135_132;tmp136_135[0] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\f\007L\f\002\f\017\r\027\020\b\b\b", new Object[] { Lit6 }, 3, "srfi34.scm:62"), "\001\001\003", "\021\030\004\t\013\b\025\023", new Object[] { Lit14 }, 1); kawa.lang.SyntaxRule[] tmp183_136 = tmp136_135; Object[] tmp212_209 = new Object[4]; Object[] tmp213_212 = tmp212_209;tmp213_212[0] = Lit10; Object[] tmp219_213 = tmp213_212;tmp219_213[1] = Lit8; Object[] tmp225_219 = tmp219_213;tmp225_219[2] = Lit11;tmp225_219[3] = Lit12;tmp183_136[1] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\f\007<\f\017\f\002\f\027\b\b", Lit9, 3, "srfi34.scm:64"), "\001\001\001", "\021\030\0041\b\021\030\f\b\013\b\021\030\024\021\030\f!\t\023\030\034\b\003", tmp212_209, 0); kawa.lang.SyntaxRule[] tmp241_183 = tmp183_136; Object[] tmp274_271 = new Object[5]; Object[] tmp275_274 = tmp274_271;tmp275_274[0] = Lit10; Object[] tmp281_275 = tmp275_274;tmp281_275[1] = Lit8; Object[] tmp287_281 = tmp281_275;tmp287_281[2] = Lit11; Object[] tmp293_287 = tmp287_281;tmp293_287[3] = Lit12; gnu.mapping.SimpleSymbol tmp306_303 = Symbol.valueOf("guard-aux");Lit4 = tmp306_303;tmp293_287[4] = tmp306_303;tmp241_183[2] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\f\007<\f\017\f\002\f\027\b\f\037\r' \b\b", Lit9, 5, "srfi34.scm:69"), "\001\001\001\001\003", "\021\030\0041\b\021\030\f\b\013\b\021\030\024\021\030\f!\t\023\030\034\b\021\030$\t\003\t\033\b%#", tmp274_271, 1); kawa.lang.SyntaxRule[] tmp316_241 = tmp241_183;tmp316_241[3] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\f\007\034\f\017\b\b", Lit13, 2, "srfi34.scm:74"), "\001\001", "\013", Lit13, 0); kawa.lang.SyntaxRule[] tmp353_316 = tmp316_241; Object[] tmp386_383 = new Object[4]; Object[] tmp387_386 = tmp386_383;tmp387_386[0] = Lit10; Object[] tmp393_387 = tmp387_386;tmp393_387[1] = Lit8; Object[] tmp399_393 = tmp393_387;tmp399_393[2] = Lit11;tmp399_393[3] = Lit4;tmp353_316[4] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\f\007\034\f\017\b\f\027\r\037\030\b\b", Lit13, 4, "srfi34.scm:76"), "\001\001\001\003", "\021\030\0041\b\021\030\f\b\013\b\021\030\024\021\030\f\021\030\f\b\021\030\034\t\003\t\023\b\035\033", tmp386_383, 1); kawa.lang.SyntaxRule[] tmp415_353 = tmp353_316; Object[] tmp448_445 = new Object[2]; Object[] tmp449_448 = tmp448_445;tmp449_448[0] = Lit11;tmp449_448[1] = Lit14;tmp415_353[5] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\f\007L\f\017\f\027\r\037\030\b\b\b", Lit13, 4, "srfi34.scm:81"), "\001\001\001\003", "\021\030\004\t\013A\021\030\f\t\023\b\035\033\b\003", tmp448_445, 1); Object[] tmp499_496 = new Object[3]; Object[] tmp500_499 = tmp499_496;tmp500_499[0] = Lit11; Object[] tmp506_500 = tmp500_499;tmp506_500[1] = Lit14;tmp506_500[2] = Lit4;tmp415_353[6] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\f\007L\f\017\f\027\r\037\030\b\b\f'\r/(\b\b", Lit13, 6, "srfi34.scm:85"), "\001\001\001\003\001\003", "\021\030\004\t\013A\021\030\f\t\023\b\035\033\b\021\030\024\t\003\t#\b-+", tmp499_496, 1);Lit5 = new kawa.lang.SyntaxRules(tmp118_115, tmp135_132, 6, Lit4); kawa.lang.SyntaxRule[] tmp544_541 = new kawa.lang.SyntaxRule[1]; Object[] tmp578_575 = new Object[8]; Object[] tmp579_578 = tmp578_575;tmp579_578[0] = Symbol.valueOf("try-catch"); Object[] tmp588_579 = tmp579_578;tmp588_579[1] = Lit14; Object[] tmp594_588 = tmp588_579;tmp594_588[2] = Lit15; Object[] tmp600_594 = tmp594_588;tmp600_594[3] = Symbol.valueOf("<java.lang.Throwable>"); Object[] tmp609_600 = tmp600_594;tmp609_600[4] = Lit10; Object[] tmp615_609 = tmp609_600;tmp615_609[5] = gnu.lists.PairWithPosition.make(gnu.lists.PairWithPosition.make(Lit11, gnu.lists.PairWithPosition.make(gnu.lists.PairWithPosition.make(Symbol.valueOf("instance?"), gnu.lists.PairWithPosition.make(Lit15, gnu.lists.PairWithPosition.make(Lit16, gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/srfi34.scm", 110614), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/srfi34.scm", 110611), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/srfi34.scm", 110600), gnu.lists.PairWithPosition.make(gnu.lists.PairWithPosition.make(Symbol.valueOf("field"), gnu.lists.PairWithPosition.make(gnu.lists.PairWithPosition.make(Symbol.valueOf("as"), gnu.lists.PairWithPosition.make(Lit16, Lit17, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/srfi34.scm", 114707), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/srfi34.scm", 114703), gnu.lists.PairWithPosition.make(gnu.lists.PairWithPosition.make(Symbol.valueOf("quote"), gnu.lists.PairWithPosition.make(Symbol.valueOf("value"), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/srfi34.scm", 114737), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/srfi34.scm", 114737), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/srfi34.scm", 114736), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/srfi34.scm", 114703), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/srfi34.scm", 114696), Lit17, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/srfi34.scm", 114696), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/srfi34.scm", 110600), "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/srfi34.scm", 110596), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/srfi34.scm", 110596); Object[] tmp790_615 = tmp615_609;tmp790_615[6] = Lit4;tmp790_615[7] = gnu.lists.PairWithPosition.make(Symbol.valueOf("primitive-throw"), Lit17, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/srfi34.scm", 122897);tmp544_541[0] = new kawa.lang.SyntaxRule(new kawa.lang.SyntaxPattern("\f\030\034\f\007\013\023", Lit13, 3, "srfi34.scm:22"), "\001\000\000", "\021\030\004!\021\030\f\022\b\021\030\024\021\030\034\b\021\030$)\b\t\003\030,\b\021\0304\021\030<\n", tmp578_575, 0);Lit3 = new kawa.lang.SyntaxRules(Lit13, tmp544_541, 3, srfi34.Lit2 = Symbol.valueOf("guard"));Lit1 = Symbol.valueOf("raise");Lit0 = Symbol.valueOf("with-exception-handler");$instance = new srfi34();$Prvt$$Lsraise$Mnobject$Mnexception$Gr = raise-object-exception.class;srfi34 localSrfi34 = $instance;with$Mnexception$Mnhandler = new gnu.expr.ModuleMethod(localSrfi34, 1, Lit0, 8194);raise = new gnu.expr.ModuleMethod(localSrfi34, 2, Lit1, 4097);guard = kawa.lang.Macro.make(Lit2, Lit3, "gnu.kawa.slib.srfi34");$Prvt$guard$Mnaux = kawa.lang.Macro.make(Lit4, Lit5, "gnu.kawa.slib.srfi34");$runBody$(); } static final Object[] Lit13; static final gnu.mapping.SimpleSymbol Lit14; static final gnu.mapping.SimpleSymbol Lit15; static final gnu.mapping.SimpleSymbol Lit16; static final gnu.lists.PairWithPosition Lit17 = gnu.lists.PairWithPosition.make(srfi34.Lit15 = Symbol.valueOf("ex"), gnu.lists.LList.Empty, "/mnt/hgfs/trunk/kawaForAndroid/kawa-2.4/gnu/kawa/slib/srfi34.scm", 114732);
  




  public int match2(gnu.expr.ModuleMethod paramModuleMethod, Object paramObject1, Object paramObject2, gnu.mapping.CallContext paramCallContext)
  {
    if (selector == 1) { value1 = paramObject1;value2 = paramObject2;proc = paramModuleMethod;pc = 2;return 0; } return super.match2(paramModuleMethod, paramObject1, paramObject2, paramCallContext); } public Object apply2(gnu.expr.ModuleMethod paramModuleMethod, Object paramObject1, Object paramObject2) { if (selector == 1) return withExceptionHandler(paramObject1, paramObject2); return super.apply2(paramModuleMethod, paramObject1, paramObject2); }
  
  public static Object withExceptionHandler(Object handler, Object thunk) { Object localObject; try { raise-object-exception ex; localObject = kawa.standard.Scheme.applyToArgs.apply1(thunk);
    } catch (raise-object-exception localRaise-object-exception1) { localObject = kawa.standard.Scheme.applyToArgs.apply2(handler, value);
    } catch (Throwable ex) { localObject = kawa.standard.Scheme.applyToArgs.apply2(handler, ex); } return localObject; }
  
  public int match1(gnu.expr.ModuleMethod paramModuleMethod, Object paramObject, gnu.mapping.CallContext paramCallContext) { if (selector == 2) { value1 = paramObject;proc = paramModuleMethod;pc = 1;return 0; } return super.match1(paramModuleMethod, paramObject, paramCallContext); } public Object apply1(gnu.expr.ModuleMethod paramModuleMethod, Object paramObject) { if (selector == 2) return raise(paramObject); return super.apply1(paramModuleMethod, paramObject); }
  public static gnu.bytecode.Type.NeverReturns raise(Object obj) { throw new raise-object-exception(obj); }
  
  public srfi34()
  {
    gnu.expr.ModuleInfo.register(this);
  }
  
  public void apply(gnu.mapping.CallContext paramCallContext)
  {
    gnu.expr.ModuleMethod.applyError();
  }
}
