package kawa.lib; import gnu.expr.ApplyExp;

public class compile_map extends gnu.expr.ModuleBody { private static void $runBody$() { ; gnu.lists.Consumer $result = getInstanceconsumer;
  }
  








  public static ScanHelper scannerFor(gnu.expr.Expression exp, gnu.bytecode.Type etype, gnu.expr.Compilation comp)
  {
    gnu.bytecode.Type stype = exp.getType(); void 
    
      tmp22_19 = new ListScanner();2219comp = comp;gnu.bytecode.Type localType1 = stype;gnu.bytecode.ArrayType localArrayType = (gnu.bytecode.ArrayType)localType1;
    
    gnu.bytecode.Type etype = localArrayType.getComponentType(); void 
      tmp62_59 = new ArrayScanner();6259comp = comp; void tmp67_62 = tmp62_59;6762elementType = etype; void 
    
      tmp96_93 = new StringScanner();9693comp = comp; void 
    

      tmp137_134 = new VectorScanner();137134comp = comp; void 
    
      tmp165_162 = new IterableScanner();165162comp = comp; void tmp170_165 = tmp165_162;170165useGeneric = false; void 
    
      tmp185_182 = new IterableScanner();185182comp = comp; void tmp190_185 = tmp185_182;190185useGeneric = (stype.isSubtype(gnu.bytecode.Type.make(Lit3)) ? tmp170_165 : (stype.isSubtype(gnu.bytecode.Type.make(Lit1))) && (stype.isSubtype(gnu.bytecode.Type.make(Lit2))) ? tmp137_134 : stype.isSubtype(gnu.bytecode.Type.make(Lit0)) ? tmp96_93 : (localType1 instanceof gnu.bytecode.ArrayType) ? tmp67_62 : stype.isSubtype(gnu.kawa.lispexpr.LangObjType.listType) ? tmp22_19 : true);return tmp190_185;
  }
  




  public static final Class Convert;
  



  public static final Class FVector;
  



  public static final Class ScanHelper;
  



  public static final gnu.expr.ModuleMethod scanner$Mnfor;
  



  public static final Class MapHelper;
  



  public static final gnu.expr.ModuleMethod stringCursorForEachValidateApply;
  



  public static final gnu.expr.ModuleMethod stringForEach1ValidateApply;
  



  public static final Class StringScanner;
  



  public static final gnu.expr.ModuleMethod stringForEachValidateApply;
  



  public static final Class IterableScanner;
  



  public static final Class ListScanner;
  



  public static final Class ListMapHelper;
  



  public static final gnu.expr.ModuleMethod listForEachValidateApply;
  



  public static final gnu.expr.ModuleMethod listMapValidateApply;
  



  public static final Class ArrayScanner;
  



  public static final Class VectorScanner;
  



  public static final gnu.expr.ModuleMethod vectorForEachValidateApply;
  



  public static final gnu.expr.ModuleMethod vectorMapValidateApply;
  



  public static final gnu.expr.ModuleMethod validate$Mngeneric$Mnfor$Mneach;
  



  static final Class Lit0;
  



  static final Class Lit1;
  



  static final Class Lit2;
  



  static final Class Lit3;
  



  static final gnu.math.IntNum Lit4;
  



  static final gnu.math.IntNum Lit5;
  



  static final gnu.math.IntNum Lit6;
  



  static final gnu.math.IntNum Lit7;
  



  static final gnu.mapping.SimpleSymbol Lit8;
  



  static final gnu.mapping.SimpleSymbol Lit9;
  



  static final gnu.mapping.SimpleSymbol Lit10;
  



  static final Class Lit11;
  



  static final gnu.mapping.SimpleSymbol Lit12;
  



  static final gnu.bytecode.ClassType Lit13;
  



  static final gnu.mapping.SimpleSymbol Lit14;
  



  static final gnu.mapping.SimpleSymbol Lit15;
  



  static final gnu.mapping.SimpleSymbol Lit16;
  



  static final Class Lit17;
  



  static final gnu.mapping.SimpleSymbol Lit18;
  



  static final gnu.mapping.SimpleSymbol Lit19;
  



  static final gnu.bytecode.ClassType Lit20;
  



  static final gnu.mapping.SimpleSymbol Lit21;
  



  static final gnu.mapping.SimpleSymbol Lit22;
  



  static final gnu.mapping.SimpleSymbol Lit23;
  



  public static compile_map $instance;
  



  static final gnu.mapping.SimpleSymbol Lit24;
  



  static final gnu.mapping.SimpleSymbol Lit25;
  



  static final gnu.mapping.SimpleSymbol Lit26;
  



  static final gnu.mapping.SimpleSymbol Lit27;
  


  static final gnu.mapping.SimpleSymbol Lit28;
  


  static final gnu.mapping.SimpleSymbol Lit29;
  


  static final gnu.mapping.SimpleSymbol Lit30;
  


  static final gnu.mapping.SimpleSymbol Lit31;
  


  static final gnu.mapping.SimpleSymbol Lit32 = gnu.mapping.Symbol.valueOf("validate-generic-for-each");
  


  public int match4(gnu.expr.ModuleMethod paramModuleMethod, Object paramObject1, Object paramObject2, Object paramObject3, Object paramObject4, gnu.mapping.CallContext paramCallContext)
  {
    switch (selector) {case 8:  Object tmp56_53 = gnu.mapping.Promise.force(paramObject1, ApplyExp.class);
      






































































































































































































































































































      if (!(tmp56_53 instanceof ApplyExp)) return -786431; value1 = tmp56_53; Object tmp78_75 = gnu.mapping.Promise.force(paramObject2, gnu.expr.InlineCalls.class); if (!(tmp78_75 instanceof gnu.expr.InlineCalls)) return -786430; value2 = tmp78_75; Object tmp101_98 = gnu.mapping.Promise.force(paramObject3, gnu.bytecode.Type.class); if (!(tmp101_98 instanceof gnu.bytecode.Type)) return -786429; value3 = tmp101_98; Object tmp125_122 = gnu.mapping.Promise.force(paramObject4, gnu.mapping.Procedure.class); if (!(tmp125_122 instanceof gnu.mapping.Procedure)) return -786428; value4 = tmp125_122;proc = paramModuleMethod;pc = 4;return 0;
    case 7: 
      Object tmp161_158 = gnu.mapping.Promise.force(paramObject1, ApplyExp.class);
      































































































































































































































































































      if (!(tmp161_158 instanceof ApplyExp)) return -786431; value1 = tmp161_158; Object tmp183_180 = gnu.mapping.Promise.force(paramObject2, gnu.expr.InlineCalls.class); if (!(tmp183_180 instanceof gnu.expr.InlineCalls)) return -786430; value2 = tmp183_180; Object tmp206_203 = gnu.mapping.Promise.force(paramObject3, gnu.bytecode.Type.class); if (!(tmp206_203 instanceof gnu.bytecode.Type)) return -786429; value3 = tmp206_203; Object tmp230_227 = gnu.mapping.Promise.force(paramObject4, gnu.mapping.Procedure.class); if (!(tmp230_227 instanceof gnu.mapping.Procedure)) return -786428; value4 = tmp230_227;proc = paramModuleMethod;pc = 4;return 0;
    case 6: 
      Object tmp266_263 = gnu.mapping.Promise.force(paramObject1, ApplyExp.class);
      
















































































































































































































































      if (!(tmp266_263 instanceof ApplyExp)) return -786431; value1 = tmp266_263; Object tmp288_285 = gnu.mapping.Promise.force(paramObject2, gnu.expr.InlineCalls.class); if (!(tmp288_285 instanceof gnu.expr.InlineCalls)) return -786430; value2 = tmp288_285; Object tmp311_308 = gnu.mapping.Promise.force(paramObject3, gnu.bytecode.Type.class); if (!(tmp311_308 instanceof gnu.bytecode.Type)) return -786429; value3 = tmp311_308; Object tmp335_332 = gnu.mapping.Promise.force(paramObject4, gnu.mapping.Procedure.class); if (!(tmp335_332 instanceof gnu.mapping.Procedure)) return -786428; value4 = tmp335_332;proc = paramModuleMethod;pc = 4;return 0;
    case 5: 
      Object tmp371_368 = gnu.mapping.Promise.force(paramObject1, ApplyExp.class);
      











































































































































































































































      if (!(tmp371_368 instanceof ApplyExp)) return -786431; value1 = tmp371_368; Object tmp393_390 = gnu.mapping.Promise.force(paramObject2, gnu.expr.InlineCalls.class); if (!(tmp393_390 instanceof gnu.expr.InlineCalls)) return -786430; value2 = tmp393_390; Object tmp416_413 = gnu.mapping.Promise.force(paramObject3, gnu.bytecode.Type.class); if (!(tmp416_413 instanceof gnu.bytecode.Type)) return -786429; value3 = tmp416_413; Object tmp440_437 = gnu.mapping.Promise.force(paramObject4, gnu.mapping.Procedure.class); if (!(tmp440_437 instanceof gnu.mapping.Procedure)) return -786428; value4 = tmp440_437;proc = paramModuleMethod;pc = 4;return 0;
    case 4: 
      Object tmp476_473 = gnu.mapping.Promise.force(paramObject1, ApplyExp.class);
      































































































































      if (!(tmp476_473 instanceof ApplyExp)) return -786431; value1 = tmp476_473; Object tmp498_495 = gnu.mapping.Promise.force(paramObject2, gnu.expr.InlineCalls.class); if (!(tmp498_495 instanceof gnu.expr.InlineCalls)) return -786430; value2 = tmp498_495; Object tmp521_518 = gnu.mapping.Promise.force(paramObject3, gnu.bytecode.Type.class); if (!(tmp521_518 instanceof gnu.bytecode.Type)) return -786429; value3 = tmp521_518; Object tmp545_542 = gnu.mapping.Promise.force(paramObject4, gnu.mapping.Procedure.class); if (!(tmp545_542 instanceof gnu.mapping.Procedure)) return -786428; value4 = tmp545_542;proc = paramModuleMethod;pc = 4;return 0;
    case 3: 
      Object tmp581_578 = gnu.mapping.Promise.force(paramObject1, ApplyExp.class);
      
















































































      if (!(tmp581_578 instanceof ApplyExp)) return -786431; value1 = tmp581_578; Object tmp603_600 = gnu.mapping.Promise.force(paramObject2, gnu.expr.InlineCalls.class); if (!(tmp603_600 instanceof gnu.expr.InlineCalls)) return -786430; value2 = tmp603_600; Object tmp626_623 = gnu.mapping.Promise.force(paramObject3, gnu.bytecode.Type.class); if (!(tmp626_623 instanceof gnu.bytecode.Type)) return -786429; value3 = tmp626_623; Object tmp650_647 = gnu.mapping.Promise.force(paramObject4, gnu.mapping.Procedure.class); if (!(tmp650_647 instanceof gnu.mapping.Procedure)) return -786428; value4 = tmp650_647;proc = paramModuleMethod;pc = 4;return 0;
    case 2: 
      Object tmp686_683 = gnu.mapping.Promise.force(paramObject1, ApplyExp.class);
      









































      if (!(tmp686_683 instanceof ApplyExp)) return -786431; value1 = tmp686_683; Object tmp708_705 = gnu.mapping.Promise.force(paramObject2, gnu.expr.InlineCalls.class); if (!(tmp708_705 instanceof gnu.expr.InlineCalls)) return -786430; value2 = tmp708_705; Object tmp731_728 = gnu.mapping.Promise.force(paramObject3, gnu.bytecode.Type.class); if (!(tmp731_728 instanceof gnu.bytecode.Type)) return -786429; value3 = tmp731_728; Object tmp755_752 = gnu.mapping.Promise.force(paramObject4, gnu.mapping.Procedure.class); if (!(tmp755_752 instanceof gnu.mapping.Procedure)) return -786428; value4 = tmp755_752;proc = paramModuleMethod;pc = 4;return 0; } return super.match4(paramModuleMethod, paramObject1, paramObject2, paramObject3, paramObject4, paramCallContext); }
  
  public static gnu.expr.Expression stringCursorForEachValidateApply(ApplyExp exp, gnu.expr.InlineCalls visitor, gnu.bytecode.Type required, gnu.mapping.Procedure proc) { gnu.expr.Compilation localCompilation1 = kawa.lib.kawa.expressions.getCompilation();
    gnu.expr.Expression func = exp.getArg(0);
    gnu.expr.Compilation comp; comp.letStart();
    
    gnu.expr.Declaration seqDecl = comp.letVariable(null, gnu.kawa.lispexpr.LangObjType.stringType, exp.getArg(1));
    


    gnu.expr.Declaration idxDecl = comp.letVariable(null, gnu.kawa.lispexpr.LangPrimType.stringCursorType, exp.getArgCount() > 2 ? exp.getArg(2) : kawa.lib.kawa.expressions.applyExp$V(gnu.kawa.functions.Convert.as, new Object[] { gnu.kawa.lispexpr.LangPrimType.stringCursorType, Lit4 }));
    


    gnu.expr.Declaration endDecl = comp.letVariable(null, gnu.kawa.lispexpr.LangPrimType.stringCursorType, exp.getArgCount() > 3 ? exp.getArg(3) : kawa.lib.kawa.expressions.applyExp$V(kawa.lib.kawa.string-cursors.string$Mncursor$Mnend, new Object[] { seqDecl }));
    comp.letEnter();
    
    gnu.expr.LambdaExp loopLambda = comp.loopStart();
    comp.loopEnter();
    


    comp.letStart();
    

    gnu.expr.Declaration chDecl = comp.letVariable(null, gnu.kawa.lispexpr.LangPrimType.characterType, kawa.lib.kawa.expressions.applyExp$V(kawa.lib.kawa.string-cursors.string$Mncursor$Mnref, new Object[] { seqDecl, idxDecl }));
    
    comp.letEnter();
    







    gnu.expr.Expression ex = exp.isSimple(2, 4) ? comp.letDone(comp.loopDone(kawa.lib.kawa.expressions.ifExp(kawa.lib.kawa.expressions.applyExp$V(kawa.lib.kawa.string-cursors.string$Mncursor$Ls$Qu, new Object[] { idxDecl, endDecl }), comp.letDone(kawa.lib.kawa.expressions.beginExp$V(new Object[] {kawa.lib.kawa.expressions.applyExp$V(func, new Object[] { chDecl }), kawa.lib.kawa.expressions.setExp(idxDecl, kawa.lib.kawa.expressions.applyExp$V(gnu.kawa.functions.Convert.as, new Object[] { gnu.kawa.lispexpr.LangPrimType.stringCursorType, kawa.lib.kawa.expressions.applyExp$V(gnu.kawa.functions.AddOp.$Pl, new Object[] { kawa.lib.kawa.expressions.applyExp$V(gnu.kawa.functions.Convert.as, new Object[] { gnu.bytecode.Type.int_type, idxDecl }), kawa.lib.kawa.expressions.ifExp(kawa.lib.kawa.expressions.applyExp$V(kawa.standard.Scheme.numGrt, new Object[] { kawa.lib.kawa.expressions.applyExp$V(gnu.kawa.functions.Convert.as, new Object[] { gnu.bytecode.Type.int_type, chDecl }), Lit5 }), Lit6, Lit7) }) })), comp.loopRepeat(loopLambda, new gnu.expr.Expression[0]) }))))) : null;exp
    































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































      .visitArgs(visitor);return ex == exp ? exp : ex == null ? null : 
    

      visitor.visit(ex.maybeSetLine(exp), required);
  }
  


































  public static gnu.expr.Expression stringForEach1ValidateApply(ApplyExp exp, gnu.expr.InlineCalls visitor, gnu.bytecode.Type required, gnu.mapping.Procedure proc)
  {
    gnu.expr.Compilation comp = kawa.lib.kawa.expressions.getCompilation();
    comp.letStart();
    gnu.expr.Declaration decl1 = comp.letVariable(null, gnu.kawa.lispexpr.LangObjType.stringType, exp.getArg(1));
    gnu.expr.Declaration decl2 = comp.letVariable(null, gnu.bytecode.Type.int_type, exp.getArg(2));
    comp.letEnter();
    









    gnu.expr.Expression ex = exp.isSimple(3, 4) ? comp.letDone(kawa.lib.kawa.expressions.applyExp$V(kawa.lib.kawa.string-cursors.string$Mncursor$Mnfor$Mneach, new Object[] {exp.getArg(0), decl1, kawa.lib.kawa.expressions.applyExp$V(kawa.lib.kawa.string-cursors.string$Mncursor$Mnnext, new Object[] { decl1, kawa.lib.kawa.expressions.applyExp$V(gnu.kawa.functions.Convert.as, new Object[] { gnu.kawa.lispexpr.LangPrimType.stringCursorType, Lit4 }), decl2 }), exp.getArgCount() < 4 ? kawa.lib.kawa.expressions.applyExp$V(kawa.lib.kawa.string-cursors.string$Mncursor$Mnend, new Object[] { decl1 }) : kawa.lib.kawa.expressions.applyExp$V(kawa.lib.kawa.string-cursors.string$Mncursor$Mnnext, new Object[] { decl1, kawa.lib.kawa.expressions.applyExp$V(gnu.kawa.functions.Convert.as, new Object[] { gnu.kawa.lispexpr.LangPrimType.stringCursorType, Lit4 }), exp.getArg(3) }) })) : exp.isSimple(2, 2) ? kawa.lib.kawa.expressions.applyExp$V(kawa.lib.kawa.string-cursors.string$Mncursor$Mnfor$Mneach, new Object[] { exp.getArg(0), exp.getArg(1) }) : null;exp
    









































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































      .visitArgs(visitor);return ex == exp ? exp : ex == null ? null : 
    

      visitor.visit(ex.maybeSetLine(exp), required);
  }
  








































  public static gnu.expr.Expression stringForEachValidateApply(ApplyExp exp, gnu.expr.InlineCalls visitor, gnu.bytecode.Type required, gnu.mapping.Procedure proc)
  {
    if (exp.isSimple(3, 4)) {
      gnu.expr.Expression e2 = kawa.lib.kawa.expressions.visitExp(exp.getArg(2));
      exp.setArg(2, e2);
      gnu.bytecode.Type t2 = e2.getType();
      int integer$Mncompat = gnu.kawa.lispexpr.LangObjType.integerType.isCompatibleWithValue(t2);
      boolean x = integer$Mncompat > 0; if (x ? x : 
        (integer$Mncompat >= 0) && 
        (gnu.kawa.lispexpr.LangObjType.stringType.isCompatibleWithValue(t2) < 0)) {
        int i = 4;gnu.expr.Expression localExpression1 = exp.getArg(0);gnu.expr.Expression localExpression2 = exp.getArg(1);
        gnu.expr.Expression localExpression3 = exp.getArg(2);
        gnu.lists.FVector localFVector = exp.getArgCount() == 4 ? gnu.lists.FVector.makeConstant(new Object[] { exp.getArg(3) }) : gnu.lists.FVector.makeConstant(new Object[0]); int j; i = (j = gnu.kawa.functions.MakeSplice.count(localFVector)) + i;int k = 4;gnu.kawa.functions.MakeSplice.copyTo(new Object[] { strings.srfi$Mn13$Mnstring$Mnfor$Mneach, localExpression1, localExpression2, localExpression3 }, k, j, localFVector);k += j; } } try { Object localObject; tmpTernaryOp = ((gnu.expr.Expression)(localObject = gnu.mapping.Promise.force(kawa.lib.kawa.expressions.apply$Mnexp.applyN(tmp185_180), gnu.expr.Expression.class));
      break label386;
      if (exp.isSimple(2)) {
        boolean x = exp.getArgCount() == 2; gnu.bytecode.Type t2; boolean x; if (x) { if (!x) break label385;
        } else { boolean x = exp.getArgCount() > 4;
          if (x) { if (!x)
              break label385;
          } else { gnu.expr.Expression e2 = kawa.lib.kawa.expressions.visitExp(exp.getArg(2));
            exp.setArg(2, e2);
            t2 = e2.getType();
            string$Mncompat = gnu.kawa.lispexpr.LangObjType.stringType.isCompatibleWithValue(t2);
            x = string$Mncompat > 0;
          }
        }
        exp.getArgCount();
        kawa.lib.kawa.expressions.getCompilation(); }
      label385:
      label386:
      gnu.expr.Expression ex = x ? x : (string$Mncompat >= 0) && (gnu.kawa.lispexpr.LangObjType.integerType.isCompatibleWithValue(t2) < 0) ? validateGenericForEach(exp, required, new MapHelper() {
        public ScanHelper makeScanner(gnu.expr.Expression exp, gnu.bytecode.Type etype) { void tmp7_4 = new StringScanner();74comp = comp;return tmp7_4;
        }
      }) : null;
      

















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































      exp.visitArgs(visitor);return ex == exp ? exp : ex == null ? null : 
      

        visitor.visit(ex.maybeSetLine(exp), required);
    }
    catch (ClassCastException localClassCastException)
    {
      int string$Mncompat;
      throw new gnu.mapping.WrongType(localClassCastException, "ex", -2, string$Mncompat);
    }
  }
  






























































































  public static gnu.expr.Expression listForEachValidateApply(ApplyExp exp, gnu.expr.InlineCalls visitor, gnu.bytecode.Type required, gnu.mapping.Procedure proc)
  {
    gnu.expr.Expression ex = exp.isSimple(2) ? validateGenericForEach(exp, required, new ListMapHelper()) : null;exp
    































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































      .visitArgs(visitor);return ex == exp ? exp : ex == null ? null : 
    

      visitor.visit(ex.maybeSetLine(exp), required);
  }
  
  public static gnu.expr.Expression listMapValidateApply(ApplyExp exp, gnu.expr.InlineCalls visitor, gnu.bytecode.Type required, gnu.mapping.Procedure proc)
  {
    void tmp17_14 = new ListMapHelper();1714collecting = true;gnu.expr.Expression ex = exp.isSimple(2) ? validateGenericForEach(exp, required, tmp17_14) : null;exp
    


























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































      .visitArgs(visitor);return ex == exp ? exp : ex == null ? null : 
    

      visitor.visit(ex.maybeSetLine(exp), required);
  }
  












































  public static gnu.expr.Expression vectorForEachValidateApply(ApplyExp exp, gnu.expr.InlineCalls visitor, gnu.bytecode.Type required, gnu.mapping.Procedure proc)
  {
    gnu.expr.Expression ex = exp.isSimple(2) ? validateGenericForEach(exp, required, new MapHelper() {
      public ScanHelper makeScanner(gnu.expr.Expression exp, gnu.bytecode.Type etype) { void tmp7_4 = new VectorScanner();74comp = comp;return tmp7_4; } }) : null;exp
    








































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































      .visitArgs(visitor);return ex == exp ? exp : ex == null ? null : 
    

      visitor.visit(ex.maybeSetLine(exp), required);
  }
  

  public static gnu.expr.Expression vectorMapValidateApply(ApplyExp exp, gnu.expr.InlineCalls visitor, gnu.bytecode.Type required, gnu.mapping.Procedure proc)
  {
    gnu.expr.Expression ex = exp.isSimple(2) ? validateGenericForEach(exp, required, new MapHelper() { public gnu.expr.Declaration idxDecl;
      public gnu.expr.Declaration resultDecl;
      
      public ScanHelper makeScanner(gnu.expr.Expression exp, gnu.bytecode.Type etype) { return compile_map.scannerFor(exp, etype, comp);
      }
      
      /* Error */
      public void initialize(ApplyExp exp, gnu.expr.Compilation comp)
      {
        // Byte code:
        //   0: aload_0
        //   1: getfield 16	kawa/lib/MapHelper:scanners	[Lkawa/lib/ScanHelper;
        //   4: arraylength
        //   5: iconst_1
        //   6: if_icmpne +98 -> 104
        //   9: aload_0
        //   10: getfield 16	kawa/lib/MapHelper:scanners	[Lkawa/lib/ScanHelper;
        //   13: iconst_0
        //   14: aaload
        //   15: astore_3
        //   16: aload_3
        //   17: instanceof 18
        //   20: ifeq +84 -> 104
        //   23: aload_3
        //   24: checkcast 18	kawa/lib/VectorScanner
        //   27: astore 4
        //   29: aload_0
        //   30: aload 4
        //   32: getfield 22	kawa/lib/VectorScanner:idxDecl	Lgnu/expr/Declaration;
        //   35: putfield 25	kawa/lib/compile_map$2:idxDecl	Lgnu/expr/Declaration;
        //   38: aload_0
        //   39: aload_2
        //   40: aconst_null
        //   41: getstatic 29	kawa/lib/compile_map:FVector	Ljava/lang/Class;
        //   44: invokestatic 35	gnu/bytecode/Type:make	(Ljava/lang/Class;)Lgnu/bytecode/Type;
        //   47: getstatic 29	kawa/lib/compile_map:FVector	Ljava/lang/Class;
        //   50: iconst_1
        //   51: anewarray 37	java/lang/Object
        //   54: dup
        //   55: iconst_0
        //   56: getstatic 43	gnu/kawa/functions/Convert:as	Lgnu/kawa/functions/Convert;
        //   59: iconst_2
        //   60: anewarray 37	java/lang/Object
        //   63: dup
        //   64: iconst_0
        //   65: getstatic 47	gnu/bytecode/Type:int_type	Lgnu/bytecode/PrimType;
        //   68: aastore
        //   69: dup
        //   70: iconst_1
        //   71: aload 4
        //   73: getfield 50	kawa/lib/VectorScanner:endDecl	Lgnu/expr/Declaration;
        //   76: aastore
        //   77: invokestatic 56	kawa/lib/kawa/expressions:applyExp$V	(Ljava/lang/Object;[Ljava/lang/Object;)Lgnu/expr/ApplyExp;
        //   80: aastore
        //   81: invokestatic 60	kawa/lib/kawa/expressions:applyToArgsExp$V	(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
        //   84: ldc 62
        //   86: invokestatic 68	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
        //   89: dup
        //   90: astore 5
        //   92: checkcast 62	gnu/expr/Expression
        //   95: invokevirtual 84	gnu/expr/Compilation:letVariable	(Ljava/lang/Object;Lgnu/bytecode/Type;Lgnu/expr/Expression;)Lgnu/expr/Declaration;
        //   98: putfield 87	kawa/lib/compile_map$2:resultDecl	Lgnu/expr/Declaration;
        //   101: goto +38 -> 139
        //   104: aload_0
        //   105: aload_2
        //   106: aconst_null
        //   107: getstatic 29	kawa/lib/compile_map:FVector	Ljava/lang/Class;
        //   110: invokestatic 35	gnu/bytecode/Type:make	(Ljava/lang/Class;)Lgnu/bytecode/Type;
        //   113: getstatic 29	kawa/lib/compile_map:FVector	Ljava/lang/Class;
        //   116: iconst_0
        //   117: anewarray 37	java/lang/Object
        //   120: invokestatic 60	kawa/lib/kawa/expressions:applyToArgsExp$V	(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
        //   123: ldc 62
        //   125: invokestatic 68	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
        //   128: dup
        //   129: astore_3
        //   130: checkcast 62	gnu/expr/Expression
        //   133: invokevirtual 84	gnu/expr/Compilation:letVariable	(Ljava/lang/Object;Lgnu/bytecode/Type;Lgnu/expr/Expression;)Lgnu/expr/Declaration;
        //   136: putfield 87	kawa/lib/compile_map$2:resultDecl	Lgnu/expr/Declaration;
        //   139: return
        //   140: new 72	gnu/mapping/WrongType
        //   143: dup_x1
        //   144: swap
        //   145: ldc 74
        //   147: iconst_4
        //   148: aload 5
        //   150: invokespecial 78	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
        //   153: athrow
        //   154: new 72	gnu/mapping/WrongType
        //   157: dup_x1
        //   158: swap
        //   159: ldc 74
        //   161: iconst_4
        //   162: aload_3
        //   163: invokespecial 78	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
        //   166: athrow
        // Line number table:
        //   Java source line #304	-> byte code offset #0
        //   Java source line #305	-> byte code offset #0
        //   Java source line #307	-> byte code offset #29
        //   Java source line #309	-> byte code offset #38
        //   Java source line #310	-> byte code offset #39
        //   Java source line #311	-> byte code offset #41
        //   Java source line #312	-> byte code offset #47
        //   Java source line #313	-> byte code offset #56
        //   Java source line #316	-> byte code offset #104
        //   Java source line #317	-> byte code offset #105
        //   Java source line #318	-> byte code offset #113
        //   Java source line #312	-> byte code offset #140
        //   Java source line #318	-> byte code offset #154
        // Local variable table:
        //   start	length	slot	name	signature
        //   0	140	0	this	2
        //   0	139	1	exp	ApplyExp
        //   0	139	2	comp	gnu.expr.Compilation
        //   15	148	3	localObject1	Object
        //   27	45	4	localVectorScanner	VectorScanner
        //   90	59	5	localObject2	Object
        //   140	1	6	localClassCastException1	ClassCastException
        //   154	1	7	localClassCastException2	ClassCastException
        // Exception table:
        //   from	to	target	type
        //   92	95	140	java/lang/ClassCastException
        //   130	133	154	java/lang/ClassCastException
      }
      
      public gnu.expr.Expression doCollect(gnu.expr.Expression value)
      {
        return idxDecl != null ? kawa.lib.kawa.expressions.applyExp$V(gnu.kawa.reflect.Invoke.invoke, new Object[] { resultDecl, compile_map.Lit8, idxDecl, value }) : kawa.lib.kawa.expressions.applyExp$V(gnu.kawa.reflect.Invoke.invoke, new Object[] { resultDecl, compile_map.Lit9, value }); }
      
      public gnu.expr.Expression collectResult(gnu.expr.Expression result) { return kawa.lib.kawa.expressions.beginExp$V(new Object[] { result, resultDecl }); } }) : null;exp
    








































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































      .visitArgs(visitor);return ex == exp ? exp : ex == null ? null : 
    

      visitor.visit(ex.maybeSetLine(exp), required); }
  
  public static gnu.expr.LetExp validateGenericForEach(ApplyExp exp, gnu.bytecode.Type required, MapHelper helper) { frame $heapFrame = new frame();helper = helper;
    

    int i = exp.getArgCount() - 1;
    gnu.expr.Compilation localCompilation1 = kawa.lib.kawa.expressions.getCompilation();
    func = exp.getArg(0);
    gnu.expr.Compilation comp; int n; comp.letStart();helper.comp = comp;helper.scanners = new ScanHelper[n];
    

    for (int i = 0; i != n; 
        
        i++) helper.scanners[i] = helper.makeScanner(exp.getArg(i + 1), null);
    if (func.side_effects())
    {
      func = new gnu.expr.ReferenceExp(comp.letVariable(null, null, func)); }
    gnu.expr.Expression arg; for (int i = 1; i <= n; 
        

        i++)
    {
      arg = kawa.lib.kawa.expressions.visitExp(exp.getArg(i));
      exp.setArg(i, arg);
      helper.scanners[(i - 1)].init(arg); }
    helper.initialize(exp, comp);
    comp.letEnter();
    
    gnu.expr.LambdaExp loopLambda = comp.loopStart();
    comp.loopEnter();
    try
    {
      return comp.letDone(helper.collectResult(comp.loopDone((gnu.expr.Expression)(arg = gnu.mapping.Promise.force($heapFrame.lambda1loop(loopLambda, comp, Integer.valueOf(n), 0, gnu.lists.LList.Empty), gnu.expr.Expression.class))))); } catch (ClassCastException localClassCastException) { throw new gnu.mapping.WrongType(localClassCastException, "gnu.expr.Compilation.loopDone(gnu.expr.Expression)", 2, arg);
    }
  }
  
  static
  {
    Lit31 = gnu.mapping.Symbol.valueOf("vectorMapValidateApply");
    Lit30 = gnu.mapping.Symbol.valueOf("vectorForEachValidateApply");
    Lit29 = gnu.mapping.Symbol.valueOf("listMapValidateApply");
    Lit28 = gnu.mapping.Symbol.valueOf("listForEachValidateApply");
    Lit27 = gnu.mapping.Symbol.valueOf("stringForEachValidateApply");
    Lit26 = gnu.mapping.Symbol.valueOf("stringForEach1ValidateApply");
    Lit25 = gnu.mapping.Symbol.valueOf("stringCursorForEachValidateApply");
    Lit24 = gnu.mapping.Symbol.valueOf("scanner-for");
    Lit23 = gnu.mapping.Symbol.valueOf("get");
    Lit22 = gnu.mapping.Symbol.valueOf("size");
    Lit21 = gnu.mapping.Symbol.valueOf("setCdr");
    Lit20 = gnu.bytecode.ClassType.make("gnu.lists.Pair");
    Lit19 = gnu.mapping.Symbol.valueOf("getCdr");
    Lit18 = gnu.mapping.Symbol.valueOf("getCar");
    Lit17 = gnu.lists.Pair.class;
    Lit16 = gnu.mapping.Symbol.valueOf("next");
    Lit15 = gnu.mapping.Symbol.valueOf("hasNext");
    Lit14 = gnu.mapping.Symbol.valueOf("iterator");
    Lit13 = gnu.bytecode.ClassType.make("java.util.Iterator");
    Lit12 = gnu.mapping.Symbol.valueOf("getIterator");
    Lit11 = gnu.lists.Sequences.class;
    Lit10 = gnu.mapping.Symbol.valueOf("length");
    Lit9 = gnu.mapping.Symbol.valueOf("add");
    Lit8 = gnu.mapping.Symbol.valueOf("set");
    Lit7 = gnu.math.IntNum.valueOf(1);
    Lit6 = gnu.math.IntNum.valueOf(2);
    Lit5 = gnu.math.IntNum.valueOf(65535);
    Lit4 = gnu.math.IntNum.valueOf(0);
    Lit3 = Iterable.class;
    Lit2 = java.util.RandomAccess.class;
    Lit1 = java.util.List.class;
    Lit0 = CharSequence.class;
    FVector = gnu.lists.FVector.class;
    Convert = gnu.kawa.functions.Convert.class;
    $instance = new compile_map();
    ScanHelper = ScanHelper.class;
    compile_map localCompile_map = $instance;
    scanner$Mnfor = new gnu.expr.ModuleMethod(localCompile_map, 1, Lit24, 12291);
    MapHelper = MapHelper.class;
    stringCursorForEachValidateApply = new gnu.expr.ModuleMethod(localCompile_map, 2, Lit25, 16388);
    stringForEach1ValidateApply = new gnu.expr.ModuleMethod(localCompile_map, 3, Lit26, 16388);
    StringScanner = StringScanner.class;
    stringForEachValidateApply = new gnu.expr.ModuleMethod(localCompile_map, 4, Lit27, 16388);
    IterableScanner = IterableScanner.class;
    ListScanner = ListScanner.class;
    ListMapHelper = ListMapHelper.class;
    listForEachValidateApply = new gnu.expr.ModuleMethod(localCompile_map, 5, Lit28, 16388);
    listMapValidateApply = new gnu.expr.ModuleMethod(localCompile_map, 6, Lit29, 16388);
    ArrayScanner = ArrayScanner.class;
    VectorScanner = VectorScanner.class;
    vectorForEachValidateApply = new gnu.expr.ModuleMethod(localCompile_map, 7, Lit30, 16388);
    vectorMapValidateApply = new gnu.expr.ModuleMethod(localCompile_map, 8, Lit31, 16388);
    validate$Mngeneric$Mnfor$Mneach = new gnu.expr.ModuleMethod(localCompile_map, 9, Lit32, 12291);
    $runBody$();
  }
  
  public compile_map()
  {
    gnu.expr.ModuleInfo.register(this);
  }
  
  /* Error */
  public int match3(gnu.expr.ModuleMethod arg1, Object arg2, Object arg3, Object arg4, gnu.mapping.CallContext arg5)
  {
    // Byte code:
    //   0: aload_1
    //   1: getfield 480	gnu/expr/ModuleMethod:selector	I
    //   4: lookupswitch	default:+194->198, 1:+110->114, 9:+28->32
    //   32: aload 5
    //   34: aload_2
    //   35: ldc 86
    //   37: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   40: dup
    //   41: instanceof 86
    //   44: ifne +7 -> 51
    //   47: ldc_w 481
    //   50: ireturn
    //   51: putfield 485	gnu/mapping/CallContext:value1	Ljava/lang/Object;
    //   54: aload 5
    //   56: aload_3
    //   57: ldc 24
    //   59: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   62: dup
    //   63: instanceof 24
    //   66: ifne +7 -> 73
    //   69: ldc_w 486
    //   72: ireturn
    //   73: putfield 489	gnu/mapping/CallContext:value2	Ljava/lang/Object;
    //   76: aload 5
    //   78: aload 4
    //   80: ldc_w 328
    //   83: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   86: dup
    //   87: instanceof 328
    //   90: ifne +7 -> 97
    //   93: ldc_w 490
    //   96: ireturn
    //   97: putfield 493	gnu/mapping/CallContext:value3	Ljava/lang/Object;
    //   100: aload 5
    //   102: aload_1
    //   103: putfield 497	gnu/mapping/CallContext:proc	Lgnu/mapping/Procedure;
    //   106: aload 5
    //   108: iconst_3
    //   109: putfield 500	gnu/mapping/CallContext:pc	I
    //   112: iconst_0
    //   113: ireturn
    //   114: aload 5
    //   116: aload_2
    //   117: ldc 12
    //   119: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   122: dup
    //   123: instanceof 12
    //   126: ifne +7 -> 133
    //   129: ldc_w 481
    //   132: ireturn
    //   133: putfield 485	gnu/mapping/CallContext:value1	Ljava/lang/Object;
    //   136: aload 5
    //   138: aload_3
    //   139: ldc 24
    //   141: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   144: dup
    //   145: invokestatic 504	gnu/kawa/lispexpr/LangObjType:coerceToTypeOrNull	(Ljava/lang/Object;)Lgnu/bytecode/Type;
    //   148: ifnull +6 -> 154
    //   151: goto +7 -> 158
    //   154: ldc_w 486
    //   157: ireturn
    //   158: putfield 489	gnu/mapping/CallContext:value2	Ljava/lang/Object;
    //   161: aload 5
    //   163: aload 4
    //   165: ldc 102
    //   167: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   170: dup
    //   171: instanceof 102
    //   174: ifne +7 -> 181
    //   177: ldc_w 490
    //   180: ireturn
    //   181: putfield 493	gnu/mapping/CallContext:value3	Ljava/lang/Object;
    //   184: aload 5
    //   186: aload_1
    //   187: putfield 497	gnu/mapping/CallContext:proc	Lgnu/mapping/Procedure;
    //   190: aload 5
    //   192: iconst_3
    //   193: putfield 500	gnu/mapping/CallContext:pc	I
    //   196: iconst_0
    //   197: ireturn
    //   198: aload_0
    //   199: aload_1
    //   200: aload_2
    //   201: aload_3
    //   202: aload 4
    //   204: aload 5
    //   206: invokespecial 508	gnu/expr/ModuleBody:match3	(Lgnu/expr/ModuleMethod;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lgnu/mapping/CallContext;)I
    //   209: ireturn
    // Line number table:
    //   Java source line #328	-> byte code offset #32
    //   Java source line #13	-> byte code offset #114
  }
  
  public void apply(gnu.mapping.CallContext paramCallContext)
  {
    gnu.expr.ModuleMethod.applyError();
  }
  
  /* Error */
  public Object apply3(gnu.expr.ModuleMethod paramModuleMethod, Object paramObject1, Object paramObject2, Object paramObject3)
  {
    // Byte code:
    //   0: aload_1
    //   1: getfield 480	gnu/expr/ModuleMethod:selector	I
    //   4: lookupswitch	default:+93->97, 1:+28->32, 9:+60->64
    //   32: aload_2
    //   33: ldc 12
    //   35: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   38: checkcast 12	gnu/expr/Expression
    //   41: aload_3
    //   42: ldc 24
    //   44: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   47: invokestatic 524	gnu/kawa/lispexpr/LangObjType:coerceToType	(Ljava/lang/Object;)Lgnu/bytecode/Type;
    //   50: aload 4
    //   52: ldc 102
    //   54: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   57: checkcast 102	gnu/expr/Compilation
    //   60: invokestatic 528	kawa/lib/compile_map:scannerFor	(Lgnu/expr/Expression;Lgnu/bytecode/Type;Lgnu/expr/Compilation;)Lkawa/lib/ScanHelper;
    //   63: areturn
    //   64: aload_2
    //   65: ldc 86
    //   67: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   70: checkcast 86	gnu/expr/ApplyExp
    //   73: aload_3
    //   74: ldc 24
    //   76: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   79: checkcast 24	gnu/bytecode/Type
    //   82: aload 4
    //   84: ldc_w 328
    //   87: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   90: checkcast 328	kawa/lib/MapHelper
    //   93: invokestatic 303	kawa/lib/compile_map:validateGenericForEach	(Lgnu/expr/ApplyExp;Lgnu/bytecode/Type;Lkawa/lib/MapHelper;)Lgnu/expr/LetExp;
    //   96: areturn
    //   97: aload_0
    //   98: aload_1
    //   99: aload_2
    //   100: aload_3
    //   101: aload 4
    //   103: invokespecial 534	gnu/expr/ModuleBody:apply3	(Lgnu/expr/ModuleMethod;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   106: areturn
    //   107: new 288	gnu/mapping/WrongType
    //   110: dup_x1
    //   111: swap
    //   112: ldc_w 521
    //   115: iconst_1
    //   116: aload_2
    //   117: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   120: athrow
    //   121: new 288	gnu/mapping/WrongType
    //   124: dup_x1
    //   125: swap
    //   126: ldc_w 521
    //   129: iconst_2
    //   130: aload_3
    //   131: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   134: athrow
    //   135: new 288	gnu/mapping/WrongType
    //   138: dup_x1
    //   139: swap
    //   140: ldc_w 521
    //   143: iconst_3
    //   144: aload 4
    //   146: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   149: athrow
    //   150: new 288	gnu/mapping/WrongType
    //   153: dup_x1
    //   154: swap
    //   155: ldc_w 530
    //   158: iconst_1
    //   159: aload_2
    //   160: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   163: athrow
    //   164: new 288	gnu/mapping/WrongType
    //   167: dup_x1
    //   168: swap
    //   169: ldc_w 530
    //   172: iconst_2
    //   173: aload_3
    //   174: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   177: athrow
    //   178: new 288	gnu/mapping/WrongType
    //   181: dup_x1
    //   182: swap
    //   183: ldc_w 530
    //   186: iconst_3
    //   187: aload 4
    //   189: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   192: athrow
    // Line number table:
    //   Java source line #13	-> byte code offset #32
    //   Java source line #328	-> byte code offset #64
    //   Java source line #13	-> byte code offset #107
    //   Java source line #328	-> byte code offset #150
    //   Java source line #329	-> byte code offset #164
    //   Java source line #330	-> byte code offset #178
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	193	0	this	compile_map
    //   0	193	1	paramModuleMethod	gnu.expr.ModuleMethod
    //   0	193	2	paramObject1	Object
    //   0	193	3	paramObject2	Object
    //   0	193	4	paramObject3	Object
    //   107	1	5	localClassCastException1	ClassCastException
    //   121	1	6	localClassCastException2	ClassCastException
    //   135	1	7	localClassCastException3	ClassCastException
    //   150	1	8	localClassCastException4	ClassCastException
    //   164	1	9	localClassCastException5	ClassCastException
    //   178	1	10	localClassCastException6	ClassCastException
    // Exception table:
    //   from	to	target	type
    //   38	41	107	java/lang/ClassCastException
    //   47	50	121	java/lang/ClassCastException
    //   57	60	135	java/lang/ClassCastException
    //   70	73	150	java/lang/ClassCastException
    //   79	82	164	java/lang/ClassCastException
    //   90	93	178	java/lang/ClassCastException
  }
  
  /* Error */
  public Object apply4(gnu.expr.ModuleMethod paramModuleMethod, Object paramObject1, Object paramObject2, Object paramObject3, Object paramObject4)
  {
    // Byte code:
    //   0: aload_1
    //   1: getfield 480	gnu/expr/ModuleMethod:selector	I
    //   4: tableswitch	default:+345->349, 2:+44->48, 3:+87->91, 4:+130->134, 5:+173->177, 6:+216->220, 7:+259->263, 8:+302->306
    //   48: aload_2
    //   49: ldc 86
    //   51: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   54: checkcast 86	gnu/expr/ApplyExp
    //   57: aload_3
    //   58: ldc -32
    //   60: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   63: checkcast 224	gnu/expr/InlineCalls
    //   66: aload 4
    //   68: ldc 24
    //   70: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   73: checkcast 24	gnu/bytecode/Type
    //   76: aload 5
    //   78: ldc_w 274
    //   81: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   84: checkcast 274	gnu/mapping/Procedure
    //   87: invokestatic 538	kawa/lib/compile_map:stringCursorForEachValidateApply	(Lgnu/expr/ApplyExp;Lgnu/expr/InlineCalls;Lgnu/bytecode/Type;Lgnu/mapping/Procedure;)Lgnu/expr/Expression;
    //   90: areturn
    //   91: aload_2
    //   92: ldc 86
    //   94: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   97: checkcast 86	gnu/expr/ApplyExp
    //   100: aload_3
    //   101: ldc -32
    //   103: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   106: checkcast 224	gnu/expr/InlineCalls
    //   109: aload 4
    //   111: ldc 24
    //   113: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   116: checkcast 24	gnu/bytecode/Type
    //   119: aload 5
    //   121: ldc_w 274
    //   124: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   127: checkcast 274	gnu/mapping/Procedure
    //   130: invokestatic 541	kawa/lib/compile_map:stringForEach1ValidateApply	(Lgnu/expr/ApplyExp;Lgnu/expr/InlineCalls;Lgnu/bytecode/Type;Lgnu/mapping/Procedure;)Lgnu/expr/Expression;
    //   133: areturn
    //   134: aload_2
    //   135: ldc 86
    //   137: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   140: checkcast 86	gnu/expr/ApplyExp
    //   143: aload_3
    //   144: ldc -32
    //   146: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   149: checkcast 224	gnu/expr/InlineCalls
    //   152: aload 4
    //   154: ldc 24
    //   156: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   159: checkcast 24	gnu/bytecode/Type
    //   162: aload 5
    //   164: ldc_w 274
    //   167: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   170: checkcast 274	gnu/mapping/Procedure
    //   173: invokestatic 544	kawa/lib/compile_map:stringForEachValidateApply	(Lgnu/expr/ApplyExp;Lgnu/expr/InlineCalls;Lgnu/bytecode/Type;Lgnu/mapping/Procedure;)Lgnu/expr/Expression;
    //   176: areturn
    //   177: aload_2
    //   178: ldc 86
    //   180: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   183: checkcast 86	gnu/expr/ApplyExp
    //   186: aload_3
    //   187: ldc -32
    //   189: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   192: checkcast 224	gnu/expr/InlineCalls
    //   195: aload 4
    //   197: ldc 24
    //   199: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   202: checkcast 24	gnu/bytecode/Type
    //   205: aload 5
    //   207: ldc_w 274
    //   210: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   213: checkcast 274	gnu/mapping/Procedure
    //   216: invokestatic 547	kawa/lib/compile_map:listForEachValidateApply	(Lgnu/expr/ApplyExp;Lgnu/expr/InlineCalls;Lgnu/bytecode/Type;Lgnu/mapping/Procedure;)Lgnu/expr/Expression;
    //   219: areturn
    //   220: aload_2
    //   221: ldc 86
    //   223: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   226: checkcast 86	gnu/expr/ApplyExp
    //   229: aload_3
    //   230: ldc -32
    //   232: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   235: checkcast 224	gnu/expr/InlineCalls
    //   238: aload 4
    //   240: ldc 24
    //   242: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   245: checkcast 24	gnu/bytecode/Type
    //   248: aload 5
    //   250: ldc_w 274
    //   253: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   256: checkcast 274	gnu/mapping/Procedure
    //   259: invokestatic 550	kawa/lib/compile_map:listMapValidateApply	(Lgnu/expr/ApplyExp;Lgnu/expr/InlineCalls;Lgnu/bytecode/Type;Lgnu/mapping/Procedure;)Lgnu/expr/Expression;
    //   262: areturn
    //   263: aload_2
    //   264: ldc 86
    //   266: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   269: checkcast 86	gnu/expr/ApplyExp
    //   272: aload_3
    //   273: ldc -32
    //   275: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   278: checkcast 224	gnu/expr/InlineCalls
    //   281: aload 4
    //   283: ldc 24
    //   285: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   288: checkcast 24	gnu/bytecode/Type
    //   291: aload 5
    //   293: ldc_w 274
    //   296: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   299: checkcast 274	gnu/mapping/Procedure
    //   302: invokestatic 553	kawa/lib/compile_map:vectorForEachValidateApply	(Lgnu/expr/ApplyExp;Lgnu/expr/InlineCalls;Lgnu/bytecode/Type;Lgnu/mapping/Procedure;)Lgnu/expr/Expression;
    //   305: areturn
    //   306: aload_2
    //   307: ldc 86
    //   309: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   312: checkcast 86	gnu/expr/ApplyExp
    //   315: aload_3
    //   316: ldc -32
    //   318: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   321: checkcast 224	gnu/expr/InlineCalls
    //   324: aload 4
    //   326: ldc 24
    //   328: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   331: checkcast 24	gnu/bytecode/Type
    //   334: aload 5
    //   336: ldc_w 274
    //   339: invokestatic 284	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
    //   342: checkcast 274	gnu/mapping/Procedure
    //   345: invokestatic 556	kawa/lib/compile_map:vectorMapValidateApply	(Lgnu/expr/ApplyExp;Lgnu/expr/InlineCalls;Lgnu/bytecode/Type;Lgnu/mapping/Procedure;)Lgnu/expr/Expression;
    //   348: areturn
    //   349: aload_0
    //   350: aload_1
    //   351: aload_2
    //   352: aload_3
    //   353: aload 4
    //   355: aload 5
    //   357: invokespecial 560	gnu/expr/ModuleBody:apply4	(Lgnu/expr/ModuleMethod;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    //   360: areturn
    //   361: new 288	gnu/mapping/WrongType
    //   364: dup_x1
    //   365: swap
    //   366: ldc_w 535
    //   369: iconst_1
    //   370: aload_2
    //   371: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   374: athrow
    //   375: new 288	gnu/mapping/WrongType
    //   378: dup_x1
    //   379: swap
    //   380: ldc_w 535
    //   383: iconst_2
    //   384: aload_3
    //   385: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   388: athrow
    //   389: new 288	gnu/mapping/WrongType
    //   392: dup_x1
    //   393: swap
    //   394: ldc_w 535
    //   397: iconst_3
    //   398: aload 4
    //   400: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   403: athrow
    //   404: new 288	gnu/mapping/WrongType
    //   407: dup_x1
    //   408: swap
    //   409: ldc_w 535
    //   412: iconst_4
    //   413: aload 5
    //   415: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   418: athrow
    //   419: new 288	gnu/mapping/WrongType
    //   422: dup_x1
    //   423: swap
    //   424: ldc_w 539
    //   427: iconst_1
    //   428: aload_2
    //   429: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   432: athrow
    //   433: new 288	gnu/mapping/WrongType
    //   436: dup_x1
    //   437: swap
    //   438: ldc_w 539
    //   441: iconst_2
    //   442: aload_3
    //   443: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   446: athrow
    //   447: new 288	gnu/mapping/WrongType
    //   450: dup_x1
    //   451: swap
    //   452: ldc_w 539
    //   455: iconst_3
    //   456: aload 4
    //   458: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   461: athrow
    //   462: new 288	gnu/mapping/WrongType
    //   465: dup_x1
    //   466: swap
    //   467: ldc_w 539
    //   470: iconst_4
    //   471: aload 5
    //   473: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   476: athrow
    //   477: new 288	gnu/mapping/WrongType
    //   480: dup_x1
    //   481: swap
    //   482: ldc_w 542
    //   485: iconst_1
    //   486: aload_2
    //   487: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   490: athrow
    //   491: new 288	gnu/mapping/WrongType
    //   494: dup_x1
    //   495: swap
    //   496: ldc_w 542
    //   499: iconst_2
    //   500: aload_3
    //   501: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   504: athrow
    //   505: new 288	gnu/mapping/WrongType
    //   508: dup_x1
    //   509: swap
    //   510: ldc_w 542
    //   513: iconst_3
    //   514: aload 4
    //   516: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   519: athrow
    //   520: new 288	gnu/mapping/WrongType
    //   523: dup_x1
    //   524: swap
    //   525: ldc_w 542
    //   528: iconst_4
    //   529: aload 5
    //   531: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   534: athrow
    //   535: new 288	gnu/mapping/WrongType
    //   538: dup_x1
    //   539: swap
    //   540: ldc_w 545
    //   543: iconst_1
    //   544: aload_2
    //   545: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   548: athrow
    //   549: new 288	gnu/mapping/WrongType
    //   552: dup_x1
    //   553: swap
    //   554: ldc_w 545
    //   557: iconst_2
    //   558: aload_3
    //   559: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   562: athrow
    //   563: new 288	gnu/mapping/WrongType
    //   566: dup_x1
    //   567: swap
    //   568: ldc_w 545
    //   571: iconst_3
    //   572: aload 4
    //   574: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   577: athrow
    //   578: new 288	gnu/mapping/WrongType
    //   581: dup_x1
    //   582: swap
    //   583: ldc_w 545
    //   586: iconst_4
    //   587: aload 5
    //   589: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   592: athrow
    //   593: new 288	gnu/mapping/WrongType
    //   596: dup_x1
    //   597: swap
    //   598: ldc_w 548
    //   601: iconst_1
    //   602: aload_2
    //   603: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   606: athrow
    //   607: new 288	gnu/mapping/WrongType
    //   610: dup_x1
    //   611: swap
    //   612: ldc_w 548
    //   615: iconst_2
    //   616: aload_3
    //   617: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   620: athrow
    //   621: new 288	gnu/mapping/WrongType
    //   624: dup_x1
    //   625: swap
    //   626: ldc_w 548
    //   629: iconst_3
    //   630: aload 4
    //   632: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   635: athrow
    //   636: new 288	gnu/mapping/WrongType
    //   639: dup_x1
    //   640: swap
    //   641: ldc_w 548
    //   644: iconst_4
    //   645: aload 5
    //   647: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   650: athrow
    //   651: new 288	gnu/mapping/WrongType
    //   654: dup_x1
    //   655: swap
    //   656: ldc_w 551
    //   659: iconst_1
    //   660: aload_2
    //   661: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   664: athrow
    //   665: new 288	gnu/mapping/WrongType
    //   668: dup_x1
    //   669: swap
    //   670: ldc_w 551
    //   673: iconst_2
    //   674: aload_3
    //   675: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   678: athrow
    //   679: new 288	gnu/mapping/WrongType
    //   682: dup_x1
    //   683: swap
    //   684: ldc_w 551
    //   687: iconst_3
    //   688: aload 4
    //   690: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   693: athrow
    //   694: new 288	gnu/mapping/WrongType
    //   697: dup_x1
    //   698: swap
    //   699: ldc_w 551
    //   702: iconst_4
    //   703: aload 5
    //   705: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   708: athrow
    //   709: new 288	gnu/mapping/WrongType
    //   712: dup_x1
    //   713: swap
    //   714: ldc_w 554
    //   717: iconst_1
    //   718: aload_2
    //   719: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   722: athrow
    //   723: new 288	gnu/mapping/WrongType
    //   726: dup_x1
    //   727: swap
    //   728: ldc_w 554
    //   731: iconst_2
    //   732: aload_3
    //   733: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   736: athrow
    //   737: new 288	gnu/mapping/WrongType
    //   740: dup_x1
    //   741: swap
    //   742: ldc_w 554
    //   745: iconst_3
    //   746: aload 4
    //   748: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   751: athrow
    //   752: new 288	gnu/mapping/WrongType
    //   755: dup_x1
    //   756: swap
    //   757: ldc_w 554
    //   760: iconst_4
    //   761: aload 5
    //   763: invokespecial 293	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
    //   766: athrow
    // Line number table:
    //   Java source line #43	-> byte code offset #48
    //   Java source line #82	-> byte code offset #91
    //   Java source line #129	-> byte code offset #134
    //   Java source line #237	-> byte code offset #177
    //   Java source line #242	-> byte code offset #220
    //   Java source line #289	-> byte code offset #263
    //   Java source line #296	-> byte code offset #306
    //   Java source line #43	-> byte code offset #361
    //   Java source line #82	-> byte code offset #419
    //   Java source line #129	-> byte code offset #477
    //   Java source line #237	-> byte code offset #535
    //   Java source line #242	-> byte code offset #593
    //   Java source line #289	-> byte code offset #651
    //   Java source line #296	-> byte code offset #709
    // Local variable table:
    //   start	length	slot	name	signature
    //   0	767	0	this	compile_map
    //   0	767	1	paramModuleMethod	gnu.expr.ModuleMethod
    //   0	767	2	paramObject1	Object
    //   0	767	3	paramObject2	Object
    //   0	767	4	paramObject3	Object
    //   0	767	5	paramObject4	Object
    //   361	1	6	localClassCastException1	ClassCastException
    //   375	1	7	localClassCastException2	ClassCastException
    //   389	1	8	localClassCastException3	ClassCastException
    //   404	1	9	localClassCastException4	ClassCastException
    //   419	1	10	localClassCastException5	ClassCastException
    //   433	1	11	localClassCastException6	ClassCastException
    //   447	1	12	localClassCastException7	ClassCastException
    //   462	1	13	localClassCastException8	ClassCastException
    //   477	1	14	localClassCastException9	ClassCastException
    //   491	1	15	localClassCastException10	ClassCastException
    //   505	1	16	localClassCastException11	ClassCastException
    //   520	1	17	localClassCastException12	ClassCastException
    //   535	1	18	localClassCastException13	ClassCastException
    //   549	1	19	localClassCastException14	ClassCastException
    //   563	1	20	localClassCastException15	ClassCastException
    //   578	1	21	localClassCastException16	ClassCastException
    //   593	1	22	localClassCastException17	ClassCastException
    //   607	1	23	localClassCastException18	ClassCastException
    //   621	1	24	localClassCastException19	ClassCastException
    //   636	1	25	localClassCastException20	ClassCastException
    //   651	1	26	localClassCastException21	ClassCastException
    //   665	1	27	localClassCastException22	ClassCastException
    //   679	1	28	localClassCastException23	ClassCastException
    //   694	1	29	localClassCastException24	ClassCastException
    //   709	1	30	localClassCastException25	ClassCastException
    //   723	1	31	localClassCastException26	ClassCastException
    //   737	1	32	localClassCastException27	ClassCastException
    //   752	1	33	localClassCastException28	ClassCastException
    // Exception table:
    //   from	to	target	type
    //   54	57	361	java/lang/ClassCastException
    //   63	66	375	java/lang/ClassCastException
    //   73	76	389	java/lang/ClassCastException
    //   84	87	404	java/lang/ClassCastException
    //   97	100	419	java/lang/ClassCastException
    //   106	109	433	java/lang/ClassCastException
    //   116	119	447	java/lang/ClassCastException
    //   127	130	462	java/lang/ClassCastException
    //   140	143	477	java/lang/ClassCastException
    //   149	152	491	java/lang/ClassCastException
    //   159	162	505	java/lang/ClassCastException
    //   170	173	520	java/lang/ClassCastException
    //   183	186	535	java/lang/ClassCastException
    //   192	195	549	java/lang/ClassCastException
    //   202	205	563	java/lang/ClassCastException
    //   213	216	578	java/lang/ClassCastException
    //   226	229	593	java/lang/ClassCastException
    //   235	238	607	java/lang/ClassCastException
    //   245	248	621	java/lang/ClassCastException
    //   256	259	636	java/lang/ClassCastException
    //   269	272	651	java/lang/ClassCastException
    //   278	281	665	java/lang/ClassCastException
    //   288	291	679	java/lang/ClassCastException
    //   299	302	694	java/lang/ClassCastException
    //   312	315	709	java/lang/ClassCastException
    //   321	324	723	java/lang/ClassCastException
    //   331	334	737	java/lang/ClassCastException
    //   342	345	752	java/lang/ClassCastException
  }
  
  public class frame
    extends gnu.expr.ModuleBody
  {
    gnu.expr.Expression func;
    MapHelper helper;
    
    public frame() {}
    
    /* Error */
    public Object lambda1loop(Object loopLambda, Object comp, Object n, int i, Object chlist)
    {
      // Byte code:
      //   0: iload 4
      //   2: aload_3
      //   3: invokestatic 6	gnu/mapping/Promise:force	(Ljava/lang/Object;)Ljava/lang/Object;
      //   6: checkcast 8	java/lang/Number
      //   9: invokevirtual 12	java/lang/Number:intValue	()I
      //   12: if_icmpne +241 -> 253
      //   15: getstatic 18	kawa/lib/kawa/expressions:begin$Mnexp	Lgnu/expr/ModuleMethod;
      //   18: iconst_2
      //   19: istore 6
      //   21: aload_0
      //   22: getfield 24	kawa/lib/compile_map$frame:helper	Lkawa/lib/MapHelper;
      //   25: aload_0
      //   26: getfield 24	kawa/lib/compile_map$frame:helper	Lkawa/lib/MapHelper;
      //   29: aload_0
      //   30: getfield 28	kawa/lib/compile_map$frame:func	Lgnu/expr/Expression;
      //   33: aload 5
      //   35: ldc 30
      //   37: invokestatic 33	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      //   40: dup
      //   41: astore 7
      //   43: checkcast 30	gnu/lists/LList
      //   46: invokestatic 48	kawa/lib/lists:reverse	(Lgnu/lists/LList;)Lgnu/lists/LList;
      //   49: invokevirtual 54	kawa/lib/MapHelper:applyFunction	(Ljava/lang/Object;Ljava/lang/Object;)Lgnu/expr/Expression;
      //   52: invokevirtual 58	kawa/lib/MapHelper:doCollect	(Lgnu/expr/Expression;)Lgnu/expr/Expression;
      //   55: astore 7
      //   57: aload_3
      //   58: invokestatic 6	gnu/mapping/Promise:force	(Ljava/lang/Object;)Ljava/lang/Object;
      //   61: checkcast 8	java/lang/Number
      //   64: invokevirtual 12	java/lang/Number:intValue	()I
      //   67: aload 5
      //   69: getstatic 62	gnu/lists/LList:Empty	Lgnu/lists/EmptyList;
      //   72: astore 10
      //   74: astore 9
      //   76: istore 8
      //   78: iload 8
      //   80: ifne +8 -> 88
      //   83: aload 10
      //   85: goto +79 -> 164
      //   88: iload 8
      //   90: iconst_1
      //   91: isub
      //   92: istore 11
      //   94: aload_0
      //   95: getfield 24	kawa/lib/compile_map$frame:helper	Lkawa/lib/MapHelper;
      //   98: getfield 66	kawa/lib/MapHelper:scanners	[Lkawa/lib/ScanHelper;
      //   101: iload 11
      //   103: aaload
      //   104: astore 12
      //   106: iload 11
      //   108: aload 9
      //   110: ldc 68
      //   112: invokestatic 33	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      //   115: dup
      //   116: astore 13
      //   118: checkcast 68	gnu/lists/Pair
      //   121: invokestatic 73	kawa/lib/lists:cdr	(Lgnu/lists/Pair;)Ljava/lang/Object;
      //   124: aload 12
      //   126: aload 9
      //   128: ldc 68
      //   130: invokestatic 33	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      //   133: dup
      //   134: astore 13
      //   136: checkcast 68	gnu/lists/Pair
      //   139: invokestatic 77	kawa/lib/lists:car	(Lgnu/lists/Pair;)Ljava/lang/Object;
      //   142: ldc 79
      //   144: invokestatic 33	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      //   147: dup
      //   148: astore 13
      //   150: checkcast 79	gnu/expr/Declaration
      //   153: invokevirtual 87	kawa/lib/ScanHelper:incr	(Lgnu/expr/Declaration;)Lgnu/expr/Expression;
      //   156: aload 10
      //   158: invokestatic 91	kawa/lib/lists:cons	(Ljava/lang/Object;Ljava/lang/Object;)Lgnu/lists/Pair;
      //   161: goto -89 -> 72
      //   164: astore 8
      //   166: aload 8
      //   168: invokestatic 97	gnu/kawa/functions/MakeSplice:count	(Ljava/lang/Object;)I
      //   171: dup
      //   172: istore 9
      //   174: iload 6
      //   176: iadd
      //   177: istore 6
      //   179: iload 6
      //   181: anewarray 99	java/lang/Object
      //   184: dup
      //   185: iconst_0
      //   186: aload 7
      //   188: aastore
      //   189: dup
      //   190: iconst_1
      //   191: istore 10
      //   193: iload 10
      //   195: iload 9
      //   197: aload 8
      //   199: invokestatic 103	gnu/kawa/functions/MakeSplice:copyTo	([Ljava/lang/Object;IILjava/lang/Object;)V
      //   202: iload 10
      //   204: iload 9
      //   206: iadd
      //   207: istore 10
      //   209: dup
      //   210: iload 10
      //   212: aload_2
      //   213: ldc 105
      //   215: invokestatic 33	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      //   218: dup
      //   219: astore 11
      //   221: checkcast 105	gnu/expr/Compilation
      //   224: aload_1
      //   225: ldc 109
      //   227: invokestatic 33	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      //   230: dup
      //   231: astore 11
      //   233: checkcast 109	gnu/expr/LambdaExp
      //   236: iconst_0
      //   237: anewarray 111	gnu/expr/Expression
      //   240: invokevirtual 115	gnu/expr/Compilation:loopRepeat	(Lgnu/expr/LambdaExp;[Lgnu/expr/Expression;)Lgnu/expr/Expression;
      //   243: aastore
      //   244: iinc 10 1
      //   247: invokevirtual 121	gnu/mapping/Procedure:applyN	([Ljava/lang/Object;)Ljava/lang/Object;
      //   250: goto +108 -> 358
      //   253: aload_0
      //   254: getfield 24	kawa/lib/compile_map$frame:helper	Lkawa/lib/MapHelper;
      //   257: getfield 66	kawa/lib/MapHelper:scanners	[Lkawa/lib/ScanHelper;
      //   260: iload 4
      //   262: aaload
      //   263: invokevirtual 125	kawa/lib/ScanHelper:test	()Lgnu/expr/Expression;
      //   266: aload_2
      //   267: ldc 105
      //   269: invokestatic 33	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      //   272: dup
      //   273: astore 6
      //   275: checkcast 105	gnu/expr/Compilation
      //   278: invokevirtual 131	gnu/expr/Compilation:letStart	()V
      //   281: aload_0
      //   282: getfield 24	kawa/lib/compile_map$frame:helper	Lkawa/lib/MapHelper;
      //   285: getfield 66	kawa/lib/MapHelper:scanners	[Lkawa/lib/ScanHelper;
      //   288: iload 4
      //   290: aaload
      //   291: invokevirtual 135	kawa/lib/ScanHelper:eval	()Lgnu/expr/Declaration;
      //   294: astore 6
      //   296: aload_2
      //   297: ldc 105
      //   299: invokestatic 33	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      //   302: dup
      //   303: astore 7
      //   305: checkcast 105	gnu/expr/Compilation
      //   308: invokevirtual 140	gnu/expr/Compilation:letEnter	()V
      //   311: aload_2
      //   312: ldc 105
      //   314: invokestatic 33	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      //   317: dup
      //   318: astore 7
      //   320: checkcast 105	gnu/expr/Compilation
      //   323: aload_0
      //   324: aload_1
      //   325: aload_2
      //   326: aload_3
      //   327: iload 4
      //   329: iconst_1
      //   330: iadd
      //   331: aload 6
      //   333: aload 5
      //   335: invokestatic 91	kawa/lib/lists:cons	(Ljava/lang/Object;Ljava/lang/Object;)Lgnu/lists/Pair;
      //   338: invokevirtual 146	kawa/lib/compile_map$frame:lambda1loop	(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;
      //   341: ldc 111
      //   343: invokestatic 33	gnu/mapping/Promise:force	(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      //   346: dup
      //   347: astore 7
      //   349: checkcast 111	gnu/expr/Expression
      //   352: invokevirtual 150	gnu/expr/Compilation:letDone	(Lgnu/expr/Expression;)Lgnu/expr/LetExp;
      //   355: invokestatic 154	kawa/lib/kawa/expressions:ifExp	(Ljava/lang/Object;Ljava/lang/Object;)Lgnu/expr/IfExp;
      //   358: areturn
      //   359: new 37	gnu/mapping/WrongType
      //   362: dup_x1
      //   363: swap
      //   364: ldc 39
      //   366: iconst_1
      //   367: aload 7
      //   369: invokespecial 43	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
      //   372: athrow
      //   373: new 37	gnu/mapping/WrongType
      //   376: dup_x1
      //   377: swap
      //   378: ldc 70
      //   380: iconst_1
      //   381: aload 13
      //   383: invokespecial 43	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
      //   386: athrow
      //   387: new 37	gnu/mapping/WrongType
      //   390: dup_x1
      //   391: swap
      //   392: ldc 75
      //   394: iconst_1
      //   395: aload 13
      //   397: invokespecial 43	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
      //   400: athrow
      //   401: new 37	gnu/mapping/WrongType
      //   404: dup_x1
      //   405: swap
      //   406: ldc 81
      //   408: iconst_2
      //   409: aload 13
      //   411: invokespecial 43	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
      //   414: athrow
      //   415: new 37	gnu/mapping/WrongType
      //   418: dup_x1
      //   419: swap
      //   420: ldc 107
      //   422: iconst_1
      //   423: aload 11
      //   425: invokespecial 43	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
      //   428: athrow
      //   429: new 37	gnu/mapping/WrongType
      //   432: dup_x1
      //   433: swap
      //   434: ldc 107
      //   436: iconst_2
      //   437: aload 11
      //   439: invokespecial 43	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
      //   442: athrow
      //   443: new 37	gnu/mapping/WrongType
      //   446: dup_x1
      //   447: swap
      //   448: ldc 127
      //   450: iconst_1
      //   451: aload 6
      //   453: invokespecial 43	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
      //   456: athrow
      //   457: new 37	gnu/mapping/WrongType
      //   460: dup_x1
      //   461: swap
      //   462: ldc -119
      //   464: iconst_1
      //   465: aload 7
      //   467: invokespecial 43	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
      //   470: athrow
      //   471: new 37	gnu/mapping/WrongType
      //   474: dup_x1
      //   475: swap
      //   476: ldc -114
      //   478: iconst_1
      //   479: aload 7
      //   481: invokespecial 43	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
      //   484: athrow
      //   485: new 37	gnu/mapping/WrongType
      //   488: dup_x1
      //   489: swap
      //   490: ldc -114
      //   492: iconst_2
      //   493: aload 7
      //   495: invokespecial 43	gnu/mapping/WrongType:<init>	(Ljava/lang/ClassCastException;Ljava/lang/String;ILjava/lang/Object;)V
      //   498: athrow
      // Line number table:
      //   Java source line #355	-> byte code offset #0
      //   Java source line #356	-> byte code offset #15
      //   Java source line #357	-> byte code offset #21
      //   Java source line #358	-> byte code offset #25
      //   Java source line #359	-> byte code offset #57
      //   Java source line #360	-> byte code offset #78
      //   Java source line #361	-> byte code offset #88
      //   Java source line #362	-> byte code offset #94
      //   Java source line #363	-> byte code offset #106
      //   Java source line #364	-> byte code offset #108
      //   Java source line #365	-> byte code offset #124
      //   Java source line #366	-> byte code offset #156
      //   Java source line #367	-> byte code offset #212
      //   Java source line #369	-> byte code offset #253
      //   Java source line #370	-> byte code offset #253
      //   Java source line #372	-> byte code offset #266
      //   Java source line #373	-> byte code offset #281
      //   Java source line #374	-> byte code offset #296
      //   Java source line #375	-> byte code offset #311
      //   Java source line #376	-> byte code offset #323
      //   Java source line #377	-> byte code offset #331
      //   Java source line #358	-> byte code offset #359
      //   Java source line #364	-> byte code offset #373
      //   Java source line #365	-> byte code offset #387
      //   Java source line #367	-> byte code offset #415
      //   Java source line #372	-> byte code offset #443
      //   Java source line #374	-> byte code offset #457
      //   Java source line #375	-> byte code offset #471
      //   Java source line #376	-> byte code offset #485
      // Local variable table:
      //   start	length	slot	name	signature
      //   0	359	0	this	frame
      //   0	358	1	loopLambda	Object
      //   0	358	2	comp	Object
      //   0	358	3	n	Object
      //   0	358	4	i	int
      //   0	358	5	chlist	Object
      //   19	161	6	i	int
      //   273	1	6	localObject1	Object
      //   281	171	6	chValue	gnu.expr.Declaration
      //   41	453	7	localObject2	Object
      //   76	122	8	j	int
      //   74	1	9	localObject3	Object
      //   78	129	9	chlist	Object
      //   172	35	9	localObject4	Object
      //   72	1	10	localEmptyList	gnu.lists.EmptyList
      //   78	133	10	incrs	Object
      //   191	16	10	localObject5	Object
      //   207	4	10	j	int
      //   92	346	11	j1	int
      //   104	21	12	scanner	ScanHelper
      //   116	294	13	localObject6	Object
      //   359	1	21	localClassCastException1	ClassCastException
      //   373	1	22	localClassCastException2	ClassCastException
      //   387	1	23	localClassCastException3	ClassCastException
      //   401	1	24	localClassCastException4	ClassCastException
      //   415	1	25	localClassCastException5	ClassCastException
      //   429	1	26	localClassCastException6	ClassCastException
      //   443	1	27	localClassCastException7	ClassCastException
      //   457	1	28	localClassCastException8	ClassCastException
      //   471	1	29	localClassCastException9	ClassCastException
      //   485	1	30	localClassCastException10	ClassCastException
      // Exception table:
      //   from	to	target	type
      //   43	46	359	java/lang/ClassCastException
      //   118	121	373	java/lang/ClassCastException
      //   136	139	387	java/lang/ClassCastException
      //   150	153	401	java/lang/ClassCastException
      //   221	224	415	java/lang/ClassCastException
      //   233	236	429	java/lang/ClassCastException
      //   275	278	443	java/lang/ClassCastException
      //   305	308	457	java/lang/ClassCastException
      //   320	323	471	java/lang/ClassCastException
      //   349	352	485	java/lang/ClassCastException
    }
  }
}
